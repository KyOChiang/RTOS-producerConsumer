
# 1 "../src/PIC18/TaskControlBlock.c"

# 8 "C:\Program Files\Microchip\xc8\v1.33\include\stdio.h"
typedef int ptrdiff_t;
typedef unsigned size_t;
typedef unsigned short wchar_t;

# 7 "C:\Program Files\Microchip\xc8\v1.33\include\stdarg.h"
typedef void * va_list[1];

#pragma intrinsic(__va_start)
extern void * __va_start(void);

#pragma intrinsic(__va_arg)
extern void * __va_arg(void *, ...);

# 23 "C:\Program Files\Microchip\xc8\v1.33\include\stdio.h"
extern int errno;

# 54
struct __prbuf
{
char * ptr;
void (* func)(char);
};

# 17 "C:\Program Files\Microchip\xc8\v1.33\include\conio.h"
extern int errno;


extern void init_uart(void);

extern char getch(void);
extern char getche(void);
extern void putch(char);
extern void ungetch(char);

extern __bit kbhit(void);

# 31
extern char * cgets(char *);
extern void cputs(const char *);

# 99 "C:\Program Files\Microchip\xc8\v1.33\include\stdio.h"
extern int cprintf(char *, ...);
#pragma printf_check(cprintf)



extern int _doprnt(struct __prbuf *, const register char *, register va_list);


# 191
#pragma printf_check(vprintf) const
#pragma printf_check(vsprintf) const

extern char * gets(char *);
extern int puts(const char *);
extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));

#pragma printf_check(printf) const
#pragma printf_check(sprintf) const
extern int sprintf(char *, const char *, ...);
extern int printf(const char *, ...);

# 4 "../src/PIC18/TaskControlBlock.h"
typedef struct TCB TCB;
struct TCB{
TCB* next;
char priority;
int dataStack;
char status;
char bsr;
char Wreg;
int (*task)(void);
};

int compareTCBPriority(void *elementOfInterest, void *elementInList);

# 4 "../src/PIC18/TaskControlBlock.c"
int compareTCBPriority(void *elementOfInterest, void *elementInList){
TCB* EOI;
TCB* EIL;

EOI = (TCB *)elementOfInterest;
EIL = (TCB *)elementInList;

if(EOI != (0) && EIL == (0))
return 1;
if(EOI != (0) && EIL != (0)){
if(EOI->priority < EIL->priority)
return 1;
else if(EOI->priority == EIL->priority)
return 0;
else if(EOI->priority > EIL->priority)
return 0;
}
else return 0;
return 0;
}
