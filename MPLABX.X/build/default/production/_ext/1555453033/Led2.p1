Version 3.2 HI-TECH Software Intermediate Code
"9 ../src/PIC18/Led2.c
[c E1 0 1 2 .. ]
[n E1 . LED_UNKNOWN_STATUS LED_OFF LED_ON  ]
"12 ../src/PIC18/Led2.h
[s S1 `i 1 `E1 1 `ul 1 ]
[n S1 Led2Data state ledStatus currentClock ]
"12 ../src/PIC18/Clock.h
[v _getCLOCK `(ul ~T0 @X0 0 ef ]
"19 ../src/PIC18/Blinky.h
[v _offLED `(v ~T0 @X0 0 ef ]
"18
[v _onLED `(v ~T0 @X0 0 ef ]
[; ;Led2.h: 4: typedef enum {
[; ;Led2.h: 5: LED_UNKNOWN_STATUS,
[; ;Led2.h: 6: LED_OFF,
[; ;Led2.h: 7: LED_ON
[; ;Led2.h: 8: } Led2Status;
[; ;Led2.h: 10: typedef struct Led2Data Led2Data;
[; ;Led2.h: 12: struct Led2Data {
[; ;Led2.h: 13: int state;
[; ;Led2.h: 14: Led2Status ledStatus;
[; ;Led2.h: 15: unsigned long currentClock;
[; ;Led2.h: 16: };
[; ;Led2.h: 18: void led2SM(Led2Data *data) ;
[; ;Blinky.h: 16: void makeDelay(int loop);
[; ;Blinky.h: 17: void configureLED();
[; ;Blinky.h: 18: void onLED();
[; ;Blinky.h: 19: void offLED();
[; ;Clock.h: 9: extern volatile unsigned long clock;
[; ;Clock.h: 11: void initClock();
[; ;Clock.h: 12: unsigned long getCLOCK();
[; ;Clock.h: 13: char hasTimer0Overflowed();
[; ;Clock.h: 14: void clearTimer0Overflowed();
"9 ../src/PIC18/Led2.c
[v _testingLed2SM `(v ~T0 @X0 1 ef1`*S1 ]
{
[; ;Led2.c: 9: void testingLed2SM(Led2Data *data) {
[e :U _testingLed2SM ]
[v _data `*S1 ~T0 @X0 1 r1 ]
[f ]
[; ;Led2.c: 23: }
"23
[e :UE 2 ]
}
"25
[v _led2SM `(v ~T0 @X0 1 ef1`*S1 ]
{
[; ;Led2.c: 25: void led2SM(Led2Data *data) {
[e :U _led2SM ]
[v _data `*S1 ~T0 @X0 1 r1 ]
[f ]
[; ;Led2.c: 26: switch(data->state) { case 0:
"26
[e $U 5  ]
{
[e :U 6 ]
[; ;Led2.c: 27: data->ledStatus = LED_ON;
"27
[e = . *U _data 1 -> . `E1 2 `E1 ]
[; ;Led2.c: 28: while(1) {
"28
[e :U 8 ]
{
[; ;Led2.c: 29: if(getCLOCK() - data->currentClock >= 147){
"29
[e $ ! >= - ( _getCLOCK ..  . *U _data 2 -> -> -> 147 `i `l `ul 10  ]
{
[; ;Led2.c: 30: if(data->ledStatus == LED_ON){
"30
[e $ ! == -> . *U _data 1 `i -> . `E1 2 `i 11  ]
{
[; ;Led2.c: 31: data->ledStatus = LED_OFF; offLED();
"31
[e = . *U _data 1 -> . `E1 1 `E1 ]
[e ( _offLED ..  ]
"32
}
[; ;Led2.c: 32: }else if(data->ledStatus == LED_OFF){
[e $U 12  ]
[e :U 11 ]
[e $ ! == -> . *U _data 1 `i -> . `E1 1 `i 13  ]
{
[; ;Led2.c: 33: data->ledStatus = LED_ON; onLED();
"33
[e = . *U _data 1 -> . `E1 2 `E1 ]
[e ( _onLED ..  ]
"34
}
[e :U 13 ]
[e :U 12 ]
[; ;Led2.c: 34: }data->currentClock = getCLOCK();
[e = . *U _data 2 ( _getCLOCK ..  ]
"35
}
[e :U 10 ]
[; ;Led2.c: 35: }(data->state)=35; return; case 35:;
[e = . *U _data 0 -> 35 `i ]
[e $UE 3  ]
[e :U 14 ]
"36
}
[e :U 7 ]
"28
[e $U 8  ]
[e :U 9 ]
"37
}
[; ;Led2.c: 36: }
[; ;Led2.c: 37: }
[e $U 4  ]
"26
[e :U 5 ]
[e [\ . *U _data 0 , $ -> 0 `i 6
 , $ -> 35 `i 14
 4 ]
"37
[e :U 4 ]
[; ;Led2.c: 38: }
"38
[e :UE 3 ]
}
