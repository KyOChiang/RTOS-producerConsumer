

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Nov 03 17:43:39 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    35  0000                     
    36 ;; Function _taskOne is unused but had its address taken
    37  0000                     
    38 ;; Function _taskTwo is unused but had its address taken
    39  0000                     
    40                           	psect	idataCOMRAM
    41  00061C                     __pidataCOMRAM:
    42                           	opt stack 0
    43                           
    44                           ;initializer for _hexPattern
    45  00061C  77                 	db	119
    46  00061D  41                 	db	65
    47  00061E  3B                 	db	59
    48  00061F  6B                 	db	107
    49  000620  4D                 	db	77
    50  000621  6E                 	db	110
    51  000622  7E                 	db	126
    52  000623  43                 	db	67
    53  000624  7F                 	db	127
    54  000625  6F                 	db	111
    55  000626  5F                 	db	95
    56  000627  7C                 	db	124
    57  000628  38                 	db	56
    58  000629  79                 	db	121
    59  00062A  3E                 	db	62
    60  00062B  1E                 	db	30
    61  0000                     _INTCONbits	set	4082
    62  0000                     _OSCCONbits	set	4051
    63  0000                     _PIE1	set	3997
    64  0000                     _PIE1bits	set	3997
    65  0000                     _PIR1bits	set	3998
    66  0000                     _PORTCbits	set	3970
    67  0000                     _PORTDbits	set	3971
    68  0000                     _RCREG	set	4014
    69  0000                     _RCSTA	set	4011
    70  0000                     _RCSTAbits	set	4011
    71  0000                     _SPBRG	set	4015
    72  0000                     _SPBRGH	set	4016
    73  0000                     _SSPBUF	set	4041
    74  0000                     _SSPCON1	set	4038
    75  0000                     _SSPCON1bits	set	4038
    76  0000                     _SSPSTAT	set	4039
    77  0000                     _SSPSTATbits	set	4039
    78  0000                     _T0CON	set	4053
    79  0000                     _T0CONbits	set	4053
    80  0000                     _TMR0H	set	4055
    81  0000                     _TMR0L	set	4054
    82  0000                     _TRISAbits	set	3986
    83  0000                     _TRISCbits	set	3988
    84  0000                     _TRISDbits	set	3989
    85  0000                     _TXREG	set	4013
    86  0000                     _TXSTA	set	4012
    87  0000                     _TXSTAbits	set	4012
    88                           
    89                           ; #config settings
    90  0000                     
    91                           	psect	cinit
    92  0004D0                     __pcinit:
    93                           	opt stack 0
    94  0004D0                     start_initialization:
    95                           	opt stack 0
    96  0004D0                     __initialization:
    97                           	opt stack 0
    98                           
    99                           ; Clear objects allocated to COMRAM (45 bytes)
   100  0004D0  EE00  F036         	lfsr	0,__pbssCOMRAM
   101  0004D4  0E2D               	movlw	45
   102  0004D6                     clear_0:
   103  0004D6  6AEE               	clrf	postinc0,c
   104  0004D8  06E8               	decf	wreg,f,c
   105  0004DA  E1FD               	bnz	clear_0
   106                           
   107                           ; Initialize objects allocated to COMRAM (16 bytes)
   108                           ; load TBLPTR registers with __pidataCOMRAM
   109  0004DC  0E1C               	movlw	low __pidataCOMRAM
   110  0004DE  6EF6               	movwf	tblptrl,c
   111  0004E0  0E06               	movlw	high __pidataCOMRAM
   112  0004E2  6EF7               	movwf	tblptrh,c
   113  0004E4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   114  0004E6  6EF8               	movwf	tblptru,c
   115  0004E8  EE00  F063         	lfsr	0,__pdataCOMRAM
   116  0004EC  EE10 F010          	lfsr	1,16
   117  0004F0                     copy_data0:
   118  0004F0  0009               	tblrd		*+
   119  0004F2  CFF5 FFEE          	movff	tablat,postinc0
   120  0004F6  50E5               	movf	postdec1,w,c
   121  0004F8  50E1               	movf	fsr1l,w,c
   122  0004FA  E1FA               	bnz	copy_data0
   123  0004FC                     end_of_initialization:
   124                           	opt stack 0
   125  0004FC                     __end_of__initialization:
   126                           	opt stack 0
   127  0004FC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   128  0004FE  6EF8               	movwf	tblptru,c
   129  000500  0100               	movlb	0
   130  000502  EFD9  F001         	goto	_main	;jump to C main() function
   131                           tblptru	equ	0xFF8
   132                           tblptrh	equ	0xFF7
   133                           tblptrl	equ	0xFF6
   134                           tablat	equ	0xFF5
   135                           postinc0	equ	0xFEE
   136                           wreg	equ	0xFE8
   137                           postdec1	equ	0xFE5
   138                           fsr1l	equ	0xFE1
   139                           
   140                           	psect	bssCOMRAM
   141  000036                     __pbssCOMRAM:
   142                           	opt stack 0
   143  000036                     _clock:
   144                           	opt stack 0
   145  000036                     	ds	4
   146  00003A                     _runningTCB:
   147                           	opt stack 0
   148  00003A                     	ds	2
   149  00003C                     _TOSHi:
   150                           	opt stack 0
   151  00003C                     	ds	1
   152  00003D                     _TOSLo:
   153                           	opt stack 0
   154  00003D                     	ds	1
   155  00003E                     _USART_Status:
   156                           	opt stack 0
   157  00003E                     	ds	1
   158  00003F                     _bankSelectReg:
   159                           	opt stack 0
   160  00003F                     	ds	1
   161  000040                     _statusReg:
   162                           	opt stack 0
   163  000040                     	ds	1
   164  000041                     _workingReg:
   165                           	opt stack 0
   166  000041                     	ds	1
   167  000042                     _tcb:
   168                           	opt stack 0
   169  000042                     	ds	33
   170                           tblptru	equ	0xFF8
   171                           tblptrh	equ	0xFF7
   172                           tblptrl	equ	0xFF6
   173                           tablat	equ	0xFF5
   174                           postinc0	equ	0xFEE
   175                           wreg	equ	0xFE8
   176                           postdec1	equ	0xFE5
   177                           fsr1l	equ	0xFE1
   178                           
   179                           	psect	dataCOMRAM
   180  000063                     __pdataCOMRAM:
   181                           	opt stack 0
   182  000063                     _hexPattern:
   183                           	opt stack 0
   184  000063                     	ds	16
   185                           tblptru	equ	0xFF8
   186                           tblptrh	equ	0xFF7
   187                           tblptrl	equ	0xFF6
   188                           tablat	equ	0xFF5
   189                           postinc0	equ	0xFEE
   190                           wreg	equ	0xFE8
   191                           postdec1	equ	0xFE5
   192                           fsr1l	equ	0xFE1
   193                           
   194                           	psect	cstackCOMRAM
   195  000001                     __pcstackCOMRAM:
   196                           	opt stack 0
   197  000001                     ??_timer0Isr:
   198  000001                     
   199                           ; 1 bytes @ 0x0
   200  000001                     	ds	14
   201  00000F                     ?_getCLOCK:
   202                           	opt stack 0
   203  00000F                     OpenSPI@bus_mode:
   204                           	opt stack 0
   205  00000F                     WriteSPI@TempVar:
   206                           	opt stack 0
   207  00000F                     OpenTimer0@config:
   208                           	opt stack 0
   209  00000F                     ReadUSART@data:
   210                           	opt stack 0
   211  00000F                     WriteUSART@data:
   212                           	opt stack 0
   213  00000F                     initUsartLoopback@data:
   214                           	opt stack 0
   215  00000F                     init7Segment@_7seg:
   216                           	opt stack 0
   217  00000F                     OpenUSART@spbrg:
   218                           	opt stack 0
   219                           
   220                           ; 2 bytes @ 0xE
   221  00000F                     	ds	1
   222  000010                     OpenSPI@smp_phase:
   223                           	opt stack 0
   224  000010                     WriteSPI@data_out:
   225                           	opt stack 0
   226  000010                     usartLoopbackSM@data:
   227                           	opt stack 0
   228                           
   229                           ; 2 bytes @ 0xF
   230  000010                     	ds	1
   231  000011                     ??_OpenUSART:
   232  000011                     write7Segment@data:
   233                           	opt stack 0
   234  000011                     OpenSPI@sync_mode:
   235                           	opt stack 0
   236                           
   237                           ; 1 bytes @ 0x10
   238  000011                     	ds	1
   239  000012                     
   240                           ; 0 bytes @ 0x11
   241  000012                     	ds	1
   242  000013                     __7SegmentSM@_7seg:
   243                           	opt stack 0
   244  000013                     led2SM@data:
   245                           	opt stack 0
   246                           
   247                           ; 2 bytes @ 0x12
   248  000013                     	ds	1
   249  000014                     OpenUSART@config:
   250                           	opt stack 0
   251                           
   252                           ; 1 bytes @ 0x13
   253  000014                     	ds	1
   254  000015                     ??_led2SM:
   255  000015                     ??__7SegmentSM:
   256                           
   257                           ; 0 bytes @ 0x14
   258  000015                     	ds	12
   259  000021                     
   260                           ; 2 bytes @ 0x20
   261  000021                     	ds	2
   262  000023                     
   263                           ; 3 bytes @ 0x22
   264  000023                     	ds	3
   265  000026                     main@led2Data:
   266                           	opt stack 0
   267                           
   268                           ; 7 bytes @ 0x25
   269  000026                     	ds	7
   270  00002D                     main@loopbackData:
   271                           	opt stack 0
   272                           
   273                           ; 2 bytes @ 0x2C
   274  00002D                     	ds	2
   275  00002F                     main@_7SegData:
   276                           	opt stack 0
   277                           
   278                           ; 7 bytes @ 0x2E
   279  00002F                     	ds	7
   280                           tblptru	equ	0xFF8
   281                           tblptrh	equ	0xFF7
   282                           tblptrl	equ	0xFF6
   283                           tablat	equ	0xFF5
   284                           postinc0	equ	0xFEE
   285                           wreg	equ	0xFE8
   286                           postdec1	equ	0xFE5
   287                           fsr1l	equ	0xFE1
   288                           
   289 ;;
   290 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   291 ;;
   292 ;; *************** function _main *****************
   293 ;; Defined at:
   294 ;;		line 12 in file "../src/PIC18/Main.c"
   295 ;; Parameters:    Size  Location     Type
   296 ;;  argc            2   32[COMRAM] int 
   297 ;;  argv            3   34[COMRAM] PTR PTR unsigned char 
   298 ;; Auto vars:     Size  Location     Type
   299 ;;  _7SegData       7   46[COMRAM] struct .
   300 ;;  led2Data        7   37[COMRAM] struct Led2Data
   301 ;;  loopbackData    2   44[COMRAM] struct LoopbackData
   302 ;; Return value:  Size  Location     Type
   303 ;;                  2   32[COMRAM] int 
   304 ;; Registers used:
   305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   306 ;; Tracked objects:
   307 ;;		On entry : 0/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   311 ;;      Params:         5       0       0       0       0       0       0
   312 ;;      Locals:        16       0       0       0       0       0       0
   313 ;;      Temps:          0       0       0       0       0       0       0
   314 ;;      Totals:        21       0       0       0       0       0       0
   315 ;;Total ram usage:       21 bytes
   316 ;; Hardware stack levels required when called:    5
   317 ;; This function calls:
   318 ;;		_OpenUSART
   319 ;;		__7SegmentSM
   320 ;;		_closeModule
   321 ;;		_configureLED
   322 ;;		_init7Segment
   323 ;;		_initClock
   324 ;;		_initUsartLoopback
   325 ;;		_led2SM
   326 ;;		_usartLoopbackSM
   327 ;; This function is called by:
   328 ;;		Startup code after reset
   329 ;; This function uses a non-reentrant model
   330 ;;
   331                           
   332                           	psect	text0
   333  0003B2                     __ptext0:
   334                           	opt stack 0
   335  0003B2                     _main:
   336                           	opt stack 26
   337                           
   338                           ;Main.c: 14: LoopbackData loopbackData;
   339                           ;Main.c: 15: Led2Data led2Data;
   340                           ;Main.c: 16: _7SEG _7SegData;
   341                           ;Main.c: 18: (OSCCONbits.IRCF = 7);
   342                           
   343                           ;incstack = 0
   344  0003B2  88D3               	bsf	4051,4,c	;volatile
   345  0003B4  8AD3               	bsf	4051,5,c	;volatile
   346  0003B6  8CD3               	bsf	4051,6,c	;volatile
   347                           
   348                           ;Main.c: 19: OpenUSART(0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b11111111 & 
      +                          0b11111111, 51);;
   349  0003B8  0E00               	movlw	0
   350  0003BA  6E10               	movwf	OpenUSART@spbrg+1,c
   351  0003BC  0E33               	movlw	51
   352  0003BE  6E0F               	movwf	OpenUSART@spbrg,c
   353  0003C0  0E3C               	movlw	60
   354  0003C2  ECA5  F001         	call	_OpenUSART
   355                           
   356                           ;Main.c: 20: configureLED();
   357  0003C6  EC21  F003         	call	_configureLED	;wreg free
   358                           
   359                           ;Main.c: 22: initClock();
   360  0003CA  ECCC  F002         	call	_initClock	;wreg free
   361                           
   362                           ;Main.c: 23: initUsartLoopback(&loopbackData);
   363  0003CE  0E00               	movlw	high main@loopbackData
   364  0003D0  6E10               	movwf	initUsartLoopback@data+1,c
   365  0003D2  0E2D               	movlw	low main@loopbackData
   366  0003D4  6E0F               	movwf	initUsartLoopback@data,c
   367  0003D6  ECBD  F002         	call	_initUsartLoopback	;wreg free
   368                           
   369                           ;Main.c: 24: ((&led2Data)->state = 0);
   370  0003DA  0E00               	movlw	0
   371  0003DC  6E27               	movwf	main@led2Data+1,c
   372  0003DE  0E00               	movlw	0
   373  0003E0  6E26               	movwf	main@led2Data,c
   374                           
   375                           ;Main.c: 25: init7Segment(&_7SegData);
   376  0003E2  0E00               	movlw	high main@_7SegData
   377  0003E4  6E10               	movwf	init7Segment@_7seg+1,c
   378  0003E6  0E2F               	movlw	low main@_7SegData
   379  0003E8  6E0F               	movwf	init7Segment@_7seg,c
   380  0003EA  EC83  F002         	call	_init7Segment	;wreg free
   381  0003EE                     l1191:
   382                           
   383                           ;Main.c: 28: usartLoopbackSM(&loopbackData);
   384  0003EE  0E00               	movlw	high main@loopbackData
   385  0003F0  6E11               	movwf	usartLoopbackSM@data+1,c
   386  0003F2  0E2D               	movlw	low main@loopbackData
   387  0003F4  6E10               	movwf	usartLoopbackSM@data,c
   388  0003F6  EC0A  F002         	call	_usartLoopbackSM	;wreg free
   389                           
   390                           ;Main.c: 29: led2SM(&led2Data);
   391  0003FA  0E00               	movlw	high main@led2Data
   392  0003FC  6E14               	movwf	led2SM@data+1,c
   393  0003FE  0E26               	movlw	low main@led2Data
   394  000400  6E13               	movwf	led2SM@data,c
   395  000402  ECC6  F000         	call	_led2SM	;wreg free
   396                           
   397                           ;Main.c: 30: _7SegmentSM(&_7SegData);
   398  000406  0E00               	movlw	high main@_7SegData
   399  000408  6E14               	movwf	__7SegmentSM@_7seg+1,c
   400  00040A  0E2F               	movlw	low main@_7SegData
   401  00040C  6E13               	movwf	__7SegmentSM@_7seg,c
   402  00040E  EC0E  F000         	call	__7SegmentSM	;wreg free
   403  000412  D7ED               	goto	l1191
   404  000414                     __end_of_main:
   405                           	opt stack 0
   406                           tblptru	equ	0xFF8
   407                           tblptrh	equ	0xFF7
   408                           tblptrl	equ	0xFF6
   409                           tablat	equ	0xFF5
   410                           postinc0	equ	0xFEE
   411                           wreg	equ	0xFE8
   412                           postdec1	equ	0xFE5
   413                           fsr1l	equ	0xFE1
   414                           
   415 ;; *************** function _usartLoopbackSM *****************
   416 ;; Defined at:
   417 ;;		line 11 in file "../src/PIC18/UsartLoopback.c"
   418 ;; Parameters:    Size  Location     Type
   419 ;;  data            2   15[COMRAM] PTR struct LoopbackData
   420 ;;		 -> main@loopbackData(2), 
   421 ;; Auto vars:     Size  Location     Type
   422 ;;		None
   423 ;; Return value:  Size  Location     Type
   424 ;;		None               void
   425 ;; Registers used:
   426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   427 ;; Tracked objects:
   428 ;;		On entry : 0/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   432 ;;      Params:         2       0       0       0       0       0       0
   433 ;;      Locals:         0       0       0       0       0       0       0
   434 ;;      Temps:          0       0       0       0       0       0       0
   435 ;;      Totals:         2       0       0       0       0       0       0
   436 ;;Total ram usage:        2 bytes
   437 ;; Hardware stack levels used:    1
   438 ;; Hardware stack levels required when called:    3
   439 ;; This function calls:
   440 ;;		_ReadUSART
   441 ;;		_WriteUSART
   442 ;; This function is called by:
   443 ;;		_main
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447                           	psect	text1
   448  000414                     __ptext1:
   449                           	opt stack 0
   450  000414                     _usartLoopbackSM:
   451                           	opt stack 27
   452                           
   453                           ;UsartLoopback.c: 12: switch(data->state){
   454                           
   455                           ;incstack = 0
   456  000414  D024               	goto	l1109
   457  000416                     l143:
   458                           
   459                           ;UsartLoopback.c: 14: if((PIR1bits.RCIF)){
   460  000416  AA9E               	btfss	3998,5,c	;volatile
   461  000418  D02D               	goto	l149
   462                           
   463                           ;UsartLoopback.c: 15: data->dataByte = ReadUSART();
   464  00041A  EE20 F001          	lfsr	2,1
   465  00041E  5010               	movf	usartLoopbackSM@data,w,c
   466  000420  26D9               	addwf	fsr2l,f,c
   467  000422  5011               	movf	usartLoopbackSM@data+1,w,c
   468  000424  22DA               	addwfc	fsr2h,f,c
   469  000426  ECAE  F002         	call	_ReadUSART	;wreg free
   470  00042A  6EDF               	movwf	indf2,c
   471                           
   472                           ;UsartLoopback.c: 16: data->state = WAIT_TO_TX;
   473  00042C  C010  FFD9         	movff	usartLoopbackSM@data,fsr2l
   474  000430  C011  FFDA         	movff	usartLoopbackSM@data+1,fsr2h
   475  000434  0E01               	movlw	1
   476  000436  6EDF               	movwf	indf2,c
   477  000438  D01D               	goto	l149
   478  00043A                     l146:
   479                           
   480                           ;UsartLoopback.c: 20: if(!(!TXSTAbits.TRMT)){
   481  00043A  A2AC               	btfss	4012,1,c	;volatile
   482  00043C  D01B               	goto	l149
   483                           
   484                           ;UsartLoopback.c: 21: data->state = WAIT_DATA;
   485  00043E  C010  FFD9         	movff	usartLoopbackSM@data,fsr2l
   486  000442  C011  FFDA         	movff	usartLoopbackSM@data+1,fsr2h
   487  000446  0E00               	movlw	0
   488  000448  6EDF               	movwf	indf2,c
   489                           
   490                           ;UsartLoopback.c: 22: WriteUSART(data->dataByte);
   491  00044A  EE20 F001          	lfsr	2,1
   492  00044E  5010               	movf	usartLoopbackSM@data,w,c
   493  000450  26D9               	addwf	fsr2l,f,c
   494  000452  5011               	movf	usartLoopbackSM@data+1,w,c
   495  000454  22DA               	addwfc	fsr2h,f,c
   496  000456  50DF               	movf	indf2,w,c
   497  000458  ECFC  F002         	call	_WriteUSART
   498  00045C  D00B               	goto	l149
   499  00045E                     l1109:
   500  00045E  C010  FFD9         	movff	usartLoopbackSM@data,fsr2l
   501  000462  C011  FFDA         	movff	usartLoopbackSM@data+1,fsr2h
   502  000466  50DF               	movf	indf2,w,c
   503                           
   504                           ; Switch size 1, requested type "space"
   505                           ; Number of cases is 2, Range of values is 0 to 1
   506                           ; switch strategies available:
   507                           ; Name         Instructions Cycles
   508                           ; simple_byte            7     4 (average)
   509                           ;	Chosen strategy is simple_byte
   510  000468  0A00               	xorlw	0	; case 0
   511  00046A  B4D8               	btfsc	status,2,c
   512  00046C  D7D4               	goto	l143
   513  00046E  0A01               	xorlw	1	; case 1
   514  000470  B4D8               	btfsc	status,2,c
   515  000472  D7E3               	goto	l146
   516  000474                     l149:
   517  000474  0012               	return	
   518  000476                     __end_of_usartLoopbackSM:
   519                           	opt stack 0
   520                           tblptru	equ	0xFF8
   521                           tblptrh	equ	0xFF7
   522                           tblptrl	equ	0xFF6
   523                           tablat	equ	0xFF5
   524                           postinc0	equ	0xFEE
   525                           wreg	equ	0xFE8
   526                           postdec1	equ	0xFE5
   527                           fsr1l	equ	0xFE1
   528                           indf2	equ	0xFDF
   529                           fsr2h	equ	0xFDA
   530                           fsr2l	equ	0xFD9
   531                           status	equ	0xFD8
   532                           
   533 ;; *************** function _WriteUSART *****************
   534 ;; Defined at:
   535 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uwrite.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;  data            1    wreg     unsigned char 
   538 ;; Auto vars:     Size  Location     Type
   539 ;;  data            1   14[COMRAM] unsigned char 
   540 ;; Return value:  Size  Location     Type
   541 ;;		None               void
   542 ;; Registers used:
   543 ;;		wreg
   544 ;; Tracked objects:
   545 ;;		On entry : 0/0
   546 ;;		On exit  : 0/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   549 ;;      Params:         0       0       0       0       0       0       0
   550 ;;      Locals:         1       0       0       0       0       0       0
   551 ;;      Temps:          0       0       0       0       0       0       0
   552 ;;      Totals:         1       0       0       0       0       0       0
   553 ;;Total ram usage:        1 bytes
   554 ;; Hardware stack levels used:    1
   555 ;; Hardware stack levels required when called:    2
   556 ;; This function calls:
   557 ;;		Nothing
   558 ;; This function is called by:
   559 ;;		_usartLoopbackSM
   560 ;;		_usartLoopback
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564                           	psect	text2
   565  0005F8                     __ptext2:
   566                           	opt stack 0
   567  0005F8                     _WriteUSART:
   568                           	opt stack 27
   569                           
   570                           ;incstack = 0
   571                           ;WriteUSART@data stored from wreg
   572  0005F8  6E0F               	movwf	WriteUSART@data,c
   573  0005FA  ACAC               	btfss	4012,6,c	;volatile
   574  0005FC  D003               	goto	l999
   575  0005FE  90AC               	bcf	4012,0,c	;volatile
   576  000600  B23E               	btfsc	_USART_Status,1,c
   577  000602  80AC               	bsf	4012,0,c	;volatile
   578  000604                     l999:
   579  000604  C00F  FFAD         	movff	WriteUSART@data,4013	;volatile
   580  000608  0012               	return	
   581  00060A                     __end_of_WriteUSART:
   582                           	opt stack 0
   583                           tblptru	equ	0xFF8
   584                           tblptrh	equ	0xFF7
   585                           tblptrl	equ	0xFF6
   586                           tablat	equ	0xFF5
   587                           postinc0	equ	0xFEE
   588                           wreg	equ	0xFE8
   589                           postdec1	equ	0xFE5
   590                           fsr1l	equ	0xFE1
   591                           indf2	equ	0xFDF
   592                           fsr2h	equ	0xFDA
   593                           fsr2l	equ	0xFD9
   594                           status	equ	0xFD8
   595                           
   596 ;; *************** function _ReadUSART *****************
   597 ;; Defined at:
   598 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uread.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;		None
   601 ;; Auto vars:     Size  Location     Type
   602 ;;  data            1   14[COMRAM] unsigned char 
   603 ;; Return value:  Size  Location     Type
   604 ;;                  1    wreg      unsigned char 
   605 ;; Registers used:
   606 ;;		wreg, status,2, status,0
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   612 ;;      Params:         0       0       0       0       0       0       0
   613 ;;      Locals:         1       0       0       0       0       0       0
   614 ;;      Temps:          0       0       0       0       0       0       0
   615 ;;      Totals:         1       0       0       0       0       0       0
   616 ;;Total ram usage:        1 bytes
   617 ;; Hardware stack levels used:    1
   618 ;; Hardware stack levels required when called:    2
   619 ;; This function calls:
   620 ;;		Nothing
   621 ;; This function is called by:
   622 ;;		_usartLoopbackSM
   623 ;;		_usartLoopback
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           	psect	text3
   628  00055C                     __ptext3:
   629                           	opt stack 0
   630  00055C                     _ReadUSART:
   631                           	opt stack 27
   632                           
   633                           ;incstack = 0
   634  00055C  0EF2               	movlw	242
   635  00055E  163E               	andwf	_USART_Status,f,c
   636  000560  ACAB               	btfss	4011,6,c	;volatile
   637  000562  D003               	goto	l344
   638  000564  903E               	bcf	_USART_Status,0,c
   639  000566  B0AB               	btfsc	4011,0,c	;volatile
   640  000568  803E               	bsf	_USART_Status,0,c
   641  00056A                     l344:
   642  00056A  B4AB               	btfsc	4011,2,c	;volatile
   643  00056C  843E               	bsf	_USART_Status,2,c
   644  00056E  B2AB               	btfsc	4011,1,c	;volatile
   645  000570  863E               	bsf	_USART_Status,3,c
   646  000572  CFAE F00F          	movff	4014,ReadUSART@data	;volatile
   647  000576  500F               	movf	ReadUSART@data,w,c
   648  000578  0012               	return	
   649  00057A                     __end_of_ReadUSART:
   650                           	opt stack 0
   651                           tblptru	equ	0xFF8
   652                           tblptrh	equ	0xFF7
   653                           tblptrl	equ	0xFF6
   654                           tablat	equ	0xFF5
   655                           postinc0	equ	0xFEE
   656                           wreg	equ	0xFE8
   657                           postdec1	equ	0xFE5
   658                           fsr1l	equ	0xFE1
   659                           indf2	equ	0xFDF
   660                           fsr2h	equ	0xFDA
   661                           fsr2l	equ	0xFD9
   662                           status	equ	0xFD8
   663                           
   664 ;; *************** function _led2SM *****************
   665 ;; Defined at:
   666 ;;		line 25 in file "../src/PIC18/Led2.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;  data            2   18[COMRAM] PTR struct Led2Data
   669 ;;		 -> main@led2Data(7), 
   670 ;; Auto vars:     Size  Location     Type
   671 ;;		None
   672 ;; Return value:  Size  Location     Type
   673 ;;		None               void
   674 ;; Registers used:
   675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   681 ;;      Params:         2       0       0       0       0       0       0
   682 ;;      Locals:         0       0       0       0       0       0       0
   683 ;;      Temps:         12       0       0       0       0       0       0
   684 ;;      Totals:        14       0       0       0       0       0       0
   685 ;;Total ram usage:       14 bytes
   686 ;; Hardware stack levels used:    1
   687 ;; Hardware stack levels required when called:    3
   688 ;; This function calls:
   689 ;;		_getCLOCK
   690 ;;		_offLED
   691 ;;		_onLED
   692 ;; This function is called by:
   693 ;;		_main
   694 ;; This function uses a non-reentrant model
   695 ;;
   696                           
   697                           	psect	text4
   698  00018C                     __ptext4:
   699                           	opt stack 0
   700  00018C                     _led2SM:
   701                           	opt stack 27
   702                           
   703                           ;Led2.c: 26: switch(data->state) { case 0:
   704                           
   705                           ;incstack = 0
   706  00018C  D089               	goto	l1133
   707  00018E                     l1113:
   708                           
   709                           ;Led2.c: 27: data->ledStatus = LED_ON;
   710  00018E  EE20 F002          	lfsr	2,2
   711  000192  5013               	movf	led2SM@data,w,c
   712  000194  26D9               	addwf	fsr2l,f,c
   713  000196  5014               	movf	led2SM@data+1,w,c
   714  000198  22DA               	addwfc	fsr2h,f,c
   715  00019A  0E02               	movlw	2
   716  00019C  6EDF               	movwf	indf2,c
   717  00019E                     l1115:
   718                           
   719                           ;Led2.c: 29: if(getCLOCK() - data->currentClock >= 147){
   720  00019E  EE20 F003          	lfsr	2,3
   721  0001A2  5013               	movf	led2SM@data,w,c
   722  0001A4  26D9               	addwf	fsr2l,f,c
   723  0001A6  5014               	movf	led2SM@data+1,w,c
   724  0001A8  22DA               	addwfc	fsr2h,f,c
   725  0001AA  CFDE F015          	movff	postinc2,??_led2SM
   726  0001AE  CFDE F016          	movff	postinc2,??_led2SM+1
   727  0001B2  CFDE F017          	movff	postinc2,??_led2SM+2
   728  0001B6  CFDE F018          	movff	postinc2,??_led2SM+3
   729  0001BA  1E15               	comf	??_led2SM,f,c
   730  0001BC  1E16               	comf	??_led2SM+1,f,c
   731  0001BE  1E17               	comf	??_led2SM+2,f,c
   732  0001C0  1E18               	comf	??_led2SM+3,f,c
   733  0001C2  2A15               	incf	??_led2SM,f,c
   734  0001C4  0E00               	movlw	0
   735  0001C6  2216               	addwfc	??_led2SM+1,f,c
   736  0001C8  2217               	addwfc	??_led2SM+2,f,c
   737  0001CA  2218               	addwfc	??_led2SM+3,f,c
   738  0001CC  EC05  F003         	call	_getCLOCK	;wreg free
   739  0001D0  C00F  F019         	movff	?_getCLOCK,??_led2SM+4
   740  0001D4  C010  F01A         	movff	?_getCLOCK+1,??_led2SM+5
   741  0001D8  C011  F01B         	movff	?_getCLOCK+2,??_led2SM+6
   742  0001DC  C012  F01C         	movff	?_getCLOCK+3,??_led2SM+7
   743  0001E0  5015               	movf	??_led2SM,w,c
   744  0001E2  2419               	addwf	??_led2SM+4,w,c
   745  0001E4  6E1D               	movwf	(??_led2SM+8)& (0+255),c
   746  0001E6  5016               	movf	??_led2SM+1,w,c
   747  0001E8  201A               	addwfc	??_led2SM+5,w,c
   748  0001EA  6E1E               	movwf	(??_led2SM+9)& (0+255),c
   749  0001EC  5017               	movf	??_led2SM+2,w,c
   750  0001EE  201B               	addwfc	??_led2SM+6,w,c
   751  0001F0  6E1F               	movwf	(??_led2SM+10)& (0+255),c
   752  0001F2  5018               	movf	??_led2SM+3,w,c
   753  0001F4  201C               	addwfc	??_led2SM+7,w,c
   754  0001F6  6E20               	movwf	(??_led2SM+11)& (0+255),c
   755  0001F8  0E93               	movlw	147
   756  0001FA  5C1D               	subwf	??_led2SM+8,w,c
   757  0001FC  0E00               	movlw	0
   758  0001FE  581E               	subwfb	??_led2SM+9,w,c
   759  000200  0E00               	movlw	0
   760  000202  581F               	subwfb	??_led2SM+10,w,c
   761  000204  0E00               	movlw	0
   762  000206  5820               	subwfb	??_led2SM+11,w,c
   763  000208  A0D8               	btfss	status,0,c
   764  00020A  D041               	goto	l1129
   765                           
   766                           ;Led2.c: 30: if(data->ledStatus == LED_ON){
   767  00020C  EE20 F002          	lfsr	2,2
   768  000210  5013               	movf	led2SM@data,w,c
   769  000212  26D9               	addwf	fsr2l,f,c
   770  000214  5014               	movf	led2SM@data+1,w,c
   771  000216  22DA               	addwfc	fsr2h,f,c
   772  000218  0E02               	movlw	2
   773  00021A  62DF               	cpfseq	indf2,c
   774  00021C  D00B               	goto	l1123
   775                           
   776                           ;Led2.c: 31: data->ledStatus = LED_OFF; offLED();
   777  00021E  EE20 F002          	lfsr	2,2
   778  000222  5013               	movf	led2SM@data,w,c
   779  000224  26D9               	addwf	fsr2l,f,c
   780  000226  5014               	movf	led2SM@data+1,w,c
   781  000228  22DA               	addwfc	fsr2h,f,c
   782  00022A  0E01               	movlw	1
   783  00022C  6EDF               	movwf	indf2,c
   784  00022E  EC1F  F003         	call	_offLED	;wreg free
   785                           
   786                           ;Led2.c: 32: }else if(data->ledStatus == LED_OFF){
   787  000232  D013               	goto	l197
   788  000234                     l1123:
   789  000234  EE20 F002          	lfsr	2,2
   790  000238  5013               	movf	led2SM@data,w,c
   791  00023A  26D9               	addwf	fsr2l,f,c
   792  00023C  5014               	movf	led2SM@data+1,w,c
   793  00023E  22DA               	addwfc	fsr2h,f,c
   794  000240  0E01               	movlw	1
   795  000242  62DF               	cpfseq	indf2,c
   796  000244  D00A               	goto	l197
   797                           
   798                           ;Led2.c: 33: data->ledStatus = LED_ON; onLED();
   799  000246  EE20 F002          	lfsr	2,2
   800  00024A  5013               	movf	led2SM@data,w,c
   801  00024C  26D9               	addwf	fsr2l,f,c
   802  00024E  5014               	movf	led2SM@data+1,w,c
   803  000250  22DA               	addwfc	fsr2h,f,c
   804  000252  0E02               	movlw	2
   805  000254  6EDF               	movwf	indf2,c
   806  000256  EC1D  F003         	call	_onLED	;wreg free
   807  00025A                     l197:
   808                           
   809                           ;Led2.c: 34: }data->currentClock = getCLOCK();
   810  00025A  EC05  F003         	call	_getCLOCK	;wreg free
   811  00025E  C00F  F015         	movff	?_getCLOCK,??_led2SM
   812  000262  C010  F016         	movff	?_getCLOCK+1,??_led2SM+1
   813  000266  C011  F017         	movff	?_getCLOCK+2,??_led2SM+2
   814  00026A  C012  F018         	movff	?_getCLOCK+3,??_led2SM+3
   815  00026E  EE20 F003          	lfsr	2,3
   816  000272  5013               	movf	led2SM@data,w,c
   817  000274  26D9               	addwf	fsr2l,f,c
   818  000276  5014               	movf	led2SM@data+1,w,c
   819  000278  22DA               	addwfc	fsr2h,f,c
   820  00027A  C015  FFDE         	movff	??_led2SM,postinc2
   821  00027E  C016  FFDE         	movff	??_led2SM+1,postinc2
   822  000282  C017  FFDE         	movff	??_led2SM+2,postinc2
   823  000286  C018  FFDD         	movff	??_led2SM+3,postdec2
   824  00028A  06D9               	decf	fsr2l,f,c
   825  00028C  06D9               	decf	fsr2l,f,c
   826  00028E                     l1129:
   827                           
   828                           ;Led2.c: 35: }(data->state)=35; return; case 35:;
   829  00028E  C013  FFD9         	movff	led2SM@data,fsr2l
   830  000292  C014  FFDA         	movff	led2SM@data+1,fsr2h
   831  000296  0E23               	movlw	35
   832  000298  6EDE               	movwf	postinc2,c
   833  00029A  0E00               	movlw	0
   834  00029C  6EDD               	movwf	postdec2,c
   835  00029E  D013               	goto	l199
   836  0002A0                     l1133:
   837  0002A0  C013  FFD9         	movff	led2SM@data,fsr2l
   838  0002A4  C014  FFDA         	movff	led2SM@data+1,fsr2h
   839  0002A8  CFDE F015          	movff	postinc2,??_led2SM
   840  0002AC  CFDD F016          	movff	postdec2,??_led2SM+1
   841                           
   842                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   843                           ; Switch size 1, requested type "space"
   844                           ; Number of cases is 1, Range of values is 0 to 0
   845                           ; switch strategies available:
   846                           ; Name         Instructions Cycles
   847                           ; simple_byte            4     3 (average)
   848                           ;	Chosen strategy is simple_byte
   849  0002B0  5016               	movf	??_led2SM+1,w,c
   850  0002B2  0A00               	xorlw	0	; case 0
   851  0002B4  A4D8               	btfss	status,2,c
   852  0002B6  D007               	goto	l199
   853                           
   854                           ; Switch size 1, requested type "space"
   855                           ; Number of cases is 2, Range of values is 0 to 35
   856                           ; switch strategies available:
   857                           ; Name         Instructions Cycles
   858                           ; simple_byte            7     4 (average)
   859                           ;	Chosen strategy is simple_byte
   860  0002B8  5015               	movf	??_led2SM,w,c
   861  0002BA  0A00               	xorlw	0	; case 0
   862  0002BC  B4D8               	btfsc	status,2,c
   863  0002BE  D767               	goto	l1113
   864  0002C0  0A23               	xorlw	35	; case 35
   865  0002C2  B4D8               	btfsc	status,2,c
   866  0002C4  D76C               	goto	l1115
   867  0002C6                     l199:
   868  0002C6  0012               	return	
   869  0002C8                     __end_of_led2SM:
   870                           	opt stack 0
   871                           tblptru	equ	0xFF8
   872                           tblptrh	equ	0xFF7
   873                           tblptrl	equ	0xFF6
   874                           tablat	equ	0xFF5
   875                           postinc0	equ	0xFEE
   876                           wreg	equ	0xFE8
   877                           postdec1	equ	0xFE5
   878                           fsr1l	equ	0xFE1
   879                           indf2	equ	0xFDF
   880                           postinc2	equ	0xFDE
   881                           postdec2	equ	0xFDD
   882                           fsr2h	equ	0xFDA
   883                           fsr2l	equ	0xFD9
   884                           status	equ	0xFD8
   885                           
   886 ;; *************** function _onLED *****************
   887 ;; Defined at:
   888 ;;		line 24 in file "../src/PIC18/Blinky.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;		None
   891 ;; Auto vars:     Size  Location     Type
   892 ;;		None
   893 ;; Return value:  Size  Location     Type
   894 ;;		None               void
   895 ;; Registers used:
   896 ;;		None
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   902 ;;      Params:         0       0       0       0       0       0       0
   903 ;;      Locals:         0       0       0       0       0       0       0
   904 ;;      Temps:          0       0       0       0       0       0       0
   905 ;;      Totals:         0       0       0       0       0       0       0
   906 ;;Total ram usage:        0 bytes
   907 ;; Hardware stack levels used:    1
   908 ;; Hardware stack levels required when called:    2
   909 ;; This function calls:
   910 ;;		Nothing
   911 ;; This function is called by:
   912 ;;		_led2SM
   913 ;;		_ledSM
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           	psect	text5
   918  00063A                     __ptext5:
   919                           	opt stack 0
   920  00063A                     _onLED:
   921                           	opt stack 27
   922                           
   923                           ;Blinky.c: 25: PORTCbits.RC0 = 1;
   924                           
   925                           ;incstack = 0
   926  00063A  8082               	bsf	3970,0,c	;volatile
   927  00063C  0012               	return	
   928  00063E                     __end_of_onLED:
   929                           	opt stack 0
   930                           tblptru	equ	0xFF8
   931                           tblptrh	equ	0xFF7
   932                           tblptrl	equ	0xFF6
   933                           tablat	equ	0xFF5
   934                           postinc0	equ	0xFEE
   935                           wreg	equ	0xFE8
   936                           postdec1	equ	0xFE5
   937                           fsr1l	equ	0xFE1
   938                           indf2	equ	0xFDF
   939                           postinc2	equ	0xFDE
   940                           postdec2	equ	0xFDD
   941                           fsr2h	equ	0xFDA
   942                           fsr2l	equ	0xFD9
   943                           status	equ	0xFD8
   944                           
   945 ;; *************** function _offLED *****************
   946 ;; Defined at:
   947 ;;		line 28 in file "../src/PIC18/Blinky.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;		None
   950 ;; Auto vars:     Size  Location     Type
   951 ;;		None
   952 ;; Return value:  Size  Location     Type
   953 ;;		None               void
   954 ;; Registers used:
   955 ;;		None
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   961 ;;      Params:         0       0       0       0       0       0       0
   962 ;;      Locals:         0       0       0       0       0       0       0
   963 ;;      Temps:          0       0       0       0       0       0       0
   964 ;;      Totals:         0       0       0       0       0       0       0
   965 ;;Total ram usage:        0 bytes
   966 ;; Hardware stack levels used:    1
   967 ;; Hardware stack levels required when called:    2
   968 ;; This function calls:
   969 ;;		Nothing
   970 ;; This function is called by:
   971 ;;		_led2SM
   972 ;;		_ledSM
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text6
   977  00063E                     __ptext6:
   978                           	opt stack 0
   979  00063E                     _offLED:
   980                           	opt stack 27
   981                           
   982                           ;Blinky.c: 29: PORTCbits.RC0 = 0;
   983                           
   984                           ;incstack = 0
   985  00063E  9082               	bcf	3970,0,c	;volatile
   986  000640  0012               	return	
   987  000642                     __end_of_offLED:
   988                           	opt stack 0
   989                           tblptru	equ	0xFF8
   990                           tblptrh	equ	0xFF7
   991                           tblptrl	equ	0xFF6
   992                           tablat	equ	0xFF5
   993                           postinc0	equ	0xFEE
   994                           wreg	equ	0xFE8
   995                           postdec1	equ	0xFE5
   996                           fsr1l	equ	0xFE1
   997                           indf2	equ	0xFDF
   998                           postinc2	equ	0xFDE
   999                           postdec2	equ	0xFDD
  1000                           fsr2h	equ	0xFDA
  1001                           fsr2l	equ	0xFD9
  1002                           status	equ	0xFD8
  1003                           
  1004 ;; *************** function _initUsartLoopback *****************
  1005 ;; Defined at:
  1006 ;;		line 6 in file "../src/PIC18/UsartLoopback.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;  data            2   14[COMRAM] PTR struct LoopbackData
  1009 ;;		 -> main@loopbackData(2), 
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;		None
  1012 ;; Return value:  Size  Location     Type
  1013 ;;		None               void
  1014 ;; Registers used:
  1015 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1016 ;; Tracked objects:
  1017 ;;		On entry : 0/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1021 ;;      Params:         2       0       0       0       0       0       0
  1022 ;;      Locals:         0       0       0       0       0       0       0
  1023 ;;      Temps:          0       0       0       0       0       0       0
  1024 ;;      Totals:         2       0       0       0       0       0       0
  1025 ;;Total ram usage:        2 bytes
  1026 ;; Hardware stack levels used:    1
  1027 ;; Hardware stack levels required when called:    2
  1028 ;; This function calls:
  1029 ;;		Nothing
  1030 ;; This function is called by:
  1031 ;;		_main
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           	psect	text7
  1036  00057A                     __ptext7:
  1037                           	opt stack 0
  1038  00057A                     _initUsartLoopback:
  1039                           	opt stack 28
  1040                           
  1041                           ;UsartLoopback.c: 7: data->state = WAIT_DATA;
  1042                           
  1043                           ;incstack = 0
  1044  00057A  C00F  FFD9         	movff	initUsartLoopback@data,fsr2l
  1045  00057E  C010  FFDA         	movff	initUsartLoopback@data+1,fsr2h
  1046  000582  0E00               	movlw	0
  1047  000584  6EDF               	movwf	indf2,c
  1048                           
  1049                           ;UsartLoopback.c: 8: data->dataByte = '0';
  1050  000586  EE20 F001          	lfsr	2,1
  1051  00058A  500F               	movf	initUsartLoopback@data,w,c
  1052  00058C  26D9               	addwf	fsr2l,f,c
  1053  00058E  5010               	movf	initUsartLoopback@data+1,w,c
  1054  000590  22DA               	addwfc	fsr2h,f,c
  1055  000592  0E30               	movlw	48
  1056  000594  6EDF               	movwf	indf2,c
  1057  000596  0012               	return	
  1058  000598                     __end_of_initUsartLoopback:
  1059                           	opt stack 0
  1060                           tblptru	equ	0xFF8
  1061                           tblptrh	equ	0xFF7
  1062                           tblptrl	equ	0xFF6
  1063                           tablat	equ	0xFF5
  1064                           postinc0	equ	0xFEE
  1065                           wreg	equ	0xFE8
  1066                           postdec1	equ	0xFE5
  1067                           fsr1l	equ	0xFE1
  1068                           indf2	equ	0xFDF
  1069                           postinc2	equ	0xFDE
  1070                           postdec2	equ	0xFDD
  1071                           fsr2h	equ	0xFDA
  1072                           fsr2l	equ	0xFD9
  1073                           status	equ	0xFD8
  1074                           
  1075 ;; *************** function _initClock *****************
  1076 ;; Defined at:
  1077 ;;		line 32 in file "../src/PIC18/Clock.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;		None
  1082 ;; Return value:  Size  Location     Type
  1083 ;;		None               void
  1084 ;; Registers used:
  1085 ;;		wreg, status,2, status,0, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1091 ;;      Params:         0       0       0       0       0       0       0
  1092 ;;      Locals:         0       0       0       0       0       0       0
  1093 ;;      Temps:          0       0       0       0       0       0       0
  1094 ;;      Totals:         0       0       0       0       0       0       0
  1095 ;;Total ram usage:        0 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; Hardware stack levels required when called:    3
  1098 ;; This function calls:
  1099 ;;		_OpenTimer0
  1100 ;; This function is called by:
  1101 ;;		_main
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text8
  1106  000598                     __ptext8:
  1107                           	opt stack 0
  1108  000598                     _initClock:
  1109                           	opt stack 27
  1110                           
  1111                           ;Clock.c: 33: clock = 0;
  1112                           
  1113                           ;incstack = 0
  1114  000598  0E00               	movlw	0
  1115  00059A  6E36               	movwf	_clock,c	;volatile
  1116  00059C  0E00               	movlw	0
  1117  00059E  6E37               	movwf	_clock+1,c	;volatile
  1118  0005A0  0E00               	movlw	0
  1119  0005A2  6E38               	movwf	_clock+2,c	;volatile
  1120  0005A4  0E00               	movlw	0
  1121  0005A6  6E39               	movwf	_clock+3,c	;volatile
  1122                           
  1123                           ;Clock.c: 34: INTCONbits.GIE = 1;
  1124  0005A8  8EF2               	bsf	intcon,7,c	;volatile
  1125                           
  1126                           ;Clock.c: 35: OpenTimer0( 0b11111111 &
  1127                           ;Clock.c: 36: 0b11111111 &
  1128                           ;Clock.c: 37: 0b11011111 &
  1129                           ;Clock.c: 38: 0b11110010);
  1130  0005AA  0ED2               	movlw	210
  1131  0005AC  EC9E  F002         	call	_OpenTimer0
  1132  0005B0  0012               	return	
  1133  0005B2                     __end_of_initClock:
  1134                           	opt stack 0
  1135                           tblptru	equ	0xFF8
  1136                           tblptrh	equ	0xFF7
  1137                           tblptrl	equ	0xFF6
  1138                           tablat	equ	0xFF5
  1139                           intcon	equ	0xFF2
  1140                           postinc0	equ	0xFEE
  1141                           wreg	equ	0xFE8
  1142                           postdec1	equ	0xFE5
  1143                           fsr1l	equ	0xFE1
  1144                           indf2	equ	0xFDF
  1145                           postinc2	equ	0xFDE
  1146                           postdec2	equ	0xFDD
  1147                           fsr2h	equ	0xFDA
  1148                           fsr2l	equ	0xFD9
  1149                           status	equ	0xFD8
  1150                           
  1151 ;; *************** function _OpenTimer0 *****************
  1152 ;; Defined at:
  1153 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t0open.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;  config          1    wreg     unsigned char 
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;  config          1   14[COMRAM] unsigned char 
  1158 ;; Return value:  Size  Location     Type
  1159 ;;		None               void
  1160 ;; Registers used:
  1161 ;;		wreg, status,2, status,0
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1167 ;;      Params:         0       0       0       0       0       0       0
  1168 ;;      Locals:         1       0       0       0       0       0       0
  1169 ;;      Temps:          0       0       0       0       0       0       0
  1170 ;;      Totals:         1       0       0       0       0       0       0
  1171 ;;Total ram usage:        1 bytes
  1172 ;; Hardware stack levels used:    1
  1173 ;; Hardware stack levels required when called:    2
  1174 ;; This function calls:
  1175 ;;		Nothing
  1176 ;; This function is called by:
  1177 ;;		_initClock
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text9
  1182  00053C                     __ptext9:
  1183                           	opt stack 0
  1184  00053C                     _OpenTimer0:
  1185                           	opt stack 27
  1186                           
  1187                           ;incstack = 0
  1188                           ;OpenTimer0@config stored from wreg
  1189  00053C  6E0F               	movwf	OpenTimer0@config,c
  1190  00053E  500F               	movf	OpenTimer0@config,w,c
  1191  000540  0B7F               	andlw	127
  1192  000542  6ED5               	movwf	4053,c	;volatile
  1193  000544  0E00               	movlw	0
  1194  000546  6ED7               	movwf	4055,c	;volatile
  1195  000548  0E00               	movlw	0
  1196  00054A  6ED6               	movwf	4054,c	;volatile
  1197  00054C  94F2               	bcf	intcon,2,c	;volatile
  1198  00054E  AE0F               	btfss	OpenTimer0@config,7,c
  1199  000550  D002               	goto	l300
  1200  000552  8AF2               	bsf	intcon,5,c	;volatile
  1201  000554  D001               	goto	l301
  1202  000556                     l300:
  1203  000556  9AF2               	bcf	intcon,5,c	;volatile
  1204  000558                     l301:
  1205  000558  8ED5               	bsf	4053,7,c	;volatile
  1206  00055A  0012               	return	
  1207  00055C                     __end_of_OpenTimer0:
  1208                           	opt stack 0
  1209                           tblptru	equ	0xFF8
  1210                           tblptrh	equ	0xFF7
  1211                           tblptrl	equ	0xFF6
  1212                           tablat	equ	0xFF5
  1213                           intcon	equ	0xFF2
  1214                           postinc0	equ	0xFEE
  1215                           wreg	equ	0xFE8
  1216                           postdec1	equ	0xFE5
  1217                           fsr1l	equ	0xFE1
  1218                           indf2	equ	0xFDF
  1219                           postinc2	equ	0xFDE
  1220                           postdec2	equ	0xFDD
  1221                           fsr2h	equ	0xFDA
  1222                           fsr2l	equ	0xFD9
  1223                           status	equ	0xFD8
  1224                           
  1225 ;; *************** function _init7Segment *****************
  1226 ;; Defined at:
  1227 ;;		line 36 in file "../src/PIC18/SevenSeg.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;  _7seg           2   14[COMRAM] PTR struct .
  1230 ;;		 -> main@_7SegData(7), 
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;		None
  1233 ;; Return value:  Size  Location     Type
  1234 ;;		None               void
  1235 ;; Registers used:
  1236 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1242 ;;      Params:         2       0       0       0       0       0       0
  1243 ;;      Locals:         0       0       0       0       0       0       0
  1244 ;;      Temps:          0       0       0       0       0       0       0
  1245 ;;      Totals:         2       0       0       0       0       0       0
  1246 ;;Total ram usage:        2 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:    2
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_main
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text10
  1257  000506                     __ptext10:
  1258                           	opt stack 0
  1259  000506                     _init7Segment:
  1260                           	opt stack 28
  1261                           
  1262                           ;SevenSeg.c: 37: _7seg->state = _7SEG_INIT;
  1263                           
  1264                           ;incstack = 0
  1265  000506  EE20 F004          	lfsr	2,4
  1266  00050A  500F               	movf	init7Segment@_7seg,w,c
  1267  00050C  26D9               	addwf	fsr2l,f,c
  1268  00050E  5010               	movf	init7Segment@_7seg+1,w,c
  1269  000510  22DA               	addwfc	fsr2h,f,c
  1270  000512  0E00               	movlw	0
  1271  000514  6EDF               	movwf	indf2,c
  1272                           
  1273                           ;SevenSeg.c: 38: _7seg->clock = 0;
  1274  000516  C00F  FFD9         	movff	init7Segment@_7seg,fsr2l
  1275  00051A  C010  FFDA         	movff	init7Segment@_7seg+1,fsr2h
  1276  00051E  6ADE               	clrf	postinc2,c
  1277  000520  6ADE               	clrf	postinc2,c
  1278  000522  6ADE               	clrf	postinc2,c
  1279  000524  6ADD               	clrf	postdec2,c
  1280                           
  1281                           ;SevenSeg.c: 39: _7seg->counter = 0;
  1282  000526  EE20 F005          	lfsr	2,5
  1283  00052A  500F               	movf	init7Segment@_7seg,w,c
  1284  00052C  26D9               	addwf	fsr2l,f,c
  1285  00052E  5010               	movf	init7Segment@_7seg+1,w,c
  1286  000530  22DA               	addwfc	fsr2h,f,c
  1287  000532  0E00               	movlw	0
  1288  000534  6EDE               	movwf	postinc2,c
  1289  000536  0E00               	movlw	0
  1290  000538  6EDD               	movwf	postdec2,c
  1291  00053A  0012               	return	
  1292  00053C                     __end_of_init7Segment:
  1293                           	opt stack 0
  1294                           tblptru	equ	0xFF8
  1295                           tblptrh	equ	0xFF7
  1296                           tblptrl	equ	0xFF6
  1297                           tablat	equ	0xFF5
  1298                           intcon	equ	0xFF2
  1299                           postinc0	equ	0xFEE
  1300                           wreg	equ	0xFE8
  1301                           postdec1	equ	0xFE5
  1302                           fsr1l	equ	0xFE1
  1303                           indf2	equ	0xFDF
  1304                           postinc2	equ	0xFDE
  1305                           postdec2	equ	0xFDD
  1306                           fsr2h	equ	0xFDA
  1307                           fsr2l	equ	0xFD9
  1308                           status	equ	0xFD8
  1309                           
  1310 ;; *************** function _configureLED *****************
  1311 ;; Defined at:
  1312 ;;		line 20 in file "../src/PIC18/Blinky.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;		None
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;		None
  1317 ;; Return value:  Size  Location     Type
  1318 ;;		None               void
  1319 ;; Registers used:
  1320 ;;		None
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1326 ;;      Params:         0       0       0       0       0       0       0
  1327 ;;      Locals:         0       0       0       0       0       0       0
  1328 ;;      Temps:          0       0       0       0       0       0       0
  1329 ;;      Totals:         0       0       0       0       0       0       0
  1330 ;;Total ram usage:        0 bytes
  1331 ;; Hardware stack levels used:    1
  1332 ;; Hardware stack levels required when called:    2
  1333 ;; This function calls:
  1334 ;;		Nothing
  1335 ;; This function is called by:
  1336 ;;		_main
  1337 ;;		_ledSM
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           	psect	text11
  1342  000642                     __ptext11:
  1343                           	opt stack 0
  1344  000642                     _configureLED:
  1345                           	opt stack 28
  1346                           
  1347                           ;Blinky.c: 21: TRISCbits.TRISC0 = 0;
  1348                           
  1349                           ;incstack = 0
  1350  000642  9094               	bcf	3988,0,c	;volatile
  1351  000644  0012               	return	
  1352  000646                     __end_of_configureLED:
  1353                           	opt stack 0
  1354                           tblptru	equ	0xFF8
  1355                           tblptrh	equ	0xFF7
  1356                           tblptrl	equ	0xFF6
  1357                           tablat	equ	0xFF5
  1358                           intcon	equ	0xFF2
  1359                           postinc0	equ	0xFEE
  1360                           wreg	equ	0xFE8
  1361                           postdec1	equ	0xFE5
  1362                           fsr1l	equ	0xFE1
  1363                           indf2	equ	0xFDF
  1364                           postinc2	equ	0xFDE
  1365                           postdec2	equ	0xFDD
  1366                           fsr2h	equ	0xFDA
  1367                           fsr2l	equ	0xFD9
  1368                           status	equ	0xFD8
  1369                           
  1370 ;; *************** function _closeModule *****************
  1371 ;; Defined at:
  1372 ;;		line 7 in file "../src/PIC18/Main.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;		None
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;		None
  1377 ;; Return value:  Size  Location     Type
  1378 ;;		None               void
  1379 ;; Registers used:
  1380 ;;		wreg, status,2, status,0
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1386 ;;      Params:         0       0       0       0       0       0       0
  1387 ;;      Locals:         0       0       0       0       0       0       0
  1388 ;;      Temps:          0       0       0       0       0       0       0
  1389 ;;      Totals:         0       0       0       0       0       0       0
  1390 ;;Total ram usage:        0 bytes
  1391 ;; Hardware stack levels used:    1
  1392 ;; Hardware stack levels required when called:    2
  1393 ;; This function calls:
  1394 ;;		Nothing
  1395 ;; This function is called by:
  1396 ;;		_main
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           	psect	text12
  1401  00062C                     __ptext12:
  1402                           	opt stack 0
  1403  00062C                     _closeModule:
  1404                           	opt stack 28
  1405                           
  1406                           ;Main.c: 8: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  1407                           
  1408                           ;incstack = 0
  1409  00062C  0E4F               	movlw	79
  1410  00062E  16AB               	andwf	4011,f,c	;volatile
  1411  000630  9AAC               	bcf	4012,5,c	;volatile
  1412  000632  0ECF               	movlw	207
  1413  000634  169D               	andwf	3997,f,c	;volatile
  1414                           
  1415                           ;Main.c: 9: (SSPCON1 &=0xDF);
  1416  000636  9AC6               	bcf	4038,5,c	;volatile
  1417  000638  0012               	return	
  1418  00063A                     __end_of_closeModule:
  1419                           	opt stack 0
  1420                           tblptru	equ	0xFF8
  1421                           tblptrh	equ	0xFF7
  1422                           tblptrl	equ	0xFF6
  1423                           tablat	equ	0xFF5
  1424                           intcon	equ	0xFF2
  1425                           postinc0	equ	0xFEE
  1426                           wreg	equ	0xFE8
  1427                           postdec1	equ	0xFE5
  1428                           fsr1l	equ	0xFE1
  1429                           indf2	equ	0xFDF
  1430                           postinc2	equ	0xFDE
  1431                           postdec2	equ	0xFDD
  1432                           fsr2h	equ	0xFDA
  1433                           fsr2l	equ	0xFD9
  1434                           status	equ	0xFD8
  1435                           
  1436 ;; *************** function __7SegmentSM *****************
  1437 ;; Defined at:
  1438 ;;		line 48 in file "../src/PIC18/SevenSeg.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;  _7seg           2   18[COMRAM] PTR struct .
  1441 ;;		 -> main@_7SegData(7), 
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;		None               void
  1446 ;; Registers used:
  1447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1453 ;;      Params:         2       0       0       0       0       0       0
  1454 ;;      Locals:         0       0       0       0       0       0       0
  1455 ;;      Temps:         12       0       0       0       0       0       0
  1456 ;;      Totals:        14       0       0       0       0       0       0
  1457 ;;Total ram usage:       14 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; Hardware stack levels required when called:    4
  1460 ;; This function calls:
  1461 ;;		_getCLOCK
  1462 ;;		_init7SegmentHW
  1463 ;;		_write7Segment
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text13
  1470  00001C                     __ptext13:
  1471                           	opt stack 0
  1472  00001C                     __7SegmentSM:
  1473                           	opt stack 26
  1474                           
  1475                           ;SevenSeg.c: 49: switch(_7seg->state){
  1476                           
  1477                           ;incstack = 0
  1478  00001C  D0A9               	goto	l1163
  1479  00001E                     l1141:
  1480                           
  1481                           ;SevenSeg.c: 51: init7SegmentHW();
  1482  00001E  ECF2  F002         	call	_init7SegmentHW	;wreg free
  1483                           
  1484                           ;SevenSeg.c: 52: _7seg->counter = 0;
  1485  000022  EE20 F005          	lfsr	2,5
  1486  000026  5013               	movf	__7SegmentSM@_7seg,w,c
  1487  000028  26D9               	addwf	fsr2l,f,c
  1488  00002A  5014               	movf	__7SegmentSM@_7seg+1,w,c
  1489  00002C  22DA               	addwfc	fsr2h,f,c
  1490  00002E  0E00               	movlw	0
  1491  000030  6EDE               	movwf	postinc2,c
  1492  000032  0E00               	movlw	0
  1493  000034  6EDD               	movwf	postdec2,c
  1494                           
  1495                           ;SevenSeg.c: 53: _7seg->clock = getCLOCK();
  1496  000036  EC05  F003         	call	_getCLOCK	;wreg free
  1497  00003A  C00F  F015         	movff	?_getCLOCK,??__7SegmentSM
  1498  00003E  C010  F016         	movff	?_getCLOCK+1,??__7SegmentSM+1
  1499  000042  C011  F017         	movff	?_getCLOCK+2,??__7SegmentSM+2
  1500  000046  C012  F018         	movff	?_getCLOCK+3,??__7SegmentSM+3
  1501  00004A  C013  FFD9         	movff	__7SegmentSM@_7seg,fsr2l
  1502  00004E  C014  FFDA         	movff	__7SegmentSM@_7seg+1,fsr2h
  1503  000052  C015  FFDE         	movff	??__7SegmentSM,postinc2
  1504  000056  C016  FFDE         	movff	??__7SegmentSM+1,postinc2
  1505  00005A  C017  FFDE         	movff	??__7SegmentSM+2,postinc2
  1506  00005E  C018  FFDD         	movff	??__7SegmentSM+3,postdec2
  1507  000062  06D9               	decf	fsr2l,f,c
  1508  000064  06D9               	decf	fsr2l,f,c
  1509                           
  1510                           ;SevenSeg.c: 54: _7seg->state = _7SEG_WAITING;
  1511  000066  EE20 F004          	lfsr	2,4
  1512  00006A  5013               	movf	__7SegmentSM@_7seg,w,c
  1513  00006C  26D9               	addwf	fsr2l,f,c
  1514  00006E  5014               	movf	__7SegmentSM@_7seg+1,w,c
  1515  000070  22DA               	addwfc	fsr2h,f,c
  1516  000072  0E01               	movlw	1
  1517  000074  6EDF               	movwf	indf2,c
  1518                           
  1519                           ;SevenSeg.c: 55: write7Segment(_7seg->counter);
  1520  000076  EE20 F005          	lfsr	2,5
  1521  00007A  5013               	movf	__7SegmentSM@_7seg,w,c
  1522  00007C  26D9               	addwf	fsr2l,f,c
  1523  00007E  5014               	movf	__7SegmentSM@_7seg+1,w,c
  1524  000080  22DA               	addwfc	fsr2h,f,c
  1525  000082  50DF               	movf	indf2,w,c
  1526  000084  ECD9  F002         	call	_write7Segment
  1527                           
  1528                           ;SevenSeg.c: 56: break;
  1529  000088  D080               	goto	l180
  1530  00008A                     l1149:
  1531                           
  1532                           ;SevenSeg.c: 58: if(getCLOCK() - _7seg->clock == 488){
  1533  00008A  C013  FFD9         	movff	__7SegmentSM@_7seg,fsr2l
  1534  00008E  C014  FFDA         	movff	__7SegmentSM@_7seg+1,fsr2h
  1535  000092  CFDE F015          	movff	postinc2,??__7SegmentSM
  1536  000096  CFDE F016          	movff	postinc2,??__7SegmentSM+1
  1537  00009A  CFDE F017          	movff	postinc2,??__7SegmentSM+2
  1538  00009E  CFDE F018          	movff	postinc2,??__7SegmentSM+3
  1539  0000A2  1E15               	comf	??__7SegmentSM,f,c
  1540  0000A4  1E16               	comf	??__7SegmentSM+1,f,c
  1541  0000A6  1E17               	comf	??__7SegmentSM+2,f,c
  1542  0000A8  1E18               	comf	??__7SegmentSM+3,f,c
  1543  0000AA  2A15               	incf	??__7SegmentSM,f,c
  1544  0000AC  0E00               	movlw	0
  1545  0000AE  2216               	addwfc	??__7SegmentSM+1,f,c
  1546  0000B0  2217               	addwfc	??__7SegmentSM+2,f,c
  1547  0000B2  2218               	addwfc	??__7SegmentSM+3,f,c
  1548  0000B4  EC05  F003         	call	_getCLOCK	;wreg free
  1549  0000B8  C00F  F019         	movff	?_getCLOCK,??__7SegmentSM+4
  1550  0000BC  C010  F01A         	movff	?_getCLOCK+1,??__7SegmentSM+5
  1551  0000C0  C011  F01B         	movff	?_getCLOCK+2,??__7SegmentSM+6
  1552  0000C4  C012  F01C         	movff	?_getCLOCK+3,??__7SegmentSM+7
  1553  0000C8  5015               	movf	??__7SegmentSM,w,c
  1554  0000CA  2419               	addwf	??__7SegmentSM+4,w,c
  1555  0000CC  6E1D               	movwf	(??__7SegmentSM+8)& (0+255),c
  1556  0000CE  5016               	movf	??__7SegmentSM+1,w,c
  1557  0000D0  201A               	addwfc	??__7SegmentSM+5,w,c
  1558  0000D2  6E1E               	movwf	(??__7SegmentSM+9)& (0+255),c
  1559  0000D4  5017               	movf	??__7SegmentSM+2,w,c
  1560  0000D6  201B               	addwfc	??__7SegmentSM+6,w,c
  1561  0000D8  6E1F               	movwf	(??__7SegmentSM+10)& (0+255),c
  1562  0000DA  5018               	movf	??__7SegmentSM+3,w,c
  1563  0000DC  201C               	addwfc	??__7SegmentSM+7,w,c
  1564  0000DE  6E20               	movwf	(??__7SegmentSM+11)& (0+255),c
  1565  0000E0  041E               	decf	??__7SegmentSM+9,w,c
  1566  0000E2  0EE8               	movlw	232
  1567  0000E4  B4D8               	btfsc	status,2,c
  1568  0000E6  181D               	xorwf	??__7SegmentSM+8,w,c
  1569  0000E8  101F               	iorwf	??__7SegmentSM+10,w,c
  1570  0000EA  1020               	iorwf	??__7SegmentSM+11,w,c
  1571  0000EC  A4D8               	btfss	status,2,c
  1572  0000EE  D02A               	goto	l1157
  1573                           
  1574                           ;SevenSeg.c: 59: _7seg->clock = getCLOCK();
  1575  0000F0  EC05  F003         	call	_getCLOCK	;wreg free
  1576  0000F4  C00F  F015         	movff	?_getCLOCK,??__7SegmentSM
  1577  0000F8  C010  F016         	movff	?_getCLOCK+1,??__7SegmentSM+1
  1578  0000FC  C011  F017         	movff	?_getCLOCK+2,??__7SegmentSM+2
  1579  000100  C012  F018         	movff	?_getCLOCK+3,??__7SegmentSM+3
  1580  000104  C013  FFD9         	movff	__7SegmentSM@_7seg,fsr2l
  1581  000108  C014  FFDA         	movff	__7SegmentSM@_7seg+1,fsr2h
  1582  00010C  C015  FFDE         	movff	??__7SegmentSM,postinc2
  1583  000110  C016  FFDE         	movff	??__7SegmentSM+1,postinc2
  1584  000114  C017  FFDE         	movff	??__7SegmentSM+2,postinc2
  1585  000118  C018  FFDD         	movff	??__7SegmentSM+3,postdec2
  1586  00011C  06D9               	decf	fsr2l,f,c
  1587  00011E  06D9               	decf	fsr2l,f,c
  1588                           
  1589                           ;SevenSeg.c: 60: write7Segment(_7seg->counter);
  1590  000120  EE20 F005          	lfsr	2,5
  1591  000124  5013               	movf	__7SegmentSM@_7seg,w,c
  1592  000126  26D9               	addwf	fsr2l,f,c
  1593  000128  5014               	movf	__7SegmentSM@_7seg+1,w,c
  1594  00012A  22DA               	addwfc	fsr2h,f,c
  1595  00012C  50DF               	movf	indf2,w,c
  1596  00012E  ECD9  F002         	call	_write7Segment
  1597                           
  1598                           ;SevenSeg.c: 61: _7seg->counter += 1;
  1599  000132  EE20 F005          	lfsr	2,5
  1600  000136  5013               	movf	__7SegmentSM@_7seg,w,c
  1601  000138  26D9               	addwf	fsr2l,f,c
  1602  00013A  5014               	movf	__7SegmentSM@_7seg+1,w,c
  1603  00013C  22DA               	addwfc	fsr2h,f,c
  1604  00013E  2ADE               	incf	postinc2,f,c
  1605  000140  0E00               	movlw	0
  1606  000142  22DD               	addwfc	postdec2,f,c
  1607  000144                     l1157:
  1608                           
  1609                           ;SevenSeg.c: 62: }
  1610                           ;SevenSeg.c: 63: if(_7seg->counter == 16)
  1611  000144  EE20 F005          	lfsr	2,5
  1612  000148  5013               	movf	__7SegmentSM@_7seg,w,c
  1613  00014A  26D9               	addwf	fsr2l,f,c
  1614  00014C  5014               	movf	__7SegmentSM@_7seg+1,w,c
  1615  00014E  22DA               	addwfc	fsr2h,f,c
  1616  000150  50DE               	movf	postinc2,w,c
  1617  000152  0A10               	xorlw	16
  1618  000154  10DD               	iorwf	postdec2,w,c
  1619  000156  A4D8               	btfss	status,2,c
  1620  000158  D018               	goto	l180
  1621                           
  1622                           ;SevenSeg.c: 64: _7seg->counter = 0;
  1623  00015A  EE20 F005          	lfsr	2,5
  1624  00015E  5013               	movf	__7SegmentSM@_7seg,w,c
  1625  000160  26D9               	addwf	fsr2l,f,c
  1626  000162  5014               	movf	__7SegmentSM@_7seg+1,w,c
  1627  000164  22DA               	addwfc	fsr2h,f,c
  1628  000166  0E00               	movlw	0
  1629  000168  6EDE               	movwf	postinc2,c
  1630  00016A  0E00               	movlw	0
  1631  00016C  6EDD               	movwf	postdec2,c
  1632  00016E  D00D               	goto	l180
  1633  000170                     l1163:
  1634  000170  EE20 F004          	lfsr	2,4
  1635  000174  5013               	movf	__7SegmentSM@_7seg,w,c
  1636  000176  26D9               	addwf	fsr2l,f,c
  1637  000178  5014               	movf	__7SegmentSM@_7seg+1,w,c
  1638  00017A  22DA               	addwfc	fsr2h,f,c
  1639  00017C  50DF               	movf	indf2,w,c
  1640                           
  1641                           ; Switch size 1, requested type "space"
  1642                           ; Number of cases is 2, Range of values is 0 to 1
  1643                           ; switch strategies available:
  1644                           ; Name         Instructions Cycles
  1645                           ; simple_byte            7     4 (average)
  1646                           ;	Chosen strategy is simple_byte
  1647  00017E  0A00               	xorlw	0	; case 0
  1648  000180  B4D8               	btfsc	status,2,c
  1649  000182  D74D               	goto	l1141
  1650  000184  0A01               	xorlw	1	; case 1
  1651  000186  B4D8               	btfsc	status,2,c
  1652  000188  D780               	goto	l1149
  1653  00018A                     l180:
  1654  00018A  0012               	return	
  1655  00018C                     __end_of__7SegmentSM:
  1656                           	opt stack 0
  1657                           tblptru	equ	0xFF8
  1658                           tblptrh	equ	0xFF7
  1659                           tblptrl	equ	0xFF6
  1660                           tablat	equ	0xFF5
  1661                           intcon	equ	0xFF2
  1662                           postinc0	equ	0xFEE
  1663                           wreg	equ	0xFE8
  1664                           postdec1	equ	0xFE5
  1665                           fsr1l	equ	0xFE1
  1666                           indf2	equ	0xFDF
  1667                           postinc2	equ	0xFDE
  1668                           postdec2	equ	0xFDD
  1669                           fsr2h	equ	0xFDA
  1670                           fsr2l	equ	0xFD9
  1671                           status	equ	0xFD8
  1672                           
  1673 ;; *************** function _write7Segment *****************
  1674 ;; Defined at:
  1675 ;;		line 32 in file "../src/PIC18/SevenSeg.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;  data            1    wreg     unsigned char 
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  data            1   16[COMRAM] unsigned char 
  1680 ;; Return value:  Size  Location     Type
  1681 ;;		None               void
  1682 ;; Registers used:
  1683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1689 ;;      Params:         0       0       0       0       0       0       0
  1690 ;;      Locals:         1       0       0       0       0       0       0
  1691 ;;      Temps:          0       0       0       0       0       0       0
  1692 ;;      Totals:         1       0       0       0       0       0       0
  1693 ;;Total ram usage:        1 bytes
  1694 ;; Hardware stack levels used:    1
  1695 ;; Hardware stack levels required when called:    3
  1696 ;; This function calls:
  1697 ;;		_WriteSPI
  1698 ;; This function is called by:
  1699 ;;		__7SegmentSM
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text14
  1704  0005B2                     __ptext14:
  1705                           	opt stack 0
  1706  0005B2                     _write7Segment:
  1707                           	opt stack 26
  1708                           
  1709                           ;incstack = 0
  1710                           ;write7Segment@data stored from wreg
  1711  0005B2  6E11               	movwf	write7Segment@data,c
  1712                           
  1713                           ;SevenSeg.c: 33: WriteSPI(hexPattern[data]);
  1714  0005B4  5011               	movf	write7Segment@data,w,c
  1715  0005B6  0D01               	mullw	1
  1716  0005B8  0E63               	movlw	low _hexPattern
  1717  0005BA  24F3               	addwf	prodl,w,c
  1718  0005BC  6ED9               	movwf	fsr2l,c
  1719  0005BE  0E00               	movlw	high _hexPattern
  1720  0005C0  20F4               	addwfc	prodh,w,c
  1721  0005C2  6EDA               	movwf	fsr2h,c
  1722  0005C4  50DF               	movf	indf2,w,c
  1723  0005C6  ECE6  F002         	call	_WriteSPI
  1724  0005CA  0012               	return	
  1725  0005CC                     __end_of_write7Segment:
  1726                           	opt stack 0
  1727                           tblptru	equ	0xFF8
  1728                           tblptrh	equ	0xFF7
  1729                           tblptrl	equ	0xFF6
  1730                           tablat	equ	0xFF5
  1731                           prodh	equ	0xFF4
  1732                           prodl	equ	0xFF3
  1733                           intcon	equ	0xFF2
  1734                           postinc0	equ	0xFEE
  1735                           wreg	equ	0xFE8
  1736                           postdec1	equ	0xFE5
  1737                           fsr1l	equ	0xFE1
  1738                           indf2	equ	0xFDF
  1739                           postinc2	equ	0xFDE
  1740                           postdec2	equ	0xFDD
  1741                           fsr2h	equ	0xFDA
  1742                           fsr2l	equ	0xFD9
  1743                           status	equ	0xFD8
  1744                           
  1745 ;; *************** function _WriteSPI *****************
  1746 ;; Defined at:
  1747 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\SPI\spi_writ.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;  data_out        1    wreg     unsigned char 
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;  data_out        1   15[COMRAM] unsigned char 
  1752 ;;  TempVar         1   14[COMRAM] unsigned char 
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  1    wreg      char 
  1755 ;; Registers used:
  1756 ;;		wreg
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1762 ;;      Params:         0       0       0       0       0       0       0
  1763 ;;      Locals:         2       0       0       0       0       0       0
  1764 ;;      Temps:          0       0       0       0       0       0       0
  1765 ;;      Totals:         2       0       0       0       0       0       0
  1766 ;;Total ram usage:        2 bytes
  1767 ;; Hardware stack levels used:    1
  1768 ;; Hardware stack levels required when called:    2
  1769 ;; This function calls:
  1770 ;;		Nothing
  1771 ;; This function is called by:
  1772 ;;		_write7Segment
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           	psect	text15
  1777  0005CC                     __ptext15:
  1778                           	opt stack 0
  1779  0005CC                     _WriteSPI:
  1780                           	opt stack 26
  1781                           
  1782                           ;incstack = 0
  1783                           ;WriteSPI@data_out stored from wreg
  1784  0005CC  6E10               	movwf	WriteSPI@data_out,c
  1785  0005CE  CFC9 F00F          	movff	4041,WriteSPI@TempVar	;volatile
  1786  0005D2  969E               	bcf	3998,3,c	;volatile
  1787  0005D4  9EC6               	bcf	4038,7,c	;volatile
  1788  0005D6  C010  FFC9         	movff	WriteSPI@data_out,4041	;volatile
  1789  0005DA  BEC6               	btfsc	4038,7,c	;volatile
  1790  0005DC  D002               	goto	l283
  1791  0005DE                     l285:
  1792  0005DE  A69E               	btfss	3998,3,c	;volatile
  1793  0005E0  D7FE               	goto	l285
  1794  0005E2                     l283:
  1795  0005E2  0012               	return	
  1796  0005E4                     __end_of_WriteSPI:
  1797                           	opt stack 0
  1798                           tblptru	equ	0xFF8
  1799                           tblptrh	equ	0xFF7
  1800                           tblptrl	equ	0xFF6
  1801                           tablat	equ	0xFF5
  1802                           prodh	equ	0xFF4
  1803                           prodl	equ	0xFF3
  1804                           intcon	equ	0xFF2
  1805                           postinc0	equ	0xFEE
  1806                           wreg	equ	0xFE8
  1807                           postdec1	equ	0xFE5
  1808                           fsr1l	equ	0xFE1
  1809                           indf2	equ	0xFDF
  1810                           postinc2	equ	0xFDE
  1811                           postdec2	equ	0xFDD
  1812                           fsr2h	equ	0xFDA
  1813                           fsr2l	equ	0xFD9
  1814                           status	equ	0xFD8
  1815                           
  1816 ;; *************** function _init7SegmentHW *****************
  1817 ;; Defined at:
  1818 ;;		line 42 in file "../src/PIC18/SevenSeg.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;		None
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;		None
  1823 ;; Return value:  Size  Location     Type
  1824 ;;		None               void
  1825 ;; Registers used:
  1826 ;;		wreg, status,2, status,0, cstack
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1832 ;;      Params:         0       0       0       0       0       0       0
  1833 ;;      Locals:         0       0       0       0       0       0       0
  1834 ;;      Temps:          0       0       0       0       0       0       0
  1835 ;;      Totals:         0       0       0       0       0       0       0
  1836 ;;Total ram usage:        0 bytes
  1837 ;; Hardware stack levels used:    1
  1838 ;; Hardware stack levels required when called:    3
  1839 ;; This function calls:
  1840 ;;		_OpenSPI
  1841 ;; This function is called by:
  1842 ;;		__7SegmentSM
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           	psect	text16
  1847  0005E4                     __ptext16:
  1848                           	opt stack 0
  1849  0005E4                     _init7SegmentHW:
  1850                           	opt stack 26
  1851                           
  1852                           ;SevenSeg.c: 43: OpenSPI(0b00000000, 0b00000011, 0b10000000);
  1853                           
  1854                           ;incstack = 0
  1855  0005E4  0E03               	movlw	3
  1856  0005E6  6E0F               	movwf	OpenSPI@bus_mode,c
  1857  0005E8  0E80               	movlw	128
  1858  0005EA  6E10               	movwf	OpenSPI@smp_phase,c
  1859  0005EC  0E00               	movlw	0
  1860  0005EE  EC3B  F002         	call	_OpenSPI
  1861                           
  1862                           ;SevenSeg.c: 44: (TRISDbits.RD0 = 0);
  1863  0005F2  9095               	bcf	3989,0,c	;volatile
  1864                           
  1865                           ;SevenSeg.c: 45: (PORTDbits.RD0 = 1);
  1866  0005F4  8083               	bsf	3971,0,c	;volatile
  1867  0005F6  0012               	return	
  1868  0005F8                     __end_of_init7SegmentHW:
  1869                           	opt stack 0
  1870                           tblptru	equ	0xFF8
  1871                           tblptrh	equ	0xFF7
  1872                           tblptrl	equ	0xFF6
  1873                           tablat	equ	0xFF5
  1874                           prodh	equ	0xFF4
  1875                           prodl	equ	0xFF3
  1876                           intcon	equ	0xFF2
  1877                           postinc0	equ	0xFEE
  1878                           wreg	equ	0xFE8
  1879                           postdec1	equ	0xFE5
  1880                           fsr1l	equ	0xFE1
  1881                           indf2	equ	0xFDF
  1882                           postinc2	equ	0xFDE
  1883                           postdec2	equ	0xFDD
  1884                           fsr2h	equ	0xFDA
  1885                           fsr2l	equ	0xFD9
  1886                           status	equ	0xFD8
  1887                           
  1888 ;; *************** function _OpenSPI *****************
  1889 ;; Defined at:
  1890 ;;		line 14 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\SPI\spi_open.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  sync_mode       1    wreg     unsigned char 
  1893 ;;  bus_mode        1   14[COMRAM] unsigned char 
  1894 ;;  smp_phase       1   15[COMRAM] unsigned char 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;  sync_mode       1   16[COMRAM] unsigned char 
  1897 ;; Return value:  Size  Location     Type
  1898 ;;		None               void
  1899 ;; Registers used:
  1900 ;;		wreg, status,2, status,0
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1906 ;;      Params:         2       0       0       0       0       0       0
  1907 ;;      Locals:         1       0       0       0       0       0       0
  1908 ;;      Temps:          0       0       0       0       0       0       0
  1909 ;;      Totals:         3       0       0       0       0       0       0
  1910 ;;Total ram usage:        3 bytes
  1911 ;; Hardware stack levels used:    1
  1912 ;; Hardware stack levels required when called:    2
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_init7SegmentHW
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           	psect	text17
  1921  000476                     __ptext17:
  1922                           	opt stack 0
  1923  000476                     _OpenSPI:
  1924                           	opt stack 26
  1925                           
  1926                           ;incstack = 0
  1927                           ;OpenSPI@sync_mode stored from wreg
  1928  000476  6E11               	movwf	OpenSPI@sync_mode,c
  1929  000478  0E3F               	movlw	63
  1930  00047A  16C7               	andwf	4039,f,c	;volatile
  1931  00047C  0E00               	movlw	0
  1932  00047E  6EC6               	movwf	4038,c	;volatile
  1933  000480  5011               	movf	OpenSPI@sync_mode,w,c
  1934  000482  12C6               	iorwf	4038,f,c	;volatile
  1935  000484  5010               	movf	OpenSPI@smp_phase,w,c
  1936  000486  12C7               	iorwf	4039,f,c	;volatile
  1937  000488  D005               	goto	l965
  1938  00048A                     l261:
  1939  00048A  8CC7               	bsf	4039,6,c	;volatile
  1940  00048C  D015               	goto	l969
  1941  00048E                     l263:
  1942  00048E  8CC7               	bsf	4039,6,c	;volatile
  1943  000490                     l264:
  1944  000490  88C6               	bsf	4038,4,c	;volatile
  1945  000492  D012               	goto	l969
  1946  000494                     l965:
  1947  000494  500F               	movf	OpenSPI@bus_mode,w,c
  1948                           
  1949                           ; Switch size 1, requested type "space"
  1950                           ; Number of cases is 3, Range of values is 0 to 3
  1951                           ; switch strategies available:
  1952                           ; Name         Instructions Cycles
  1953                           ; simple_byte           10     6 (average)
  1954                           ;	Chosen strategy is simple_byte
  1955  000496  0A00               	xorlw	0	; case 0
  1956  000498  B4D8               	btfsc	status,2,c
  1957  00049A  D7F7               	goto	l261
  1958  00049C  0A02               	xorlw	2	; case 2
  1959  00049E  B4D8               	btfsc	status,2,c
  1960  0004A0  D7F6               	goto	l263
  1961  0004A2  0A01               	xorlw	1	; case 3
  1962  0004A4  B4D8               	btfsc	status,2,c
  1963  0004A6  D7F4               	goto	l264
  1964  0004A8  D007               	goto	l969
  1965  0004AA                     l267:
  1966  0004AA  8694               	bsf	3988,3,c	;volatile
  1967  0004AC  8A92               	bsf	3986,5,c	;volatile
  1968  0004AE  D00C               	goto	l268
  1969  0004B0                     l269:
  1970  0004B0  8694               	bsf	3988,3,c	;volatile
  1971  0004B2  D00A               	goto	l268
  1972  0004B4                     l270:
  1973  0004B4  9694               	bcf	3988,3,c	;volatile
  1974  0004B6  D008               	goto	l268
  1975  0004B8                     l969:
  1976  0004B8  5011               	movf	OpenSPI@sync_mode,w,c
  1977                           
  1978                           ; Switch size 1, requested type "space"
  1979                           ; Number of cases is 2, Range of values is 4 to 5
  1980                           ; switch strategies available:
  1981                           ; Name         Instructions Cycles
  1982                           ; simple_byte            7     4 (average)
  1983                           ;	Chosen strategy is simple_byte
  1984  0004BA  0A04               	xorlw	4	; case 4
  1985  0004BC  B4D8               	btfsc	status,2,c
  1986  0004BE  D7F5               	goto	l267
  1987  0004C0  0A01               	xorlw	1	; case 5
  1988  0004C2  B4D8               	btfsc	status,2,c
  1989  0004C4  D7F5               	goto	l269
  1990  0004C6  D7F6               	goto	l270
  1991  0004C8                     l268:
  1992  0004C8  8894               	bsf	3988,4,c	;volatile
  1993  0004CA  9A94               	bcf	3988,5,c	;volatile
  1994  0004CC  8AC6               	bsf	4038,5,c	;volatile
  1995  0004CE  0012               	return	
  1996  0004D0                     __end_of_OpenSPI:
  1997                           	opt stack 0
  1998                           tblptru	equ	0xFF8
  1999                           tblptrh	equ	0xFF7
  2000                           tblptrl	equ	0xFF6
  2001                           tablat	equ	0xFF5
  2002                           prodh	equ	0xFF4
  2003                           prodl	equ	0xFF3
  2004                           intcon	equ	0xFF2
  2005                           postinc0	equ	0xFEE
  2006                           wreg	equ	0xFE8
  2007                           postdec1	equ	0xFE5
  2008                           fsr1l	equ	0xFE1
  2009                           indf2	equ	0xFDF
  2010                           postinc2	equ	0xFDE
  2011                           postdec2	equ	0xFDD
  2012                           fsr2h	equ	0xFDA
  2013                           fsr2l	equ	0xFD9
  2014                           status	equ	0xFD8
  2015                           
  2016 ;; *************** function _getCLOCK *****************
  2017 ;; Defined at:
  2018 ;;		line 45 in file "../src/PIC18/Clock.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;		None
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;		None
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  4   14[COMRAM] unsigned long 
  2025 ;; Registers used:
  2026 ;;		None
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2032 ;;      Params:         4       0       0       0       0       0       0
  2033 ;;      Locals:         0       0       0       0       0       0       0
  2034 ;;      Temps:          0       0       0       0       0       0       0
  2035 ;;      Totals:         4       0       0       0       0       0       0
  2036 ;;Total ram usage:        4 bytes
  2037 ;; Hardware stack levels used:    1
  2038 ;; Hardware stack levels required when called:    2
  2039 ;; This function calls:
  2040 ;;		Nothing
  2041 ;; This function is called by:
  2042 ;;		__7SegmentSM
  2043 ;;		_led2SM
  2044 ;;		_ledSM
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           	psect	text18
  2049  00060A                     __ptext18:
  2050                           	opt stack 0
  2051  00060A                     _getCLOCK:
  2052                           	opt stack 27
  2053                           
  2054                           ;Clock.c: 50: return clock;
  2055                           
  2056                           ;incstack = 0
  2057  00060A  C036  F00F         	movff	_clock,?_getCLOCK	;volatile
  2058  00060E  C037  F010         	movff	_clock+1,?_getCLOCK+1	;volatile
  2059  000612  C038  F011         	movff	_clock+2,?_getCLOCK+2	;volatile
  2060  000616  C039  F012         	movff	_clock+3,?_getCLOCK+3	;volatile
  2061  00061A  0012               	return	
  2062  00061C                     __end_of_getCLOCK:
  2063                           	opt stack 0
  2064                           tblptru	equ	0xFF8
  2065                           tblptrh	equ	0xFF7
  2066                           tblptrl	equ	0xFF6
  2067                           tablat	equ	0xFF5
  2068                           prodh	equ	0xFF4
  2069                           prodl	equ	0xFF3
  2070                           intcon	equ	0xFF2
  2071                           postinc0	equ	0xFEE
  2072                           wreg	equ	0xFE8
  2073                           postdec1	equ	0xFE5
  2074                           fsr1l	equ	0xFE1
  2075                           indf2	equ	0xFDF
  2076                           postinc2	equ	0xFDE
  2077                           postdec2	equ	0xFDD
  2078                           fsr2h	equ	0xFDA
  2079                           fsr2l	equ	0xFD9
  2080                           status	equ	0xFD8
  2081                           
  2082 ;; *************** function _OpenUSART *****************
  2083 ;; Defined at:
  2084 ;;		line 73 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uopen.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;  config          1    wreg     unsigned char 
  2087 ;;  spbrg           2   14[COMRAM] unsigned int 
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;  config          1   19[COMRAM] unsigned char 
  2090 ;; Return value:  Size  Location     Type
  2091 ;;		None               void
  2092 ;; Registers used:
  2093 ;;		wreg, status,2
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2099 ;;      Params:         2       0       0       0       0       0       0
  2100 ;;      Locals:         1       0       0       0       0       0       0
  2101 ;;      Temps:          3       0       0       0       0       0       0
  2102 ;;      Totals:         6       0       0       0       0       0       0
  2103 ;;Total ram usage:        6 bytes
  2104 ;; Hardware stack levels used:    1
  2105 ;; Hardware stack levels required when called:    2
  2106 ;; This function calls:
  2107 ;;		Nothing
  2108 ;; This function is called by:
  2109 ;;		_main
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113                           	psect	text19
  2114  00034A                     __ptext19:
  2115                           	opt stack 0
  2116  00034A                     _OpenUSART:
  2117                           	opt stack 28
  2118                           
  2119                           ;incstack = 0
  2120                           ;OpenUSART@config stored from wreg
  2121  00034A  6E14               	movwf	OpenUSART@config,c
  2122  00034C  0E00               	movlw	0
  2123  00034E  6EAC               	movwf	4012,c	;volatile
  2124  000350  0E00               	movlw	0
  2125  000352  6EAB               	movwf	4011,c	;volatile
  2126  000354  B014               	btfsc	OpenUSART@config,0,c
  2127  000356  88AC               	bsf	4012,4,c	;volatile
  2128  000358  A214               	btfss	OpenUSART@config,1,c
  2129  00035A  D002               	goto	l1041
  2130  00035C  8CAC               	bsf	4012,6,c	;volatile
  2131  00035E  8CAB               	bsf	4011,6,c	;volatile
  2132  000360                     l1041:
  2133  000360  B414               	btfsc	OpenUSART@config,2,c
  2134  000362  8EAC               	bsf	4012,7,c	;volatile
  2135  000364  A614               	btfss	OpenUSART@config,3,c
  2136  000366  D002               	goto	l326
  2137  000368  88AB               	bsf	4011,4,c	;volatile
  2138  00036A  D001               	goto	l1049
  2139  00036C                     l326:
  2140  00036C  8AAB               	bsf	4011,5,c	;volatile
  2141  00036E                     l1049:
  2142  00036E  B814               	btfsc	OpenUSART@config,4,c
  2143  000370  84AC               	bsf	4012,2,c	;volatile
  2144  000372  989E               	bcf	3998,4,c	;volatile
  2145  000374  BA14               	btfsc	OpenUSART@config,5,c
  2146  000376  86AB               	bsf	4011,3,c	;volatile
  2147  000378  AC14               	btfss	OpenUSART@config,6,c
  2148  00037A  D002               	goto	l330
  2149  00037C  8A9D               	bsf	3997,5,c	;volatile
  2150  00037E  D001               	goto	l331
  2151  000380                     l330:
  2152  000380  9A9D               	bcf	3997,5,c	;volatile
  2153  000382                     l331:
  2154  000382  9A9E               	bcf	3998,5,c	;volatile
  2155  000384  AE14               	btfss	OpenUSART@config,7,c
  2156  000386  D002               	goto	l332
  2157  000388  889D               	bsf	3997,4,c	;volatile
  2158  00038A  D001               	goto	l333
  2159  00038C                     l332:
  2160  00038C  989D               	bcf	3997,4,c	;volatile
  2161  00038E                     l333:
  2162  00038E  C00F  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2163  000392  C010  F011         	movff	OpenUSART@spbrg+1,??_OpenUSART
  2164  000396  C011  F012         	movff	??_OpenUSART,??_OpenUSART+1
  2165  00039A  6A13               	clrf	(??_OpenUSART+2)& (0+255),c
  2166  00039C  5012               	movf	??_OpenUSART+1,w,c
  2167  00039E  6EB0               	movwf	4016,c	;volatile
  2168  0003A0  8AAC               	bsf	4012,5,c	;volatile
  2169  0003A2  8EAB               	bsf	4011,7,c	;volatile
  2170  0003A4  9C94               	bcf	3988,6,c	;volatile
  2171  0003A6  8E94               	bsf	3988,7,c	;volatile
  2172  0003A8  B8AC               	btfsc	4012,4,c	;volatile
  2173  0003AA  BEAC               	btfsc	4012,7,c	;volatile
  2174  0003AC  D001               	goto	l335
  2175  0003AE  8C94               	bsf	3988,6,c	;volatile
  2176  0003B0                     l335:
  2177  0003B0  0012               	return	
  2178  0003B2                     __end_of_OpenUSART:
  2179                           	opt stack 0
  2180                           tblptru	equ	0xFF8
  2181                           tblptrh	equ	0xFF7
  2182                           tblptrl	equ	0xFF6
  2183                           tablat	equ	0xFF5
  2184                           prodh	equ	0xFF4
  2185                           prodl	equ	0xFF3
  2186                           intcon	equ	0xFF2
  2187                           postinc0	equ	0xFEE
  2188                           wreg	equ	0xFE8
  2189                           postdec1	equ	0xFE5
  2190                           fsr1l	equ	0xFE1
  2191                           indf2	equ	0xFDF
  2192                           postinc2	equ	0xFDE
  2193                           postdec2	equ	0xFDD
  2194                           fsr2h	equ	0xFDA
  2195                           fsr2l	equ	0xFD9
  2196                           status	equ	0xFD8
  2197                           
  2198 ;; *************** function _timer0Isr *****************
  2199 ;; Defined at:
  2200 ;;		line 10 in file "../src/PIC18/Clock.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;		None
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;		None
  2205 ;; Return value:  Size  Location     Type
  2206 ;;		None               void
  2207 ;; Registers used:
  2208 ;;		wreg, status,2, status,0, cstack
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2214 ;;      Params:         0       0       0       0       0       0       0
  2215 ;;      Locals:         0       0       0       0       0       0       0
  2216 ;;      Temps:         14       0       0       0       0       0       0
  2217 ;;      Totals:        14       0       0       0       0       0       0
  2218 ;;Total ram usage:       14 bytes
  2219 ;; Hardware stack levels used:    1
  2220 ;; Hardware stack levels required when called:    1
  2221 ;; This function calls:
  2222 ;;		_clearTimer0Overflowed
  2223 ;; This function is called by:
  2224 ;;		Interrupt level 2
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           	psect	intcode
  2229  000008                     __pintcode:
  2230                           	opt stack 0
  2231  000008                     _timer0Isr:
  2232                           	opt stack 26
  2233                           
  2234                           ;incstack = 0
  2235  000008  CFFA F001          	movff	pclath,??_timer0Isr
  2236  00000C  CFFB F002          	movff	pclatu,??_timer0Isr+1
  2237  000010  CFE9 F003          	movff	fsr0l,??_timer0Isr+2
  2238  000014  ED64  F001         	call	int_func,f	;refresh shadow registers
  2239                           pclatu	equ	0xFFB
  2240                           pclath	equ	0xFFA
  2241                           tblptru	equ	0xFF8
  2242                           tblptrh	equ	0xFF7
  2243                           tblptrl	equ	0xFF6
  2244                           tablat	equ	0xFF5
  2245                           prodh	equ	0xFF4
  2246                           prodl	equ	0xFF3
  2247                           intcon	equ	0xFF2
  2248                           postinc0	equ	0xFEE
  2249                           fsr0l	equ	0xFE9
  2250                           wreg	equ	0xFE8
  2251                           postdec1	equ	0xFE5
  2252                           fsr1l	equ	0xFE1
  2253                           indf2	equ	0xFDF
  2254                           postinc2	equ	0xFDE
  2255                           postdec2	equ	0xFDD
  2256                           fsr2h	equ	0xFDA
  2257                           fsr2l	equ	0xFD9
  2258                           status	equ	0xFD8
  2259                           
  2260                           	psect	intcode_body
  2261  0002C8                     __pintcode_body:
  2262                           	opt stack 26
  2263  0002C8                     int_func:
  2264                           	opt stack 26
  2265  0002C8  0006               	pop		; remove dummy address from shadow register refresh
  2266  0002CA  CFEA F004          	movff	fsr0h,??_timer0Isr+3
  2267  0002CE  CFE1 F005          	movff	fsr1l,??_timer0Isr+4
  2268  0002D2  CFE2 F006          	movff	fsr1h,??_timer0Isr+5
  2269  0002D6  CFD9 F007          	movff	fsr2l,??_timer0Isr+6
  2270  0002DA  CFDA F008          	movff	fsr2h,??_timer0Isr+7
  2271  0002DE  CFF3 F009          	movff	prodl,??_timer0Isr+8
  2272  0002E2  CFF4 F00A          	movff	prodh,??_timer0Isr+9
  2273  0002E6  CFF6 F00B          	movff	tblptrl,??_timer0Isr+10
  2274  0002EA  CFF7 F00C          	movff	tblptrh,??_timer0Isr+11
  2275  0002EE  CFF8 F00D          	movff	tblptru,??_timer0Isr+12
  2276  0002F2  CFF5 F00E          	movff	tablat,??_timer0Isr+13
  2277  0002F6  6F41               	movwf	_workingReg,b	;# 
  2278  0002F8  CFD8 F040          	movff	status,_statusReg	;# 
  2279  0002FC  CFE0 F03F          	movff	bsr,_bankSelectReg	;# 
  2280                           
  2281                           ;Clock.c: 28: clock++;
  2282  000300  0E01               	movlw	1
  2283  000302  2636               	addwf	_clock,f,c	;volatile
  2284  000304  0E00               	movlw	0
  2285  000306  2237               	addwfc	_clock+1,f,c	;volatile
  2286  000308  2238               	addwfc	_clock+2,f,c	;volatile
  2287  00030A  2239               	addwfc	_clock+3,f,c	;volatile
  2288                           
  2289                           ;Clock.c: 29: clearTimer0Overflowed();
  2290  00030C  EC23  F003         	call	_clearTimer0Overflowed	;wreg free
  2291  000310  C00E  FFF5         	movff	??_timer0Isr+13,tablat
  2292  000314  C00D  FFF8         	movff	??_timer0Isr+12,tblptru
  2293  000318  C00C  FFF7         	movff	??_timer0Isr+11,tblptrh
  2294  00031C  C00B  FFF6         	movff	??_timer0Isr+10,tblptrl
  2295  000320  C00A  FFF4         	movff	??_timer0Isr+9,prodh
  2296  000324  C009  FFF3         	movff	??_timer0Isr+8,prodl
  2297  000328  C008  FFDA         	movff	??_timer0Isr+7,fsr2h
  2298  00032C  C007  FFD9         	movff	??_timer0Isr+6,fsr2l
  2299  000330  C006  FFE2         	movff	??_timer0Isr+5,fsr1h
  2300  000334  C005  FFE1         	movff	??_timer0Isr+4,fsr1l
  2301  000338  C004  FFEA         	movff	??_timer0Isr+3,fsr0h
  2302  00033C  C003  FFE9         	movff	??_timer0Isr+2,fsr0l
  2303  000340  C002  FFFB         	movff	??_timer0Isr+1,pclatu
  2304  000344  C001  FFFA         	movff	??_timer0Isr,pclath
  2305  000348  0011               	retfie		f
  2306  00034A                     __end_of_timer0Isr:
  2307                           	opt stack 0
  2308                           pclatu	equ	0xFFB
  2309                           pclath	equ	0xFFA
  2310                           tblptru	equ	0xFF8
  2311                           tblptrh	equ	0xFF7
  2312                           tblptrl	equ	0xFF6
  2313                           tablat	equ	0xFF5
  2314                           prodh	equ	0xFF4
  2315                           prodl	equ	0xFF3
  2316                           intcon	equ	0xFF2
  2317                           postinc0	equ	0xFEE
  2318                           fsr0h	equ	0xFEA
  2319                           fsr0l	equ	0xFE9
  2320                           wreg	equ	0xFE8
  2321                           postdec1	equ	0xFE5
  2322                           fsr1h	equ	0xFE2
  2323                           fsr1l	equ	0xFE1
  2324                           bsr	equ	0xFE0
  2325                           indf2	equ	0xFDF
  2326                           postinc2	equ	0xFDE
  2327                           postdec2	equ	0xFDD
  2328                           fsr2h	equ	0xFDA
  2329                           fsr2l	equ	0xFD9
  2330                           status	equ	0xFD8
  2331                           
  2332 ;; *************** function _clearTimer0Overflowed *****************
  2333 ;; Defined at:
  2334 ;;		line 60 in file "../src/PIC18/Clock.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;		None
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;		None
  2339 ;; Return value:  Size  Location     Type
  2340 ;;		None               void
  2341 ;; Registers used:
  2342 ;;		None
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2348 ;;      Params:         0       0       0       0       0       0       0
  2349 ;;      Locals:         0       0       0       0       0       0       0
  2350 ;;      Temps:          0       0       0       0       0       0       0
  2351 ;;      Totals:         0       0       0       0       0       0       0
  2352 ;;Total ram usage:        0 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; This function calls:
  2355 ;;		Nothing
  2356 ;; This function is called by:
  2357 ;;		_timer0Isr
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           	psect	text21
  2362  000646                     __ptext21:
  2363                           	opt stack 0
  2364  000646                     _clearTimer0Overflowed:
  2365                           	opt stack 26
  2366                           
  2367                           ;Clock.c: 61: INTCONbits.TMR0IF = 0;
  2368                           
  2369                           ;incstack = 0
  2370  000646  94F2               	bcf	intcon,2,c	;volatile
  2371  000648  0012               	return	
  2372  00064A                     __end_of_clearTimer0Overflowed:
  2373                           	opt stack 0
  2374  0000                     pclatu	equ	0xFFB
  2375                           pclath	equ	0xFFA
  2376                           tblptru	equ	0xFF8
  2377                           tblptrh	equ	0xFF7
  2378                           tblptrl	equ	0xFF6
  2379                           tablat	equ	0xFF5
  2380                           prodh	equ	0xFF4
  2381                           prodl	equ	0xFF3
  2382                           intcon	equ	0xFF2
  2383                           postinc0	equ	0xFEE
  2384                           fsr0h	equ	0xFEA
  2385                           fsr0l	equ	0xFE9
  2386                           wreg	equ	0xFE8
  2387                           postdec1	equ	0xFE5
  2388                           fsr1h	equ	0xFE2
  2389                           fsr1l	equ	0xFE1
  2390                           bsr	equ	0xFE0
  2391                           indf2	equ	0xFDF
  2392                           postinc2	equ	0xFDE
  2393                           postdec2	equ	0xFDD
  2394                           fsr2h	equ	0xFDA
  2395                           fsr2l	equ	0xFD9
  2396                           status	equ	0xFD8
  2397                           pclatu	equ	0xFFB
  2398                           pclath	equ	0xFFA
  2399                           tblptru	equ	0xFF8
  2400                           tblptrh	equ	0xFF7
  2401                           tblptrl	equ	0xFF6
  2402                           tablat	equ	0xFF5
  2403                           prodh	equ	0xFF4
  2404                           prodl	equ	0xFF3
  2405                           intcon	equ	0xFF2
  2406                           postinc0	equ	0xFEE
  2407                           fsr0h	equ	0xFEA
  2408                           fsr0l	equ	0xFE9
  2409                           wreg	equ	0xFE8
  2410                           postdec1	equ	0xFE5
  2411                           fsr1h	equ	0xFE2
  2412                           fsr1l	equ	0xFE1
  2413                           bsr	equ	0xFE0
  2414                           indf2	equ	0xFDF
  2415                           postinc2	equ	0xFDE
  2416                           postdec2	equ	0xFDD
  2417                           fsr2h	equ	0xFDA
  2418                           fsr2l	equ	0xFD9
  2419                           status	equ	0xFD8
  2420                           
  2421                           	psect	rparam
  2422  0000                     pclatu	equ	0xFFB
  2423                           pclath	equ	0xFFA
  2424                           tblptru	equ	0xFF8
  2425                           tblptrh	equ	0xFF7
  2426                           tblptrl	equ	0xFF6
  2427                           tablat	equ	0xFF5
  2428                           prodh	equ	0xFF4
  2429                           prodl	equ	0xFF3
  2430                           intcon	equ	0xFF2
  2431                           postinc0	equ	0xFEE
  2432                           fsr0h	equ	0xFEA
  2433                           fsr0l	equ	0xFE9
  2434                           wreg	equ	0xFE8
  2435                           postdec1	equ	0xFE5
  2436                           fsr1h	equ	0xFE2
  2437                           fsr1l	equ	0xFE1
  2438                           bsr	equ	0xFE0
  2439                           indf2	equ	0xFDF
  2440                           postinc2	equ	0xFDE
  2441                           postdec2	equ	0xFDD
  2442                           fsr2h	equ	0xFDA
  2443                           fsr2l	equ	0xFD9
  2444                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     53     114
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    compareTCBPriority@EIL.task	PTR FTN()int  size(2) Largest target is 0
		 -> taskTwo(), taskOne(), 

    compareTCBPriority@EIL.next	PTR struct TCB size(2) Largest target is 0

    compareTCBPriority@EOI.task	PTR FTN()int  size(2) Largest target is 0
		 -> taskTwo(), taskOne(), 

    compareTCBPriority@EOI.next	PTR struct TCB size(2) Largest target is 0

    sp__removeFromHeadPriorityLinkedList	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__removePriorityLinkedList	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__addPriorityLinkedList	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S879TCB$task	PTR FTN()int  size(2) Largest target is 0
		 -> taskTwo(), taskOne(), 

    tcb.task	PTR FTN()int  size(2) Largest target is 0
		 -> taskTwo(), taskOne(), 

    S879TCB$next	PTR struct TCB size(2) Largest target is 0

    tcb.next	PTR struct TCB size(2) Largest target is 0

    runningTCB	PTR struct TCB size(2) Largest target is 33
		 -> NULL(NULL[0]), tcb(COMRAM[33]), 

    led2SM@data	PTR struct Led2Data size(2) Largest target is 7
		 -> main@led2Data(COMRAM[7]), 

    _7SegmentSM@_7seg	PTR struct . size(2) Largest target is 7
		 -> main@_7SegData(COMRAM[7]), 

    init7Segment@_7seg	PTR struct . size(2) Largest target is 7
		 -> main@_7SegData(COMRAM[7]), 

    usartLoopbackSM@data	PTR struct LoopbackData size(2) Largest target is 2
		 -> main@loopbackData(COMRAM[2]), 

    initUsartLoopback@data	PTR struct LoopbackData size(2) Largest target is 2
		 -> main@loopbackData(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->__7SegmentSM
    _main->_led2SM
    _usartLoopbackSM->_ReadUSART
    _usartLoopbackSM->_WriteUSART
    _led2SM->_getCLOCK
    _initClock->_OpenTimer0
    __7SegmentSM->_getCLOCK
    _write7Segment->_WriteSPI
    _init7SegmentHW->_OpenSPI

Critical Paths under _timer0Isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _timer0Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer0Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer0Isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer0Isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timer0Isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timer0Isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    16      5    1169
                                             32 COMRAM    21    16      5
                          _OpenUSART
                        __7SegmentSM
                        _closeModule
                       _configureLED
                       _init7Segment
                          _initClock
                  _initUsartLoopback
                             _led2SM
                    _usartLoopbackSM
 ---------------------------------------------------------------------------------
 (1) _usartLoopbackSM                                      2     0      2     148
                                             15 COMRAM     2     0      2
                          _ReadUSART
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ReadUSART                                            1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _led2SM                                              14    12      2     178
                                             18 COMRAM    14    12      2
                           _getCLOCK
                             _offLED
                              _onLED
 ---------------------------------------------------------------------------------
 (2) _onLED                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _offLED                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUsartLoopback                                    2     0      2      73
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0      30
                         _OpenTimer0
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init7Segment                                         2     0      2      88
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _configureLED                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _closeModule                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) __7SegmentSM                                         14    12      2     384
                                             18 COMRAM    14    12      2
                           _getCLOCK
                     _init7SegmentHW
                      _write7Segment
 ---------------------------------------------------------------------------------
 (2) _write7Segment                                        1     1      0      30
                                             16 COMRAM     1     1      0
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _WriteSPI                                             2     2      0      15
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _init7SegmentHW                                       0     0      0     146
                            _OpenSPI
 ---------------------------------------------------------------------------------
 (3) _OpenSPI                                              3     1      2     146
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _getCLOCK                                             4     0      4       0
                                             14 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     193
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _timer0Isr                                           14    14      0       0
                                              0 COMRAM    14    14      0
              _clearTimer0Overflowed
 ---------------------------------------------------------------------------------
 (5) _clearTimer0Overflowed                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenUSART
   __7SegmentSM
     _getCLOCK
     _init7SegmentHW
       _OpenSPI
     _write7Segment
       _WriteSPI
   _closeModule
   _configureLED
   _init7Segment
   _initClock
     _OpenTimer0
   _initUsartLoopback
   _led2SM
     _getCLOCK
     _offLED
     _onLED
   _usartLoopbackSM
     _ReadUSART
     _WriteUSART

 _timer0Isr (ROOT)
   _clearTimer0Overflowed

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     35      72       1       89.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      72      15        0.0%
DATA                 0      0      72       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Nov 03 17:43:39 2014

                 ?_configureLED 0001                              BSR 000FE0                     _SSPSTATbits 000FC7  
                           l300 0556                             l301 0558                             l143 0416  
                           l330 0380                             l146 043A                             l331 0382  
                           l332 038C                             l180 018A                             l333 038E  
                           l261 048A                             l149 0474                             l326 036C  
                           l270 04B4                             l335 03B0                             l263 048E  
                           l264 0490                             l344 056A                             l267 04AA  
                           l283 05E2                             l268 04C8                             l269 04B0  
                           l285 05DE                             l197 025A                             l199 02C6  
                           l965 0494                             l969 04B8                             l999 0604  
                           _tcb 0042                             fsr2 000FD9                             prod 000FF3  
                           wreg 000FE8                    __CFG_LVP$OFF 000000                    __CFG_WDT$OFF 000000  
                          l1041 0360                            l1113 018E                            l1123 0234  
                          l1115 019E                            l1141 001E                            l1133 02A0  
                          l1109 045E                            l1049 036E                            l1129 028E  
                          l1163 0170                            l1157 0144                            l1149 008A  
                          l1191 03EE                   __CFG_DEBUG$ON 000000                            _PIE1 000F9D  
                  __CFG_PWRT$ON 000000                            _main 03B2                            fsr0h 000FEA  
                          fsr1h 000FE2                            fsr0l 000FE9                            fsr2h 000FDA  
                          fsr1l 000FE1                            indf2 000FDF                            fsr2l 000FD9  
                          pclat 000FFA                            prodh 000FF4                            prodl 000FF3  
                          start 0018                  ??_configureLED 000F                    main@led2Data 0026  
       ??_clearTimer0Overflowed 0001                   ?_init7Segment 000F                     __7SegmentSM 001C  
               __end_of_OpenSPI 04D0                           STATUS 000FD8                           ?_main 0021  
                         _T0CON 000FD5                           _RCREG 000FAE                           _RCSTA 000FAB  
                         _TMR0H 000FD7                           _TMR0L 000FD6                           _SPBRG 000FAF  
                         _TOSHi 003C                           _TOSLo 003D                           _TXREG 000FAD  
                         _TXSTA 000FAC                           _onLED 063A                           _clock 0036  
           usartLoopbackSM@data 0010                           tablat 000FF5                           status 000FD8  
                WriteUSART@data 000F                 __initialization 04D0                  ??_init7Segment 0011  
                  __end_of_main 0414                          ??_main 0026                   __activetblptr 000002  
                _init7SegmentHW 05E4                          ?_onLED 0001                __end_of_WriteSPI 05E4  
                    _OpenTimer0 053C              __size_of_ReadUSART 001E          __size_of_write7Segment 001A  
                        _SPBRGH 000FB0                __end_of_getCLOCK 061C                          _SSPBUF 000FC9  
                     ??_OpenSPI 0011            __size_of_closeModule 000E              __size_of_OpenUSART 0068  
                        _led2SM 018C                OpenTimer0@config 000F                          _offLED 063E  
                        clear_0 04D6                 WriteSPI@TempVar 000F          __end_of_init7SegmentHW 05F8  
                  __pdataCOMRAM 0063                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8            __end_of_configureLED 0646                      __accesstop 0080  
       __end_of__initialization 04FC                      _WriteUSART 05F8                  __pcstackCOMRAM 0001  
                 __end_of_onLED 063E                   _write7Segment 05B2               __end_of_ReadUSART 057A  
      __size_of_usartLoopbackSM 0062                 ?_init7SegmentHW 0001                   ReadUSART@data 000F  
                       ??_onLED 000F               __end_of_OpenUSART 03B2            __end_of_init7Segment 053C  
                   ?_OpenTimer0 0001              __size_of_initClock 001A               write7Segment@data 0011  
                 _bankSelectReg 003F                         ?_led2SM 0013                    ?__7SegmentSM 0013  
                       ?_offLED 0001  __size_of_clearTimer0Overflowed 0004                  ?_write7Segment 0001  
 __end_of_clearTimer0Overflowed 064A                       ?_WriteSPI 0001              __size_of_timer0Isr 0342  
                     ?_getCLOCK 000F                      _hexPattern 0063                         _SSPCON1 000FC6  
                       _SSPSTAT 000FC7                      led2SM@data 0013                         _OpenSPI 0476  
                       __Hparam 0000                         __Lparam 0000                     ?_WriteUSART 0001  
               __size_of_led2SM 013C                 __size_of_offLED 0004                         __pcinit 04D0  
                       __ramtop 0600                      ??_WriteSPI 000F             __size_of_OpenTimer0 0020  
                       __ptext0 03B2                         __ptext1 0414                         __ptext2 05F8  
                       __ptext3 055C                         __ptext4 018C                         __ptext5 063A  
                       __ptext6 063E                         __ptext7 057A                         __ptext8 0598  
                       __ptext9 053C               __end_of_initClock 05B2                       _T0CONbits 000FD5  
         __size_of_configureLED 0004                      ??_getCLOCK 0013                         _taskOne 000000  
                       _taskTwo 000000               ??_usartLoopbackSM 0012                  __pintcode_body 02C8  
          end_of_initialization 04FC                   __Lmediumconst 0000                         int_func 02C8  
             __end_of_timer0Isr 034A               _initUsartLoopback 057A                       _RCSTAbits 000FAB  
               ??_write7Segment 0011                         postdec1 000FE5                         postdec2 000FDD  
              WriteSPI@data_out 0010              ?_initUsartLoopback 000F                    _configureLED 0642  
                       postinc0 000FEE                         postinc2 000FDE                       _PORTCbits 000F82  
                     _PORTDbits 000F83             ??_initUsartLoopback 0011           __size_of_init7Segment 0036  
                     _TRISAbits 000F92                       _TRISCbits 000F94                       _TRISDbits 000F95  
           __size_of_WriteUSART 0012                   ??_closeModule 000F                       _TXSTAbits 000FAC  
     __end_of_initUsartLoopback 0598                      _runningTCB 003A                    _init7Segment 0506  
              ??_init7SegmentHW 0012                  __end_of_led2SM 02C8                   __pidataCOMRAM 061C  
                __end_of_offLED 0642                      _workingReg 0041            __size_of__7SegmentSM 0170  
              OpenSPI@smp_phase 0010             start_initialization 04D0                       _ReadUSART 055C  
              OpenSPI@sync_mode 0011                    ??_OpenTimer0 000F                       _OpenUSART 034A  
              __CFG_OSC$INTIO67 000000             __end_of_closeModule 063A                        ??_led2SM 0015  
                      ??_offLED 000F              __end_of_OpenTimer0 055C               __size_of_WriteSPI 0018  
                   __pbssCOMRAM 0036                      ?_ReadUSART 0001               __size_of_getCLOCK 0012  
                    ?_OpenUSART 000F      __size_of_initUsartLoopback 001E                main@loopbackData 002D  
                      ?_OpenSPI 000F                    ??_WriteUSART 000F                       __pintcode 0008  
               _usartLoopbackSM 0414           _clearTimer0Overflowed 0646                       _initClock 0598  
                __size_of_onLED 0004              __end_of_WriteUSART 060A                     _closeModule 062C  
                      _PIE1bits 000F9D                        _PIR1bits 000F9E                       _timer0Isr 0008  
               OpenSPI@bus_mode 000F                       _statusReg 0040                     ??_ReadUSART 000F  
                    ?_initClock 0001                       copy_data0 04F0                     ??_OpenUSART 0011  
               OpenUSART@config 0014                        __Hrparam 0000         __end_of_usartLoopbackSM 0476  
                      __Lrparam 0000                __size_of_OpenSPI 005A                      ?_timer0Isr 0001  
         __end_of_write7Segment 05CC          ?_clearTimer0Overflowed 0001                        _WriteSPI 05CC  
                      _getCLOCK 060A                        __ptext10 0506                        __ptext11 0642  
                      __ptext12 062C                        __ptext21 0646                        __ptext13 001C  
                      __ptext14 05B2                        __ptext15 05CC                        __ptext16 05E4  
                      __ptext17 0476                        __ptext18 060A                        __ptext19 034A  
             __7SegmentSM@_7seg 0013                   __size_of_main 0062                   ??__7SegmentSM 0015  
                      main@argc 0021                        main@argv 0023                      _INTCONbits 000FF2  
                OpenUSART@spbrg 000F                     ??_initClock 0010                        intlevel2 0000  
                    _OSCCONbits 000FD3                     ??_timer0Isr 0001                ?_usartLoopbackSM 0010  
           __end_of__7SegmentSM 018C                     _SSPCON1bits 000FC6         __size_of_init7SegmentHW 0014  
         initUsartLoopback@data 000F               init7Segment@_7seg 000F                    ?_closeModule 0001  
                  _USART_Status 003E                   main@_7SegData 002F  
