

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Oct 27 17:51:09 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    34  0000                     
    35                           	psect	idataCOMRAM
    36  0076F6                     __pidataCOMRAM:
    37                           	opt stack 0
    38                           
    39                           ;initializer for _sevenSegPattern
    40  0076F6  EE                 	db	238
    41  0076F7  82                 	db	130
    42  0076F8  DC                 	db	220
    43  0076F9  D6                 	db	214
    44  0076FA  B2                 	db	178
    45  0076FB  76                 	db	118
    46  0076FC  7E                 	db	126
    47  0076FD  C2                 	db	194
    48  0076FE  FE                 	db	254
    49  0076FF  F6                 	db	246
    50  007700  FA                 	db	250
    51  007701  3E                 	db	62
    52  007702  6C                 	db	108
    53  007703  9E                 	db	158
    54  007704  7C                 	db	124
    55  007705  78                 	db	120
    56  0000                     _INTCONbits	set	4082
    57  0000                     _OSCCONbits	set	4051
    58  0000                     _PIE1	set	3997
    59  0000                     _PIE1bits	set	3997
    60  0000                     _PIR1bits	set	3998
    61  0000                     _PORTCbits	set	3970
    62  0000                     _PORTDbits	set	3971
    63  0000                     _RCREG	set	4014
    64  0000                     _RCSTA	set	4011
    65  0000                     _RCSTAbits	set	4011
    66  0000                     _SPBRG	set	4015
    67  0000                     _SPBRGH	set	4016
    68  0000                     _SSPBUF	set	4041
    69  0000                     _SSPCON1	set	4038
    70  0000                     _SSPCON1bits	set	4038
    71  0000                     _SSPSTAT	set	4039
    72  0000                     _SSPSTATbits	set	4039
    73  0000                     _T0CON	set	4053
    74  0000                     _T0CONbits	set	4053
    75  0000                     _TMR0H	set	4055
    76  0000                     _TMR0L	set	4054
    77  0000                     _TRISAbits	set	3986
    78  0000                     _TRISCbits	set	3988
    79  0000                     _TRISDbits	set	3989
    80  0000                     _TXREG	set	4013
    81  0000                     _TXSTA	set	4012
    82  0000                     _TXSTAbits	set	4012
    83                           
    84                           ; #config settings
    85  0000                     
    86                           	psect	cinit
    87  0077FE                     __pcinit:
    88                           	opt stack 0
    89  0077FE                     start_initialization:
    90                           	opt stack 0
    91  0077FE                     __initialization:
    92                           	opt stack 0
    93                           
    94                           ; Clear objects allocated to COMRAM (5 bytes)
    95  0077FE  6A3B               	clrf	(__pbssCOMRAM+4)& (0+255),c
    96  007800  6A3A               	clrf	(__pbssCOMRAM+3)& (0+255),c
    97  007802  6A39               	clrf	(__pbssCOMRAM+2)& (0+255),c
    98  007804  6A38               	clrf	(__pbssCOMRAM+1)& (0+255),c
    99  007806  6A37               	clrf	__pbssCOMRAM& (0+255),c
   100                           
   101                           ; Initialize objects allocated to COMRAM (16 bytes)
   102                           ; load TBLPTR registers with __pidataCOMRAM
   103  007808  0EF6               	movlw	low __pidataCOMRAM
   104  00780A  6EF6               	movwf	tblptrl,c
   105  00780C  0E76               	movlw	high __pidataCOMRAM
   106  00780E  6EF7               	movwf	tblptrh,c
   107  007810  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   108  007812  6EF8               	movwf	tblptru,c
   109  007814  EE00  F027         	lfsr	0,__pdataCOMRAM
   110  007818  EE10 F010          	lfsr	1,16
   111  00781C                     copy_data0:
   112  00781C  0009               	tblrd		*+
   113  00781E  CFF5 FFEE          	movff	tablat,postinc0
   114  007822  50E5               	movf	postdec1,w,c
   115  007824  50E1               	movf	fsr1l,w,c
   116  007826  E1FA               	bnz	copy_data0
   117  007828                     end_of_initialization:
   118                           	opt stack 0
   119  007828                     __end_of__initialization:
   120                           	opt stack 0
   121  007828  0E00               	movlw	low (__Lmediumconst shr (0+16))
   122  00782A  6EF8               	movwf	tblptru,c
   123  00782C  0100               	movlb	0
   124  00782E  EF76  F03C         	goto	_main	;jump to C main() function
   125                           tblptru	equ	0xFF8
   126                           tblptrh	equ	0xFF7
   127                           tblptrl	equ	0xFF6
   128                           tablat	equ	0xFF5
   129                           postinc0	equ	0xFEE
   130                           postdec1	equ	0xFE5
   131                           fsr1l	equ	0xFE1
   132                           
   133                           	psect	bssCOMRAM
   134  000037                     __pbssCOMRAM:
   135                           	opt stack 0
   136  000037                     _clock:
   137                           	opt stack 0
   138  000037                     	ds	4
   139  00003B                     _USART_Status:
   140                           	opt stack 0
   141  00003B                     	ds	1
   142                           tblptru	equ	0xFF8
   143                           tblptrh	equ	0xFF7
   144                           tblptrl	equ	0xFF6
   145                           tablat	equ	0xFF5
   146                           postinc0	equ	0xFEE
   147                           postdec1	equ	0xFE5
   148                           fsr1l	equ	0xFE1
   149                           
   150                           	psect	dataCOMRAM
   151  000027                     __pdataCOMRAM:
   152                           	opt stack 0
   153  000027                     _sevenSegPattern:
   154                           	opt stack 0
   155  000027                     	ds	16
   156                           tblptru	equ	0xFF8
   157                           tblptrh	equ	0xFF7
   158                           tblptrl	equ	0xFF6
   159                           tablat	equ	0xFF5
   160                           postinc0	equ	0xFEE
   161                           postdec1	equ	0xFE5
   162                           fsr1l	equ	0xFE1
   163                           
   164                           	psect	cstackCOMRAM
   165  000001                     __pcstackCOMRAM:
   166                           	opt stack 0
   167  000001                     ?_getClock:
   168                           	opt stack 0
   169  000001                     OpenSPI@bus_mode:
   170                           	opt stack 0
   171  000001                     WriteSPI@TempVar:
   172                           	opt stack 0
   173  000001                     OpenTimer0@config:
   174                           	opt stack 0
   175  000001                     ReadUSART@data:
   176                           	opt stack 0
   177  000001                     WriteUSART@data:
   178                           	opt stack 0
   179  000001                     initLed@ledData:
   180                           	opt stack 0
   181  000001                     initUsartLoopback@loopbackData:
   182                           	opt stack 0
   183  000001                     init7Segment@data:
   184                           	opt stack 0
   185  000001                     OpenUSART@spbrg:
   186                           	opt stack 0
   187                           
   188                           ; 2 bytes @ 0x0
   189  000001                     	ds	1
   190  000002                     OpenSPI@smp_phase:
   191                           	opt stack 0
   192  000002                     WriteSPI@data_out:
   193                           	opt stack 0
   194  000002                     usartLoopbackSM@loopbackData:
   195                           	opt stack 0
   196                           
   197                           ; 2 bytes @ 0x1
   198  000002                     	ds	1
   199  000003                     ??_OpenUSART:
   200  000003                     write7Segment@data:
   201                           	opt stack 0
   202  000003                     OpenSPI@sync_mode:
   203                           	opt stack 0
   204                           
   205                           ; 1 bytes @ 0x2
   206  000003                     	ds	1
   207  000004                     
   208                           ; 0 bytes @ 0x3
   209  000004                     	ds	1
   210  000005                     ledSM@ledData:
   211                           	opt stack 0
   212  000005                     sevenSegmentSM@data:
   213                           	opt stack 0
   214                           
   215                           ; 2 bytes @ 0x4
   216  000005                     	ds	1
   217  000006                     OpenUSART@config:
   218                           	opt stack 0
   219                           
   220                           ; 1 bytes @ 0x5
   221  000006                     	ds	1
   222  000007                     ??_ledSM:
   223  000007                     ??_sevenSegmentSM:
   224                           
   225                           ; 0 bytes @ 0x6
   226  000007                     	ds	12
   227  000013                     ledSM@now:
   228                           	opt stack 0
   229                           
   230                           ; 2 bytes @ 0x12
   231  000013                     	ds	2
   232  000015                     
   233                           ; 2 bytes @ 0x14
   234  000015                     	ds	2
   235  000017                     
   236                           ; 3 bytes @ 0x16
   237  000017                     	ds	3
   238  00001A                     main@loopbackData:
   239                           	opt stack 0
   240                           
   241                           ; 2 bytes @ 0x19
   242  00001A                     	ds	2
   243  00001C                     main@sevenSegData:
   244                           	opt stack 0
   245                           
   246                           ; 6 bytes @ 0x1B
   247  00001C                     	ds	6
   248  000022                     main@ledData:
   249                           	opt stack 0
   250                           
   251                           ; 5 bytes @ 0x21
   252  000022                     	ds	5
   253                           tblptru	equ	0xFF8
   254                           tblptrh	equ	0xFF7
   255                           tblptrl	equ	0xFF6
   256                           tablat	equ	0xFF5
   257                           postinc0	equ	0xFEE
   258                           postdec1	equ	0xFE5
   259                           fsr1l	equ	0xFE1
   260                           
   261 ;;
   262 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   263 ;;
   264 ;; *************** function _main *****************
   265 ;; Defined at:
   266 ;;		line 37 in file "../src/PIC18/Main.c"
   267 ;; Parameters:    Size  Location     Type
   268 ;;  argc            2   20[COMRAM] int 
   269 ;;  argv            3   22[COMRAM] PTR PTR unsigned char 
   270 ;; Auto vars:     Size  Location     Type
   271 ;;  sevenSegData    6   27[COMRAM] struct SevenSegmentData
   272 ;;  ledData         5   33[COMRAM] struct LEDData
   273 ;;  loopbackData    2   25[COMRAM] struct LoopbackData
   274 ;; Return value:  Size  Location     Type
   275 ;;                  2   20[COMRAM] int 
   276 ;; Registers used:
   277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   278 ;; Tracked objects:
   279 ;;		On entry : 0/0
   280 ;;		On exit  : 0/0
   281 ;;		Unchanged: 0/0
   282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   283 ;;      Params:         5       0       0       0       0       0       0
   284 ;;      Locals:        13       0       0       0       0       0       0
   285 ;;      Temps:          0       0       0       0       0       0       0
   286 ;;      Totals:        18       0       0       0       0       0       0
   287 ;;Total ram usage:       18 bytes
   288 ;; Hardware stack levels required when called:    3
   289 ;; This function calls:
   290 ;;		_OpenUSART
   291 ;;		_init7Segment
   292 ;;		_initClock
   293 ;;		_initLed
   294 ;;		_initUsartLoopback
   295 ;;		_ledSM
   296 ;;		_sevenSegmentSM
   297 ;;		_usartLoopbackSM
   298 ;; This function is called by:
   299 ;;		Startup code after reset
   300 ;; This function uses a non-reentrant model
   301 ;;
   302                           
   303                           	psect	text0
   304  0078EC                     __ptext0:
   305                           	opt stack 0
   306  0078EC                     _main:
   307                           	opt stack 27
   308                           
   309                           ;Main.c: 38: LoopbackData loopbackData;
   310                           ;Main.c: 39: LEDData ledData;
   311                           ;Main.c: 40: SevenSegmentData sevenSegData;
   312                           ;Main.c: 42: (OSCCONbits.IRCF = 7);
   313                           
   314                           ;incstack = 0
   315  0078EC  88D3               	bsf	4051,4,c	;volatile
   316  0078EE  8AD3               	bsf	4051,5,c	;volatile
   317  0078F0  8CD3               	bsf	4051,6,c	;volatile
   318                           
   319                           ;Main.c: 43: OpenUSART(0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b11111111 & 
      +                          0b11111111, 51);;
   320  0078F2  0E00               	movlw	0
   321  0078F4  6E02               	movwf	OpenUSART@spbrg+1,c
   322  0078F6  0E33               	movlw	51
   323  0078F8  6E01               	movwf	OpenUSART@spbrg,c
   324  0078FA  0E3C               	movlw	60
   325  0078FC  ECA7  F03C         	call	_OpenUSART
   326                           
   327                           ;Main.c: 44: initClock();
   328  007900  EC96  F03B         	call	_initClock	;wreg free
   329                           
   330                           ;Main.c: 45: initUsartLoopback(&loopbackData);
   331  007904  0E00               	movlw	high main@loopbackData
   332  007906  6E02               	movwf	initUsartLoopback@loopbackData+1,c
   333  007908  0E1A               	movlw	low main@loopbackData
   334  00790A  6E01               	movwf	initUsartLoopback@loopbackData,c
   335  00790C  ECBB  F03B         	call	_initUsartLoopback	;wreg free
   336                           
   337                           ;Main.c: 46: initLed(&ledData);
   338  007910  0E00               	movlw	high main@ledData
   339  007912  6E02               	movwf	initLed@ledData+1,c
   340  007914  0E22               	movlw	low main@ledData
   341  007916  6E01               	movwf	initLed@ledData,c
   342  007918  EC74  F03B         	call	_initLed	;wreg free
   343                           
   344                           ;Main.c: 47: init7Segment(&sevenSegData);
   345  00791C  0E00               	movlw	high main@sevenSegData
   346  00791E  6E02               	movwf	init7Segment@data+1,c
   347  007920  0E1C               	movlw	low main@sevenSegData
   348  007922  6E01               	movwf	init7Segment@data,c
   349  007924  EC6D  F03B         	call	_init7Segment	;wreg free
   350  007928                     l1138:
   351                           
   352                           ;Main.c: 49: usartLoopbackSM(&loopbackData);
   353  007928  0E00               	movlw	high main@loopbackData
   354  00792A  6E03               	movwf	usartLoopbackSM@loopbackData+1,c
   355  00792C  0E1A               	movlw	low main@loopbackData
   356  00792E  6E02               	movwf	usartLoopbackSM@loopbackData,c
   357  007930  EC46  F03C         	call	_usartLoopbackSM	;wreg free
   358                           
   359                           ;Main.c: 50: ledSM(&ledData);
   360  007934  0E00               	movlw	high main@ledData
   361  007936  6E06               	movwf	ledSM@ledData+1,c
   362  007938  0E22               	movlw	low main@ledData
   363  00793A  6E05               	movwf	ledSM@ledData,c
   364  00793C  EC96  F03D         	call	_ledSM	;wreg free
   365                           
   366                           ;Main.c: 51: sevenSegmentSM(&sevenSegData);
   367  007940  0E00               	movlw	high main@sevenSegData
   368  007942  6E06               	movwf	sevenSegmentSM@data+1,c
   369  007944  0E1C               	movlw	low main@sevenSegData
   370  007946  6E05               	movwf	sevenSegmentSM@data,c
   371  007948  ECDB  F03C         	call	_sevenSegmentSM	;wreg free
   372  00794C  D7ED               	goto	l1138
   373  00794E                     __end_of_main:
   374                           	opt stack 0
   375                           tblptru	equ	0xFF8
   376                           tblptrh	equ	0xFF7
   377                           tblptrl	equ	0xFF6
   378                           tablat	equ	0xFF5
   379                           postinc0	equ	0xFEE
   380                           postdec1	equ	0xFE5
   381                           fsr1l	equ	0xFE1
   382                           
   383 ;; *************** function _usartLoopbackSM *****************
   384 ;; Defined at:
   385 ;;		line 13 in file "../src/PIC18/UsartLoopback.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;  loopbackData    2    1[COMRAM] PTR struct LoopbackData
   388 ;;		 -> main@loopbackData(2), 
   389 ;; Auto vars:     Size  Location     Type
   390 ;;		None
   391 ;; Return value:  Size  Location     Type
   392 ;;		None               void
   393 ;; Registers used:
   394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   395 ;; Tracked objects:
   396 ;;		On entry : 0/0
   397 ;;		On exit  : 0/0
   398 ;;		Unchanged: 0/0
   399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   400 ;;      Params:         2       0       0       0       0       0       0
   401 ;;      Locals:         0       0       0       0       0       0       0
   402 ;;      Temps:          0       0       0       0       0       0       0
   403 ;;      Totals:         2       0       0       0       0       0       0
   404 ;;Total ram usage:        2 bytes
   405 ;; Hardware stack levels used:    1
   406 ;; Hardware stack levels required when called:    1
   407 ;; This function calls:
   408 ;;		_ReadUSART
   409 ;;		_WriteUSART
   410 ;; This function is called by:
   411 ;;		_main
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415                           	psect	text1
   416  00788C                     __ptext1:
   417                           	opt stack 0
   418  00788C                     _usartLoopbackSM:
   419                           	opt stack 28
   420                           
   421                           ;UsartLoopback.c: 14: switch(loopbackData->state) {
   422                           
   423                           ;incstack = 0
   424  00788C  D023               	goto	l1044
   425  00788E                     l131:
   426                           
   427                           ;UsartLoopback.c: 16: if((PIR1bits.RCIF)) {
   428  00788E  AA9E               	btfss	3998,5,c	;volatile
   429  007890  D01B               	goto	L2
   430                           
   431                           ;UsartLoopback.c: 17: loopbackData->dataByte = ReadUSART();
   432  007892  EE20 F001          	lfsr	2,1
   433  007896  5002               	movf	usartLoopbackSM@loopbackData,w,c
   434  007898  26D9               	addwf	fsr2l,f,c
   435  00789A  5003               	movf	usartLoopbackSM@loopbackData+1,w,c
   436  00789C  22DA               	addwfc	fsr2h,f,c
   437  00789E  ECCA  F03B         	call	_ReadUSART	;wreg free
   438  0078A2  6EDF               	movwf	indf2,c
   439  0078A4                     
   440                           ;UsartLoopback.c: 18: loopbackData->state = WAIT_TO_TX;
   441  0078A4  C002  FFD9         	movff	usartLoopbackSM@loopbackData,fsr2l
   442  0078A8  C003  FFDA         	movff	usartLoopbackSM@loopbackData+1,fsr2h
   443  0078AC  0E01               	movlw	1
   444  0078AE                     L1:
   445  0078AE  6EDF               	movwf	indf2,c
   446  0078B0  D01C               	goto	l139
   447  0078B2                     l135:
   448                           
   449                           ;UsartLoopback.c: 24: if(!(!TXSTAbits.TRMT)) {
   450  0078B2  A2AC               	btfss	4012,1,c	;volatile
   451  0078B4  D7F7               	goto	L3
   452                           
   453                           ;UsartLoopback.c: 25: WriteUSART(loopbackData->dataByte);
   454  0078B6  EE20 F001          	lfsr	2,1
   455  0078BA  5002               	movf	usartLoopbackSM@loopbackData,w,c
   456  0078BC  26D9               	addwf	fsr2l,f,c
   457  0078BE  5003               	movf	usartLoopbackSM@loopbackData+1,w,c
   458  0078C0  22DA               	addwfc	fsr2h,f,c
   459  0078C2  50DF               	movf	indf2,w,c
   460  0078C4  EC83  F03B         	call	_WriteUSART
   461  0078C8                     L2:
   462                           
   463                           ;UsartLoopback.c: 26: loopbackData->state = WAIT_DATA;
   464  0078C8  C002  FFD9         	movff	usartLoopbackSM@loopbackData,fsr2l
   465  0078CC  C003  FFDA         	movff	usartLoopbackSM@loopbackData+1,fsr2h
   466  0078D0  0E00               	movlw	0
   467  0078D2  D7ED               	goto	L1
   468  0078D4                     l1044:
   469  0078D4  C002  FFD9         	movff	usartLoopbackSM@loopbackData,fsr2l
   470  0078D8  C003  FFDA         	movff	usartLoopbackSM@loopbackData+1,fsr2h
   471  0078DC  50DF               	movf	indf2,w,c
   472                           
   473                           ; Switch size 1, requested type "space"
   474                           ; Number of cases is 2, Range of values is 0 to 1
   475                           ; switch strategies available:
   476                           ; Name         Instructions Cycles
   477                           ; simple_byte            7     4 (average)
   478                           ;	Chosen strategy is simple_byte
   479  0078DE  0A00               	xorlw	0	; case 0
   480  0078E0  B4D8               	btfsc	status,2,c
   481  0078E2  D7D5               	goto	l131
   482  0078E4  0A01               	xorlw	1	; case 1
   483  0078E6  B4D8               	btfsc	status,2,c
   484  0078E8  D7E4               	goto	l135
   485  0078EA                     l139:
   486  0078EA  0012               	return	
   487  0078EC                     __end_of_usartLoopbackSM:
   488                           	opt stack 0
   489                           tblptru	equ	0xFF8
   490                           tblptrh	equ	0xFF7
   491                           tblptrl	equ	0xFF6
   492                           tablat	equ	0xFF5
   493                           postinc0	equ	0xFEE
   494                           postdec1	equ	0xFE5
   495                           fsr1l	equ	0xFE1
   496                           indf2	equ	0xFDF
   497                           fsr2h	equ	0xFDA
   498                           fsr2l	equ	0xFD9
   499                           status	equ	0xFD8
   500                           
   501 ;; *************** function _WriteUSART *****************
   502 ;; Defined at:
   503 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uwrite.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;  data            1    wreg     unsigned char 
   506 ;; Auto vars:     Size  Location     Type
   507 ;;  data            1    0[COMRAM] unsigned char 
   508 ;; Return value:  Size  Location     Type
   509 ;;		None               void
   510 ;; Registers used:
   511 ;;		wreg
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   517 ;;      Params:         0       0       0       0       0       0       0
   518 ;;      Locals:         1       0       0       0       0       0       0
   519 ;;      Temps:          0       0       0       0       0       0       0
   520 ;;      Totals:         1       0       0       0       0       0       0
   521 ;;Total ram usage:        1 bytes
   522 ;; Hardware stack levels used:    1
   523 ;; This function calls:
   524 ;;		Nothing
   525 ;; This function is called by:
   526 ;;		_usartLoopbackSM
   527 ;;		_usartLoopback
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531                           	psect	text2
   532  007706                     __ptext2:
   533                           	opt stack 0
   534  007706                     _WriteUSART:
   535                           	opt stack 28
   536                           
   537                           ;incstack = 0
   538                           ;WriteUSART@data stored from wreg
   539  007706  6E01               	movwf	WriteUSART@data,c
   540  007708  ACAC               	btfss	4012,6,c	;volatile
   541  00770A  D003               	goto	l934
   542  00770C  90AC               	bcf	4012,0,c	;volatile
   543  00770E  B23B               	btfsc	_USART_Status,1,c
   544  007710  80AC               	bsf	4012,0,c	;volatile
   545  007712                     l934:
   546  007712  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
   547  007716  0012               	return	
   548  007718                     __end_of_WriteUSART:
   549                           	opt stack 0
   550                           tblptru	equ	0xFF8
   551                           tblptrh	equ	0xFF7
   552                           tblptrl	equ	0xFF6
   553                           tablat	equ	0xFF5
   554                           postinc0	equ	0xFEE
   555                           postdec1	equ	0xFE5
   556                           fsr1l	equ	0xFE1
   557                           indf2	equ	0xFDF
   558                           fsr2h	equ	0xFDA
   559                           fsr2l	equ	0xFD9
   560                           status	equ	0xFD8
   561                           
   562 ;; *************** function _ReadUSART *****************
   563 ;; Defined at:
   564 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uread.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;		None
   567 ;; Auto vars:     Size  Location     Type
   568 ;;  data            1    0[COMRAM] unsigned char 
   569 ;; Return value:  Size  Location     Type
   570 ;;                  1    wreg      unsigned char 
   571 ;; Registers used:
   572 ;;		wreg, status,2, status,0
   573 ;; Tracked objects:
   574 ;;		On entry : 0/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   578 ;;      Params:         0       0       0       0       0       0       0
   579 ;;      Locals:         1       0       0       0       0       0       0
   580 ;;      Temps:          0       0       0       0       0       0       0
   581 ;;      Totals:         1       0       0       0       0       0       0
   582 ;;Total ram usage:        1 bytes
   583 ;; Hardware stack levels used:    1
   584 ;; This function calls:
   585 ;;		Nothing
   586 ;; This function is called by:
   587 ;;		_usartLoopbackSM
   588 ;;		_usartLoopback
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           	psect	text3
   593  007794                     __ptext3:
   594                           	opt stack 0
   595  007794                     _ReadUSART:
   596                           	opt stack 28
   597                           
   598                           ;incstack = 0
   599  007794  0EF2               	movlw	242
   600  007796  163B               	andwf	_USART_Status,f,c
   601  007798  ACAB               	btfss	4011,6,c	;volatile
   602  00779A  D003               	goto	l271
   603  00779C  903B               	bcf	_USART_Status,0,c
   604  00779E  B0AB               	btfsc	4011,0,c	;volatile
   605  0077A0  803B               	bsf	_USART_Status,0,c
   606  0077A2                     l271:
   607  0077A2  B4AB               	btfsc	4011,2,c	;volatile
   608  0077A4  843B               	bsf	_USART_Status,2,c
   609  0077A6  B2AB               	btfsc	4011,1,c	;volatile
   610  0077A8  863B               	bsf	_USART_Status,3,c
   611  0077AA  CFAE F001          	movff	4014,ReadUSART@data	;volatile
   612  0077AE  5001               	movf	ReadUSART@data,w,c
   613  0077B0  0012               	return	
   614  0077B2                     __end_of_ReadUSART:
   615                           	opt stack 0
   616                           tblptru	equ	0xFF8
   617                           tblptrh	equ	0xFF7
   618                           tblptrl	equ	0xFF6
   619                           tablat	equ	0xFF5
   620                           postinc0	equ	0xFEE
   621                           postdec1	equ	0xFE5
   622                           fsr1l	equ	0xFE1
   623                           indf2	equ	0xFDF
   624                           fsr2h	equ	0xFDA
   625                           fsr2l	equ	0xFD9
   626                           status	equ	0xFD8
   627                           
   628 ;; *************** function _sevenSegmentSM *****************
   629 ;; Defined at:
   630 ;;		line 40 in file "../src/PIC18/SevenSeg.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;  data            2    4[COMRAM] PTR struct SevenSegmentD
   633 ;;		 -> main@sevenSegData(6), 
   634 ;; Auto vars:     Size  Location     Type
   635 ;;		None
   636 ;; Return value:  Size  Location     Type
   637 ;;		None               void
   638 ;; Registers used:
   639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   645 ;;      Params:         2       0       0       0       0       0       0
   646 ;;      Locals:         0       0       0       0       0       0       0
   647 ;;      Temps:         12       0       0       0       0       0       0
   648 ;;      Totals:        14       0       0       0       0       0       0
   649 ;;Total ram usage:       14 bytes
   650 ;; Hardware stack levels used:    1
   651 ;; Hardware stack levels required when called:    2
   652 ;; This function calls:
   653 ;;		_getClock
   654 ;;		_init7SegmentHardware
   655 ;;		_write7Segment
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text4
   662  0079B6                     __ptext4:
   663                           	opt stack 0
   664  0079B6                     _sevenSegmentSM:
   665                           	opt stack 27
   666                           
   667                           ;SevenSeg.c: 41: switch(data->state) {
   668                           
   669                           ;incstack = 0
   670  0079B6  D0AD               	goto	l1110
   671  0079B8                     l1084:
   672                           
   673                           ;SevenSeg.c: 44: if(getClock() - data->currentClock >= 146) {
   674  0079B8  EE20 F001          	lfsr	2,1
   675  0079BC  5005               	movf	sevenSegmentSM@data,w,c
   676  0079BE  26D9               	addwf	fsr2l,f,c
   677  0079C0  5006               	movf	sevenSegmentSM@data+1,w,c
   678  0079C2  22DA               	addwfc	fsr2h,f,c
   679  0079C4  CFDE F007          	movff	postinc2,??_sevenSegmentSM
   680  0079C8  CFDE F008          	movff	postinc2,??_sevenSegmentSM+1
   681  0079CC  CFDE F009          	movff	postinc2,??_sevenSegmentSM+2
   682  0079D0  CFDE F00A          	movff	postinc2,??_sevenSegmentSM+3
   683  0079D4  1E07               	comf	??_sevenSegmentSM,f,c
   684  0079D6  1E08               	comf	??_sevenSegmentSM+1,f,c
   685  0079D8  1E09               	comf	??_sevenSegmentSM+2,f,c
   686  0079DA  1E0A               	comf	??_sevenSegmentSM+3,f,c
   687  0079DC  2A07               	incf	??_sevenSegmentSM,f,c
   688  0079DE  0E00               	movlw	0
   689  0079E0  2208               	addwfc	??_sevenSegmentSM+1,f,c
   690  0079E2  2209               	addwfc	??_sevenSegmentSM+2,f,c
   691  0079E4  220A               	addwfc	??_sevenSegmentSM+3,f,c
   692  0079E6  ECE9  F03B         	call	_getClock	;wreg free
   693  0079EA  C001  F00B         	movff	?_getClock,??_sevenSegmentSM+4
   694  0079EE  C002  F00C         	movff	?_getClock+1,??_sevenSegmentSM+5
   695  0079F2  C003  F00D         	movff	?_getClock+2,??_sevenSegmentSM+6
   696  0079F6  C004  F00E         	movff	?_getClock+3,??_sevenSegmentSM+7
   697  0079FA  5007               	movf	??_sevenSegmentSM,w,c
   698  0079FC  240B               	addwf	??_sevenSegmentSM+4,w,c
   699  0079FE  6E0F               	movwf	(??_sevenSegmentSM+8)& (0+255),c
   700  007A00  5008               	movf	??_sevenSegmentSM+1,w,c
   701  007A02  200C               	addwfc	??_sevenSegmentSM+5,w,c
   702  007A04  6E10               	movwf	(??_sevenSegmentSM+9)& (0+255),c
   703  007A06  5009               	movf	??_sevenSegmentSM+2,w,c
   704  007A08  200D               	addwfc	??_sevenSegmentSM+6,w,c
   705  007A0A  6E11               	movwf	(??_sevenSegmentSM+10)& (0+255),c
   706  007A0C  500A               	movf	??_sevenSegmentSM+3,w,c
   707  007A0E  200E               	addwfc	??_sevenSegmentSM+7,w,c
   708  007A10  6E12               	movwf	(??_sevenSegmentSM+11)& (0+255),c
   709  007A12  0E92               	movlw	146
   710  007A14  5C0F               	subwf	??_sevenSegmentSM+8,w,c
   711  007A16  0E00               	movlw	0
   712  007A18  5810               	subwfb	??_sevenSegmentSM+9,w,c
   713  007A1A  0E00               	movlw	0
   714  007A1C  5811               	subwfb	??_sevenSegmentSM+10,w,c
   715  007A1E  0E00               	movlw	0
   716  007A20  5812               	subwfb	??_sevenSegmentSM+11,w,c
   717  007A22  A0D8               	btfss	status,0,c
   718  007A24  D021               	goto	l1092
   719                           
   720                           ;SevenSeg.c: 45: data->count++;
   721  007A26  EE20 F005          	lfsr	2,5
   722  007A2A  5005               	movf	sevenSegmentSM@data,w,c
   723  007A2C  26D9               	addwf	fsr2l,f,c
   724  007A2E  5006               	movf	sevenSegmentSM@data+1,w,c
   725  007A30  22DA               	addwfc	fsr2h,f,c
   726  007A32  2ADF               	incf	indf2,f,c
   727                           
   728                           ;SevenSeg.c: 46: if(data->count >= 15)
   729  007A34  EE20 F005          	lfsr	2,5
   730  007A38  5005               	movf	sevenSegmentSM@data,w,c
   731  007A3A  26D9               	addwf	fsr2l,f,c
   732  007A3C  5006               	movf	sevenSegmentSM@data+1,w,c
   733  007A3E  22DA               	addwfc	fsr2h,f,c
   734  007A40  0E0E               	movlw	14
   735  007A42  64DF               	cpfsgt	indf2,c
   736  007A44  D008               	goto	l1090
   737                           
   738                           ;SevenSeg.c: 47: data->count = 0;
   739  007A46  EE20 F005          	lfsr	2,5
   740  007A4A  5005               	movf	sevenSegmentSM@data,w,c
   741  007A4C  26D9               	addwf	fsr2l,f,c
   742  007A4E  5006               	movf	sevenSegmentSM@data+1,w,c
   743  007A50  22DA               	addwfc	fsr2h,f,c
   744  007A52  0E00               	movlw	0
   745  007A54  6EDF               	movwf	indf2,c
   746  007A56                     l1090:
   747                           
   748                           ;SevenSeg.c: 48: write7Segment(data->count);
   749  007A56  EE20 F005          	lfsr	2,5
   750  007A5A  5005               	movf	sevenSegmentSM@data,w,c
   751  007A5C  26D9               	addwf	fsr2l,f,c
   752  007A5E  5006               	movf	sevenSegmentSM@data+1,w,c
   753  007A60  22DA               	addwfc	fsr2h,f,c
   754  007A62  50DF               	movf	indf2,w,c
   755  007A64  ECAE  F03B         	call	_write7Segment
   756  007A68                     l1092:
   757                           
   758                           ;SevenSeg.c: 49: }
   759                           ;SevenSeg.c: 50: data->currentClock = getClock();
   760  007A68  ECE9  F03B         	call	_getClock	;wreg free
   761  007A6C  C001  F007         	movff	?_getClock,??_sevenSegmentSM
   762  007A70  C002  F008         	movff	?_getClock+1,??_sevenSegmentSM+1
   763  007A74  C003  F009         	movff	?_getClock+2,??_sevenSegmentSM+2
   764  007A78  C004  F00A         	movff	?_getClock+3,??_sevenSegmentSM+3
   765  007A7C  EE20 F001          	lfsr	2,1
   766  007A80  5005               	movf	sevenSegmentSM@data,w,c
   767  007A82  26D9               	addwf	fsr2l,f,c
   768  007A84  5006               	movf	sevenSegmentSM@data+1,w,c
   769  007A86  22DA               	addwfc	fsr2h,f,c
   770  007A88  C007  FFDE         	movff	??_sevenSegmentSM,postinc2
   771  007A8C  C008  FFDE         	movff	??_sevenSegmentSM+1,postinc2
   772  007A90  C009  FFDE         	movff	??_sevenSegmentSM+2,postinc2
   773  007A94  C00A  FFDD         	movff	??_sevenSegmentSM+3,postdec2
   774  007A98  06D9               	decf	fsr2l,f,c
   775  007A9A  06D9               	decf	fsr2l,f,c
   776  007A9C  D02D               	goto	L4
   777  007A9E                     l1096:
   778                           
   779                           ;SevenSeg.c: 55: init7SegmentHardware();
   780  007A9E  EC8C  F03B         	call	_init7SegmentHardware	;wreg free
   781                           
   782                           ;SevenSeg.c: 56: data->count = 0;
   783  007AA2  EE20 F005          	lfsr	2,5
   784  007AA6  5005               	movf	sevenSegmentSM@data,w,c
   785  007AA8  26D9               	addwf	fsr2l,f,c
   786  007AAA  5006               	movf	sevenSegmentSM@data+1,w,c
   787  007AAC  22DA               	addwfc	fsr2h,f,c
   788  007AAE  0E00               	movlw	0
   789  007AB0  6EDF               	movwf	indf2,c
   790                           
   791                           ;SevenSeg.c: 57: data->currentClock = getClock();
   792  007AB2  ECE9  F03B         	call	_getClock	;wreg free
   793  007AB6  C001  F007         	movff	?_getClock,??_sevenSegmentSM
   794  007ABA  C002  F008         	movff	?_getClock+1,??_sevenSegmentSM+1
   795  007ABE  C003  F009         	movff	?_getClock+2,??_sevenSegmentSM+2
   796  007AC2  C004  F00A         	movff	?_getClock+3,??_sevenSegmentSM+3
   797  007AC6  EE20 F001          	lfsr	2,1
   798  007ACA  5005               	movf	sevenSegmentSM@data,w,c
   799  007ACC  26D9               	addwf	fsr2l,f,c
   800  007ACE  5006               	movf	sevenSegmentSM@data+1,w,c
   801  007AD0  22DA               	addwfc	fsr2h,f,c
   802  007AD2  C007  FFDE         	movff	??_sevenSegmentSM,postinc2
   803  007AD6  C008  FFDE         	movff	??_sevenSegmentSM+1,postinc2
   804  007ADA  C009  FFDE         	movff	??_sevenSegmentSM+2,postinc2
   805  007ADE  C00A  FFDD         	movff	??_sevenSegmentSM+3,postdec2
   806  007AE2  06D9               	decf	fsr2l,f,c
   807  007AE4  06D9               	decf	fsr2l,f,c
   808                           
   809                           ;SevenSeg.c: 58: write7Segment(data->count);
   810  007AE6  EE20 F005          	lfsr	2,5
   811  007AEA  5005               	movf	sevenSegmentSM@data,w,c
   812  007AEC  26D9               	addwf	fsr2l,f,c
   813  007AEE  5006               	movf	sevenSegmentSM@data+1,w,c
   814  007AF0  22DA               	addwfc	fsr2h,f,c
   815  007AF2  50DF               	movf	indf2,w,c
   816  007AF4  ECAE  F03B         	call	_write7Segment
   817  007AF8                     L4:
   818                           
   819                           ;SevenSeg.c: 59: data->state = _7SEG_WAITING;
   820  007AF8  C005  FFD9         	movff	sevenSegmentSM@data,fsr2l
   821  007AFC  C006  FFDA         	movff	sevenSegmentSM@data+1,fsr2h
   822  007B00  0E01               	movlw	1
   823  007B02  D005               	goto	L5
   824  007B04                     l1106:
   825                           
   826                           ;SevenSeg.c: 63: data->state = _7SEG_INIT;
   827  007B04  C005  FFD9         	movff	sevenSegmentSM@data,fsr2l
   828  007B08  C006  FFDA         	movff	sevenSegmentSM@data+1,fsr2h
   829  007B0C  0E00               	movlw	0
   830  007B0E                     L5:
   831  007B0E  6EDF               	movwf	indf2,c
   832                           
   833                           ;SevenSeg.c: 64: break;
   834  007B10  D00C               	goto	l169
   835  007B12                     l1110:
   836  007B12  C005  FFD9         	movff	sevenSegmentSM@data,fsr2l
   837  007B16  C006  FFDA         	movff	sevenSegmentSM@data+1,fsr2h
   838  007B1A  50DF               	movf	indf2,w,c
   839                           
   840                           ; Switch size 1, requested type "space"
   841                           ; Number of cases is 2, Range of values is 0 to 1
   842                           ; switch strategies available:
   843                           ; Name         Instructions Cycles
   844                           ; simple_byte            7     4 (average)
   845                           ;	Chosen strategy is simple_byte
   846  007B1C  0A00               	xorlw	0	; case 0
   847  007B1E  B4D8               	btfsc	status,2,c
   848  007B20  D7BE               	goto	l1096
   849  007B22  0A01               	xorlw	1	; case 1
   850  007B24  B4D8               	btfsc	status,2,c
   851  007B26  D748               	goto	l1084
   852  007B28  D7ED               	goto	l1106
   853  007B2A                     l169:
   854  007B2A  0012               	return	
   855  007B2C                     __end_of_sevenSegmentSM:
   856                           	opt stack 0
   857                           tblptru	equ	0xFF8
   858                           tblptrh	equ	0xFF7
   859                           tblptrl	equ	0xFF6
   860                           tablat	equ	0xFF5
   861                           postinc0	equ	0xFEE
   862                           postdec1	equ	0xFE5
   863                           fsr1l	equ	0xFE1
   864                           indf2	equ	0xFDF
   865                           postinc2	equ	0xFDE
   866                           postdec2	equ	0xFDD
   867                           fsr2h	equ	0xFDA
   868                           fsr2l	equ	0xFD9
   869                           status	equ	0xFD8
   870                           
   871 ;; *************** function _write7Segment *****************
   872 ;; Defined at:
   873 ;;		line 68 in file "../src/PIC18/SevenSeg.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;  data            1    wreg     unsigned char 
   876 ;; Auto vars:     Size  Location     Type
   877 ;;  data            1    2[COMRAM] unsigned char 
   878 ;; Return value:  Size  Location     Type
   879 ;;		None               void
   880 ;; Registers used:
   881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   887 ;;      Params:         0       0       0       0       0       0       0
   888 ;;      Locals:         1       0       0       0       0       0       0
   889 ;;      Temps:          0       0       0       0       0       0       0
   890 ;;      Totals:         1       0       0       0       0       0       0
   891 ;;Total ram usage:        1 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; Hardware stack levels required when called:    1
   894 ;; This function calls:
   895 ;;		_WriteSPI
   896 ;; This function is called by:
   897 ;;		_sevenSegmentSM
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901                           	psect	text5
   902  00775C                     __ptext5:
   903                           	opt stack 0
   904  00775C                     _write7Segment:
   905                           	opt stack 27
   906                           
   907                           ;incstack = 0
   908                           ;write7Segment@data stored from wreg
   909  00775C  6E03               	movwf	write7Segment@data,c
   910                           
   911                           ;SevenSeg.c: 69: WriteSPI(sevenSegPattern[data]);
   912  00775E  5003               	movf	write7Segment@data,w,c
   913  007760  0D01               	mullw	1
   914  007762  0E27               	movlw	low _sevenSegPattern
   915  007764  24F3               	addwf	prodl,w,c
   916  007766  6ED9               	movwf	fsr2l,c
   917  007768  0E00               	movlw	high _sevenSegPattern
   918  00776A  20F4               	addwfc	prodh,w,c
   919  00776C  6EDA               	movwf	fsr2h,c
   920  00776E  50DF               	movf	indf2,w,c
   921  007770  ECA2  F03B         	call	_WriteSPI
   922  007774  0012               	return	
   923  007776                     __end_of_write7Segment:
   924                           	opt stack 0
   925                           tblptru	equ	0xFF8
   926                           tblptrh	equ	0xFF7
   927                           tblptrl	equ	0xFF6
   928                           tablat	equ	0xFF5
   929                           prodh	equ	0xFF4
   930                           prodl	equ	0xFF3
   931                           postinc0	equ	0xFEE
   932                           postdec1	equ	0xFE5
   933                           fsr1l	equ	0xFE1
   934                           indf2	equ	0xFDF
   935                           postinc2	equ	0xFDE
   936                           postdec2	equ	0xFDD
   937                           fsr2h	equ	0xFDA
   938                           fsr2l	equ	0xFD9
   939                           status	equ	0xFD8
   940                           
   941 ;; *************** function _WriteSPI *****************
   942 ;; Defined at:
   943 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\SPI\spi_writ.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;  data_out        1    wreg     unsigned char 
   946 ;; Auto vars:     Size  Location     Type
   947 ;;  data_out        1    1[COMRAM] unsigned char 
   948 ;;  TempVar         1    0[COMRAM] unsigned char 
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      char 
   951 ;; Registers used:
   952 ;;		wreg
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   958 ;;      Params:         0       0       0       0       0       0       0
   959 ;;      Locals:         2       0       0       0       0       0       0
   960 ;;      Temps:          0       0       0       0       0       0       0
   961 ;;      Totals:         2       0       0       0       0       0       0
   962 ;;Total ram usage:        2 bytes
   963 ;; Hardware stack levels used:    1
   964 ;; This function calls:
   965 ;;		Nothing
   966 ;; This function is called by:
   967 ;;		_write7Segment
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           	psect	text6
   972  007744                     __ptext6:
   973                           	opt stack 0
   974  007744                     _WriteSPI:
   975                           	opt stack 27
   976                           
   977                           ;incstack = 0
   978                           ;WriteSPI@data_out stored from wreg
   979  007744  6E02               	movwf	WriteSPI@data_out,c
   980  007746  CFC9 F001          	movff	4041,WriteSPI@TempVar	;volatile
   981  00774A  969E               	bcf	3998,3,c	;volatile
   982  00774C  9EC6               	bcf	4038,7,c	;volatile
   983  00774E  C002  FFC9         	movff	WriteSPI@data_out,4041	;volatile
   984  007752  BEC6               	btfsc	4038,7,c	;volatile
   985  007754  D002               	goto	l210
   986  007756                     l212:
   987  007756  A69E               	btfss	3998,3,c	;volatile
   988  007758  D7FE               	goto	l212
   989  00775A                     l210:
   990  00775A  0012               	return	
   991  00775C                     __end_of_WriteSPI:
   992                           	opt stack 0
   993                           tblptru	equ	0xFF8
   994                           tblptrh	equ	0xFF7
   995                           tblptrl	equ	0xFF6
   996                           tablat	equ	0xFF5
   997                           prodh	equ	0xFF4
   998                           prodl	equ	0xFF3
   999                           postinc0	equ	0xFEE
  1000                           postdec1	equ	0xFE5
  1001                           fsr1l	equ	0xFE1
  1002                           indf2	equ	0xFDF
  1003                           postinc2	equ	0xFDE
  1004                           postdec2	equ	0xFDD
  1005                           fsr2h	equ	0xFDA
  1006                           fsr2l	equ	0xFD9
  1007                           status	equ	0xFD8
  1008                           
  1009 ;; *************** function _init7SegmentHardware *****************
  1010 ;; Defined at:
  1011 ;;		line 34 in file "../src/PIC18/SevenSeg.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;		None
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;		None
  1016 ;; Return value:  Size  Location     Type
  1017 ;;		None               void
  1018 ;; Registers used:
  1019 ;;		wreg, status,2, status,0, cstack
  1020 ;; Tracked objects:
  1021 ;;		On entry : 0/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1025 ;;      Params:         0       0       0       0       0       0       0
  1026 ;;      Locals:         0       0       0       0       0       0       0
  1027 ;;      Temps:          0       0       0       0       0       0       0
  1028 ;;      Totals:         0       0       0       0       0       0       0
  1029 ;;Total ram usage:        0 bytes
  1030 ;; Hardware stack levels used:    1
  1031 ;; Hardware stack levels required when called:    1
  1032 ;; This function calls:
  1033 ;;		_OpenSPI
  1034 ;; This function is called by:
  1035 ;;		_sevenSegmentSM
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039                           	psect	text7
  1040  007718                     __ptext7:
  1041                           	opt stack 0
  1042  007718                     _init7SegmentHardware:
  1043                           	opt stack 27
  1044                           
  1045                           ;SevenSeg.c: 35: OpenSPI(0b00000000, 0b00000011, 0b10000000);
  1046                           
  1047                           ;incstack = 0
  1048  007718  0E03               	movlw	3
  1049  00771A  6E01               	movwf	OpenSPI@bus_mode,c
  1050  00771C  0E80               	movlw	128
  1051  00771E  6E02               	movwf	OpenSPI@smp_phase,c
  1052  007720  0E00               	movlw	0
  1053  007722  EC19  F03C         	call	_OpenSPI
  1054                           
  1055                           ;SevenSeg.c: 36: (TRISDbits.TRISD0) = 0;
  1056  007726  9095               	bcf	3989,0,c	;volatile
  1057                           
  1058                           ;SevenSeg.c: 37: (PORTDbits.RD0) = 1;
  1059  007728  8083               	bsf	3971,0,c	;volatile
  1060  00772A  0012               	return	
  1061  00772C                     __end_of_init7SegmentHardware:
  1062                           	opt stack 0
  1063                           tblptru	equ	0xFF8
  1064                           tblptrh	equ	0xFF7
  1065                           tblptrl	equ	0xFF6
  1066                           tablat	equ	0xFF5
  1067                           prodh	equ	0xFF4
  1068                           prodl	equ	0xFF3
  1069                           postinc0	equ	0xFEE
  1070                           postdec1	equ	0xFE5
  1071                           fsr1l	equ	0xFE1
  1072                           indf2	equ	0xFDF
  1073                           postinc2	equ	0xFDE
  1074                           postdec2	equ	0xFDD
  1075                           fsr2h	equ	0xFDA
  1076                           fsr2l	equ	0xFD9
  1077                           status	equ	0xFD8
  1078                           
  1079 ;; *************** function _OpenSPI *****************
  1080 ;; Defined at:
  1081 ;;		line 14 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\SPI\spi_open.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  sync_mode       1    wreg     unsigned char 
  1084 ;;  bus_mode        1    0[COMRAM] unsigned char 
  1085 ;;  smp_phase       1    1[COMRAM] unsigned char 
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;  sync_mode       1    2[COMRAM] unsigned char 
  1088 ;; Return value:  Size  Location     Type
  1089 ;;		None               void
  1090 ;; Registers used:
  1091 ;;		wreg, status,2, status,0
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1097 ;;      Params:         2       0       0       0       0       0       0
  1098 ;;      Locals:         1       0       0       0       0       0       0
  1099 ;;      Temps:          0       0       0       0       0       0       0
  1100 ;;      Totals:         3       0       0       0       0       0       0
  1101 ;;Total ram usage:        3 bytes
  1102 ;; Hardware stack levels used:    1
  1103 ;; This function calls:
  1104 ;;		Nothing
  1105 ;; This function is called by:
  1106 ;;		_init7SegmentHardware
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           	psect	text8
  1111  007832                     __ptext8:
  1112                           	opt stack 0
  1113  007832                     _OpenSPI:
  1114                           	opt stack 27
  1115                           
  1116                           ;incstack = 0
  1117                           ;OpenSPI@sync_mode stored from wreg
  1118  007832  6E03               	movwf	OpenSPI@sync_mode,c
  1119  007834  0E3F               	movlw	63
  1120  007836  16C7               	andwf	4039,f,c	;volatile
  1121  007838  0E00               	movlw	0
  1122  00783A  6EC6               	movwf	4038,c	;volatile
  1123  00783C  5003               	movf	OpenSPI@sync_mode,w,c
  1124  00783E  12C6               	iorwf	4038,f,c	;volatile
  1125  007840  5002               	movf	OpenSPI@smp_phase,w,c
  1126  007842  12C7               	iorwf	4039,f,c	;volatile
  1127  007844  D005               	goto	l888
  1128  007846                     l188:
  1129  007846  8CC7               	bsf	4039,6,c	;volatile
  1130  007848  D015               	goto	l892
  1131  00784A                     l190:
  1132  00784A  8CC7               	bsf	4039,6,c	;volatile
  1133  00784C                     l191:
  1134  00784C  88C6               	bsf	4038,4,c	;volatile
  1135  00784E  D012               	goto	l892
  1136  007850                     l888:
  1137  007850  5001               	movf	OpenSPI@bus_mode,w,c
  1138                           
  1139                           ; Switch size 1, requested type "space"
  1140                           ; Number of cases is 3, Range of values is 0 to 3
  1141                           ; switch strategies available:
  1142                           ; Name         Instructions Cycles
  1143                           ; simple_byte           10     6 (average)
  1144                           ;	Chosen strategy is simple_byte
  1145  007852  0A00               	xorlw	0	; case 0
  1146  007854  B4D8               	btfsc	status,2,c
  1147  007856  D7F7               	goto	l188
  1148  007858  0A02               	xorlw	2	; case 2
  1149  00785A  B4D8               	btfsc	status,2,c
  1150  00785C  D7F6               	goto	l190
  1151  00785E  0A01               	xorlw	1	; case 3
  1152  007860  B4D8               	btfsc	status,2,c
  1153  007862  D7F4               	goto	l191
  1154  007864  D007               	goto	l892
  1155  007866                     l194:
  1156  007866  8694               	bsf	3988,3,c	;volatile
  1157  007868  8A92               	bsf	3986,5,c	;volatile
  1158  00786A  D00C               	goto	l195
  1159  00786C                     l196:
  1160  00786C  8694               	bsf	3988,3,c	;volatile
  1161  00786E  D00A               	goto	l195
  1162  007870                     l197:
  1163  007870  9694               	bcf	3988,3,c	;volatile
  1164  007872  D008               	goto	l195
  1165  007874                     l892:
  1166  007874  5003               	movf	OpenSPI@sync_mode,w,c
  1167                           
  1168                           ; Switch size 1, requested type "space"
  1169                           ; Number of cases is 2, Range of values is 4 to 5
  1170                           ; switch strategies available:
  1171                           ; Name         Instructions Cycles
  1172                           ; simple_byte            7     4 (average)
  1173                           ;	Chosen strategy is simple_byte
  1174  007876  0A04               	xorlw	4	; case 4
  1175  007878  B4D8               	btfsc	status,2,c
  1176  00787A  D7F5               	goto	l194
  1177  00787C  0A01               	xorlw	1	; case 5
  1178  00787E  B4D8               	btfsc	status,2,c
  1179  007880  D7F5               	goto	l196
  1180  007882  D7F6               	goto	l197
  1181  007884                     l195:
  1182  007884  8894               	bsf	3988,4,c	;volatile
  1183  007886  9A94               	bcf	3988,5,c	;volatile
  1184  007888  8AC6               	bsf	4038,5,c	;volatile
  1185  00788A  0012               	return	
  1186  00788C                     __end_of_OpenSPI:
  1187                           	opt stack 0
  1188                           tblptru	equ	0xFF8
  1189                           tblptrh	equ	0xFF7
  1190                           tblptrl	equ	0xFF6
  1191                           tablat	equ	0xFF5
  1192                           prodh	equ	0xFF4
  1193                           prodl	equ	0xFF3
  1194                           postinc0	equ	0xFEE
  1195                           postdec1	equ	0xFE5
  1196                           fsr1l	equ	0xFE1
  1197                           indf2	equ	0xFDF
  1198                           postinc2	equ	0xFDE
  1199                           postdec2	equ	0xFDD
  1200                           fsr2h	equ	0xFDA
  1201                           fsr2l	equ	0xFD9
  1202                           status	equ	0xFD8
  1203                           
  1204 ;; *************** function _ledSM *****************
  1205 ;; Defined at:
  1206 ;;		line 13 in file "../src/PIC18/LEDSM.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;  ledData         2    4[COMRAM] PTR struct LEDData
  1209 ;;		 -> main@ledData(5), 
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;  now             2   18[COMRAM] int 
  1212 ;; Return value:  Size  Location     Type
  1213 ;;		None               void
  1214 ;; Registers used:
  1215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1221 ;;      Params:         2       0       0       0       0       0       0
  1222 ;;      Locals:         2       0       0       0       0       0       0
  1223 ;;      Temps:         12       0       0       0       0       0       0
  1224 ;;      Totals:        16       0       0       0       0       0       0
  1225 ;;Total ram usage:       16 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; Hardware stack levels required when called:    2
  1228 ;; This function calls:
  1229 ;;		_configureLED
  1230 ;;		_getClock
  1231 ;;		_offLED
  1232 ;;		_onLED
  1233 ;; This function is called by:
  1234 ;;		_main
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           	psect	text9
  1239  007B2C                     __ptext9:
  1240                           	opt stack 0
  1241  007B2C                     _ledSM:
  1242                           	opt stack 27
  1243                           
  1244                           ;LEDSM.c: 14: int now = 9;
  1245                           
  1246                           ;incstack = 0
  1247  007B2C  0E00               	movlw	0
  1248  007B2E  6E14               	movwf	ledSM@now+1,c
  1249  007B30  0E09               	movlw	9
  1250  007B32  6E13               	movwf	ledSM@now,c
  1251                           
  1252                           ;LEDSM.c: 15: switch(ledData->state) {
  1253  007B34  D0D5               	goto	l1080
  1254  007B36                     l1048:
  1255                           
  1256                           ;LEDSM.c: 17: if(getClock() - ledData->currentClock >= 488) {
  1257  007B36  EE20 F001          	lfsr	2,1
  1258  007B3A  5005               	movf	ledSM@ledData,w,c
  1259  007B3C  26D9               	addwf	fsr2l,f,c
  1260  007B3E  5006               	movf	ledSM@ledData+1,w,c
  1261  007B40  22DA               	addwfc	fsr2h,f,c
  1262  007B42  CFDE F007          	movff	postinc2,??_ledSM
  1263  007B46  CFDE F008          	movff	postinc2,??_ledSM+1
  1264  007B4A  CFDE F009          	movff	postinc2,??_ledSM+2
  1265  007B4E  CFDE F00A          	movff	postinc2,??_ledSM+3
  1266  007B52  1E07               	comf	??_ledSM,f,c
  1267  007B54  1E08               	comf	??_ledSM+1,f,c
  1268  007B56  1E09               	comf	??_ledSM+2,f,c
  1269  007B58  1E0A               	comf	??_ledSM+3,f,c
  1270  007B5A  2A07               	incf	??_ledSM,f,c
  1271  007B5C  0E00               	movlw	0
  1272  007B5E  2208               	addwfc	??_ledSM+1,f,c
  1273  007B60  2209               	addwfc	??_ledSM+2,f,c
  1274  007B62  220A               	addwfc	??_ledSM+3,f,c
  1275  007B64  ECE9  F03B         	call	_getClock	;wreg free
  1276  007B68  C001  F00B         	movff	?_getClock,??_ledSM+4
  1277  007B6C  C002  F00C         	movff	?_getClock+1,??_ledSM+5
  1278  007B70  C003  F00D         	movff	?_getClock+2,??_ledSM+6
  1279  007B74  C004  F00E         	movff	?_getClock+3,??_ledSM+7
  1280  007B78  5007               	movf	??_ledSM,w,c
  1281  007B7A  240B               	addwf	??_ledSM+4,w,c
  1282  007B7C  6E0F               	movwf	(??_ledSM+8)& (0+255),c
  1283  007B7E  5008               	movf	??_ledSM+1,w,c
  1284  007B80  200C               	addwfc	??_ledSM+5,w,c
  1285  007B82  6E10               	movwf	(??_ledSM+9)& (0+255),c
  1286  007B84  5009               	movf	??_ledSM+2,w,c
  1287  007B86  200D               	addwfc	??_ledSM+6,w,c
  1288  007B88  6E11               	movwf	(??_ledSM+10)& (0+255),c
  1289  007B8A  500A               	movf	??_ledSM+3,w,c
  1290  007B8C  200E               	addwfc	??_ledSM+7,w,c
  1291  007B8E  6E12               	movwf	(??_ledSM+11)& (0+255),c
  1292  007B90  0EE8               	movlw	232
  1293  007B92  5C0F               	subwf	??_ledSM+8,w,c
  1294  007B94  0E01               	movlw	1
  1295  007B96  5810               	subwfb	??_ledSM+9,w,c
  1296  007B98  0E00               	movlw	0
  1297  007B9A  5811               	subwfb	??_ledSM+10,w,c
  1298  007B9C  0E00               	movlw	0
  1299  007B9E  5812               	subwfb	??_ledSM+11,w,c
  1300  007BA0  A0D8               	btfss	status,0,c
  1301  007BA2  D031               	goto	L7
  1302                           
  1303                           ;LEDSM.c: 18: onLED();
  1304  007BA4  EC65  F03B         	call	_onLED	;wreg free
  1305                           
  1306                           ;LEDSM.c: 19: ledData->state = LED_ON;
  1307  007BA8  C005  FFD9         	movff	ledSM@ledData,fsr2l
  1308  007BAC  C006  FFDA         	movff	ledSM@ledData+1,fsr2h
  1309  007BB0  0E02               	movlw	2
  1310  007BB2  6EDF               	movwf	indf2,c
  1311                           
  1312                           ;LEDSM.c: 20: ledData->currentClock = getClock();
  1313  007BB4  ECE9  F03B         	call	_getClock	;wreg free
  1314  007BB8  D06D               	goto	L6
  1315  007BBA                     l1058:
  1316                           
  1317                           ;LEDSM.c: 27: ledData->currentClock = getClock();
  1318  007BBA  ECE9  F03B         	call	_getClock	;wreg free
  1319  007BBE  C001  F007         	movff	?_getClock,??_ledSM
  1320  007BC2  C002  F008         	movff	?_getClock+1,??_ledSM+1
  1321  007BC6  C003  F009         	movff	?_getClock+2,??_ledSM+2
  1322  007BCA  C004  F00A         	movff	?_getClock+3,??_ledSM+3
  1323  007BCE  EE20 F001          	lfsr	2,1
  1324  007BD2  5005               	movf	ledSM@ledData,w,c
  1325  007BD4  26D9               	addwf	fsr2l,f,c
  1326  007BD6  5006               	movf	ledSM@ledData+1,w,c
  1327  007BD8  22DA               	addwfc	fsr2h,f,c
  1328  007BDA  C007  FFDE         	movff	??_ledSM,postinc2
  1329  007BDE  C008  FFDE         	movff	??_ledSM+1,postinc2
  1330  007BE2  C009  FFDE         	movff	??_ledSM+2,postinc2
  1331  007BE6  C00A  FFDD         	movff	??_ledSM+3,postdec2
  1332  007BEA  06D9               	decf	fsr2l,f,c
  1333  007BEC  06D9               	decf	fsr2l,f,c
  1334                           
  1335                           ;LEDSM.c: 28: configureLED();
  1336  007BEE  EC5F  F03B         	call	_configureLED	;wreg free
  1337                           
  1338                           ;LEDSM.c: 29: now += now + 2;
  1339  007BF2  0E02               	movlw	2
  1340  007BF4  2413               	addwf	ledSM@now,w,c
  1341  007BF6  6E07               	movwf	??_ledSM& (0+255),c
  1342  007BF8  0E00               	movlw	0
  1343  007BFA  2014               	addwfc	ledSM@now+1,w,c
  1344  007BFC  6E08               	movwf	(??_ledSM+1)& (0+255),c
  1345  007BFE  5007               	movf	??_ledSM,w,c
  1346  007C00  2613               	addwf	ledSM@now,f,c
  1347  007C02  5008               	movf	??_ledSM+1,w,c
  1348  007C04  2214               	addwfc	ledSM@now+1,f,c
  1349  007C06                     L7:
  1350                           
  1351                           ;LEDSM.c: 30: ledData->state = LED_OFF;
  1352  007C06  C005  FFD9         	movff	ledSM@ledData,fsr2l
  1353  007C0A  C006  FFDA         	movff	ledSM@ledData+1,fsr2h
  1354  007C0E  0E01               	movlw	1
  1355  007C10  D065               	goto	L9
  1356  007C12                     l1066:
  1357                           
  1358                           ;LEDSM.c: 34: if(getClock() - ledData->currentClock >= 488) {
  1359  007C12  EE20 F001          	lfsr	2,1
  1360  007C16  5005               	movf	ledSM@ledData,w,c
  1361  007C18  26D9               	addwf	fsr2l,f,c
  1362  007C1A  5006               	movf	ledSM@ledData+1,w,c
  1363  007C1C  22DA               	addwfc	fsr2h,f,c
  1364  007C1E  CFDE F007          	movff	postinc2,??_ledSM
  1365  007C22  CFDE F008          	movff	postinc2,??_ledSM+1
  1366  007C26  CFDE F009          	movff	postinc2,??_ledSM+2
  1367  007C2A  CFDE F00A          	movff	postinc2,??_ledSM+3
  1368  007C2E  1E07               	comf	??_ledSM,f,c
  1369  007C30  1E08               	comf	??_ledSM+1,f,c
  1370  007C32  1E09               	comf	??_ledSM+2,f,c
  1371  007C34  1E0A               	comf	??_ledSM+3,f,c
  1372  007C36  2A07               	incf	??_ledSM,f,c
  1373  007C38  0E00               	movlw	0
  1374  007C3A  2208               	addwfc	??_ledSM+1,f,c
  1375  007C3C  2209               	addwfc	??_ledSM+2,f,c
  1376  007C3E  220A               	addwfc	??_ledSM+3,f,c
  1377  007C40  ECE9  F03B         	call	_getClock	;wreg free
  1378  007C44  C001  F00B         	movff	?_getClock,??_ledSM+4
  1379  007C48  C002  F00C         	movff	?_getClock+1,??_ledSM+5
  1380  007C4C  C003  F00D         	movff	?_getClock+2,??_ledSM+6
  1381  007C50  C004  F00E         	movff	?_getClock+3,??_ledSM+7
  1382  007C54  5007               	movf	??_ledSM,w,c
  1383  007C56  240B               	addwf	??_ledSM+4,w,c
  1384  007C58  6E0F               	movwf	(??_ledSM+8)& (0+255),c
  1385  007C5A  5008               	movf	??_ledSM+1,w,c
  1386  007C5C  200C               	addwfc	??_ledSM+5,w,c
  1387  007C5E  6E10               	movwf	(??_ledSM+9)& (0+255),c
  1388  007C60  5009               	movf	??_ledSM+2,w,c
  1389  007C62  200D               	addwfc	??_ledSM+6,w,c
  1390  007C64  6E11               	movwf	(??_ledSM+10)& (0+255),c
  1391  007C66  500A               	movf	??_ledSM+3,w,c
  1392  007C68  200E               	addwfc	??_ledSM+7,w,c
  1393  007C6A  6E12               	movwf	(??_ledSM+11)& (0+255),c
  1394  007C6C  0EE8               	movlw	232
  1395  007C6E  5C0F               	subwf	??_ledSM+8,w,c
  1396  007C70  0E01               	movlw	1
  1397  007C72  5810               	subwfb	??_ledSM+9,w,c
  1398  007C74  0E00               	movlw	0
  1399  007C76  5811               	subwfb	??_ledSM+10,w,c
  1400  007C78  0E00               	movlw	0
  1401  007C7A  5812               	subwfb	??_ledSM+11,w,c
  1402  007C7C  A0D8               	btfss	status,0,c
  1403  007C7E  D023               	goto	l1074
  1404                           
  1405                           ;LEDSM.c: 35: offLED();
  1406  007C80  EC63  F03B         	call	_offLED	;wreg free
  1407                           
  1408                           ;LEDSM.c: 36: ledData->state = LED_OFF;
  1409  007C84  C005  FFD9         	movff	ledSM@ledData,fsr2l
  1410  007C88  C006  FFDA         	movff	ledSM@ledData+1,fsr2h
  1411  007C8C  0E01               	movlw	1
  1412  007C8E  6EDF               	movwf	indf2,c
  1413                           
  1414                           ;LEDSM.c: 37: ledData->currentClock = getClock();
  1415  007C90  ECE9  F03B         	call	_getClock	;wreg free
  1416  007C94                     L6:
  1417  007C94  C001  F007         	movff	?_getClock,??_ledSM
  1418  007C98  C002  F008         	movff	?_getClock+1,??_ledSM+1
  1419  007C9C  C003  F009         	movff	?_getClock+2,??_ledSM+2
  1420  007CA0  C004  F00A         	movff	?_getClock+3,??_ledSM+3
  1421  007CA4  EE20 F001          	lfsr	2,1
  1422  007CA8  5005               	movf	ledSM@ledData,w,c
  1423  007CAA  26D9               	addwf	fsr2l,f,c
  1424  007CAC  5006               	movf	ledSM@ledData+1,w,c
  1425  007CAE  22DA               	addwfc	fsr2h,f,c
  1426  007CB0  C007  FFDE         	movff	??_ledSM,postinc2
  1427  007CB4  C008  FFDE         	movff	??_ledSM+1,postinc2
  1428  007CB8  C009  FFDE         	movff	??_ledSM+2,postinc2
  1429  007CBC  C00A  FFDD         	movff	??_ledSM+3,postdec2
  1430  007CC0  06D9               	decf	fsr2l,f,c
  1431  007CC2  06D9               	decf	fsr2l,f,c
  1432                           
  1433                           ;LEDSM.c: 38: } else {
  1434  007CC4  D01C               	goto	l116
  1435  007CC6                     l1074:
  1436                           
  1437                           ;LEDSM.c: 39: ledData->state = LED_ON;
  1438  007CC6  C005  FFD9         	movff	ledSM@ledData,fsr2l
  1439  007CCA  C006  FFDA         	movff	ledSM@ledData+1,fsr2h
  1440  007CCE  0E02               	movlw	2
  1441  007CD0  D005               	goto	L9
  1442  007CD2                     l1076:
  1443                           
  1444                           ;LEDSM.c: 45: ledData->state = LED_START;
  1445  007CD2  C005  FFD9         	movff	ledSM@ledData,fsr2l
  1446  007CD6  C006  FFDA         	movff	ledSM@ledData+1,fsr2h
  1447  007CDA  0E00               	movlw	0
  1448  007CDC                     L9:
  1449  007CDC  6EDF               	movwf	indf2,c
  1450                           
  1451                           ;LEDSM.c: 46: break;
  1452  007CDE  D00F               	goto	l116
  1453  007CE0                     l1080:
  1454  007CE0  C005  FFD9         	movff	ledSM@ledData,fsr2l
  1455  007CE4  C006  FFDA         	movff	ledSM@ledData+1,fsr2h
  1456  007CE8  50DF               	movf	indf2,w,c
  1457                           
  1458                           ; Switch size 1, requested type "space"
  1459                           ; Number of cases is 3, Range of values is 0 to 2
  1460                           ; switch strategies available:
  1461                           ; Name         Instructions Cycles
  1462                           ; simple_byte           10     6 (average)
  1463                           ;	Chosen strategy is simple_byte
  1464  007CEA  0A00               	xorlw	0	; case 0
  1465  007CEC  B4D8               	btfsc	status,2,c
  1466  007CEE  D765               	goto	l1058
  1467  007CF0  0A01               	xorlw	1	; case 1
  1468  007CF2  B4D8               	btfsc	status,2,c
  1469  007CF4  D720               	goto	l1048
  1470  007CF6  0A03               	xorlw	3	; case 2
  1471  007CF8  B4D8               	btfsc	status,2,c
  1472  007CFA  D78B               	goto	l1066
  1473  007CFC  D7EA               	goto	l1076
  1474  007CFE                     l116:
  1475  007CFE  0012               	return	
  1476  007D00                     __end_of_ledSM:
  1477                           	opt stack 0
  1478                           tblptru	equ	0xFF8
  1479                           tblptrh	equ	0xFF7
  1480                           tblptrl	equ	0xFF6
  1481                           tablat	equ	0xFF5
  1482                           prodh	equ	0xFF4
  1483                           prodl	equ	0xFF3
  1484                           postinc0	equ	0xFEE
  1485                           postdec1	equ	0xFE5
  1486                           fsr1l	equ	0xFE1
  1487                           indf2	equ	0xFDF
  1488                           postinc2	equ	0xFDE
  1489                           postdec2	equ	0xFDD
  1490                           fsr2h	equ	0xFDA
  1491                           fsr2l	equ	0xFD9
  1492                           status	equ	0xFD8
  1493                           
  1494 ;; *************** function _onLED *****************
  1495 ;; Defined at:
  1496 ;;		line 26 in file "../src/PIC18/Blinky.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;		None
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;		None
  1501 ;; Return value:  Size  Location     Type
  1502 ;;		None               void
  1503 ;; Registers used:
  1504 ;;		None
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1510 ;;      Params:         0       0       0       0       0       0       0
  1511 ;;      Locals:         0       0       0       0       0       0       0
  1512 ;;      Temps:          0       0       0       0       0       0       0
  1513 ;;      Totals:         0       0       0       0       0       0       0
  1514 ;;Total ram usage:        0 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; This function calls:
  1517 ;;		Nothing
  1518 ;; This function is called by:
  1519 ;;		_ledSM
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           	psect	text10
  1524  0076CA                     __ptext10:
  1525                           	opt stack 0
  1526  0076CA                     _onLED:
  1527                           	opt stack 28
  1528                           
  1529                           ;Blinky.c: 27: PORTCbits.RC0 = 1;
  1530                           
  1531                           ;incstack = 0
  1532  0076CA  8082               	bsf	3970,0,c	;volatile
  1533  0076CC  0012               	return	
  1534  0076CE                     __end_of_onLED:
  1535                           	opt stack 0
  1536                           tblptru	equ	0xFF8
  1537                           tblptrh	equ	0xFF7
  1538                           tblptrl	equ	0xFF6
  1539                           tablat	equ	0xFF5
  1540                           prodh	equ	0xFF4
  1541                           prodl	equ	0xFF3
  1542                           postinc0	equ	0xFEE
  1543                           postdec1	equ	0xFE5
  1544                           fsr1l	equ	0xFE1
  1545                           indf2	equ	0xFDF
  1546                           postinc2	equ	0xFDE
  1547                           postdec2	equ	0xFDD
  1548                           fsr2h	equ	0xFDA
  1549                           fsr2l	equ	0xFD9
  1550                           status	equ	0xFD8
  1551                           
  1552 ;; *************** function _offLED *****************
  1553 ;; Defined at:
  1554 ;;		line 30 in file "../src/PIC18/Blinky.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;		None
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;		None
  1559 ;; Return value:  Size  Location     Type
  1560 ;;		None               void
  1561 ;; Registers used:
  1562 ;;		None
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1568 ;;      Params:         0       0       0       0       0       0       0
  1569 ;;      Locals:         0       0       0       0       0       0       0
  1570 ;;      Temps:          0       0       0       0       0       0       0
  1571 ;;      Totals:         0       0       0       0       0       0       0
  1572 ;;Total ram usage:        0 bytes
  1573 ;; Hardware stack levels used:    1
  1574 ;; This function calls:
  1575 ;;		Nothing
  1576 ;; This function is called by:
  1577 ;;		_ledSM
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           	psect	text11
  1582  0076C6                     __ptext11:
  1583                           	opt stack 0
  1584  0076C6                     _offLED:
  1585                           	opt stack 28
  1586                           
  1587                           ;Blinky.c: 31: PORTCbits.RC0 = 0;
  1588                           
  1589                           ;incstack = 0
  1590  0076C6  9082               	bcf	3970,0,c	;volatile
  1591  0076C8  0012               	return	
  1592  0076CA                     __end_of_offLED:
  1593                           	opt stack 0
  1594                           tblptru	equ	0xFF8
  1595                           tblptrh	equ	0xFF7
  1596                           tblptrl	equ	0xFF6
  1597                           tablat	equ	0xFF5
  1598                           prodh	equ	0xFF4
  1599                           prodl	equ	0xFF3
  1600                           postinc0	equ	0xFEE
  1601                           postdec1	equ	0xFE5
  1602                           fsr1l	equ	0xFE1
  1603                           indf2	equ	0xFDF
  1604                           postinc2	equ	0xFDE
  1605                           postdec2	equ	0xFDD
  1606                           fsr2h	equ	0xFDA
  1607                           fsr2l	equ	0xFD9
  1608                           status	equ	0xFD8
  1609                           
  1610 ;; *************** function _getClock *****************
  1611 ;; Defined at:
  1612 ;;		line 23 in file "../src/PIC18/Clock.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;		None
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;		None
  1617 ;; Return value:  Size  Location     Type
  1618 ;;                  4    0[COMRAM] unsigned long 
  1619 ;; Registers used:
  1620 ;;		wreg, status,2, status,0, cstack
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1626 ;;      Params:         4       0       0       0       0       0       0
  1627 ;;      Locals:         0       0       0       0       0       0       0
  1628 ;;      Temps:          0       0       0       0       0       0       0
  1629 ;;      Totals:         4       0       0       0       0       0       0
  1630 ;;Total ram usage:        4 bytes
  1631 ;; Hardware stack levels used:    1
  1632 ;; Hardware stack levels required when called:    1
  1633 ;; This function calls:
  1634 ;;		_clearTimer0Overflowed
  1635 ;;		_hasTimer0Overflowed
  1636 ;; This function is called by:
  1637 ;;		_ledSM
  1638 ;;		_sevenSegmentSM
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           	psect	text12
  1643  0077D2                     __ptext12:
  1644                           	opt stack 0
  1645  0077D2                     _getClock:
  1646                           	opt stack 27
  1647                           
  1648                           ;Clock.c: 24: if(hasTimer0Overflowed()) {
  1649                           
  1650                           ;incstack = 0
  1651  0077D2  EC67  F03B         	call	_hasTimer0Overflowed	;wreg free
  1652  0077D6  0900               	iorlw	0
  1653  0077D8  B4D8               	btfsc	status,2,c
  1654  0077DA  D008               	goto	l954
  1655                           
  1656                           ;Clock.c: 25: clearTimer0Overflowed();
  1657  0077DC  EC61  F03B         	call	_clearTimer0Overflowed	;wreg free
  1658                           
  1659                           ;Clock.c: 26: clock++;
  1660  0077E0  0E01               	movlw	1
  1661  0077E2  2637               	addwf	_clock,f,c
  1662  0077E4  0E00               	movlw	0
  1663  0077E6  2238               	addwfc	_clock+1,f,c
  1664  0077E8  2239               	addwfc	_clock+2,f,c
  1665  0077EA  223A               	addwfc	_clock+3,f,c
  1666  0077EC                     l954:
  1667                           
  1668                           ;Clock.c: 27: }
  1669                           ;Clock.c: 28: return clock;
  1670  0077EC  C037  F001         	movff	_clock,?_getClock
  1671  0077F0  C038  F002         	movff	_clock+1,?_getClock+1
  1672  0077F4  C039  F003         	movff	_clock+2,?_getClock+2
  1673  0077F8  C03A  F004         	movff	_clock+3,?_getClock+3
  1674  0077FC  0012               	return	
  1675  0077FE                     __end_of_getClock:
  1676                           	opt stack 0
  1677                           tblptru	equ	0xFF8
  1678                           tblptrh	equ	0xFF7
  1679                           tblptrl	equ	0xFF6
  1680                           tablat	equ	0xFF5
  1681                           prodh	equ	0xFF4
  1682                           prodl	equ	0xFF3
  1683                           postinc0	equ	0xFEE
  1684                           postdec1	equ	0xFE5
  1685                           fsr1l	equ	0xFE1
  1686                           indf2	equ	0xFDF
  1687                           postinc2	equ	0xFDE
  1688                           postdec2	equ	0xFDD
  1689                           fsr2h	equ	0xFDA
  1690                           fsr2l	equ	0xFD9
  1691                           status	equ	0xFD8
  1692                           
  1693 ;; *************** function _hasTimer0Overflowed *****************
  1694 ;; Defined at:
  1695 ;;		line 34 in file "../src/PIC18/Clock.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;		None
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;		None
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      unsigned char 
  1702 ;; Registers used:
  1703 ;;		wreg
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1709 ;;      Params:         0       0       0       0       0       0       0
  1710 ;;      Locals:         0       0       0       0       0       0       0
  1711 ;;      Temps:          0       0       0       0       0       0       0
  1712 ;;      Totals:         0       0       0       0       0       0       0
  1713 ;;Total ram usage:        0 bytes
  1714 ;; Hardware stack levels used:    1
  1715 ;; This function calls:
  1716 ;;		Nothing
  1717 ;; This function is called by:
  1718 ;;		_getClock
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           	psect	text13
  1723  0076CE                     __ptext13:
  1724                           	opt stack 0
  1725  0076CE                     _hasTimer0Overflowed:
  1726                           	opt stack 27
  1727                           
  1728                           ;Clock.c: 35: return INTCONbits.TMR0IF;
  1729                           
  1730                           ;incstack = 0
  1731  0076CE  A4F2               	btfss	intcon,2,c	;volatile
  1732  0076D0  D002               	goto	u10
  1733  0076D2  0E01               	movlw	1
  1734  0076D4  D001               	goto	l87
  1735  0076D6                     u10:
  1736  0076D6  0E00               	movlw	0
  1737  0076D8                     l87:
  1738  0076D8  0012               	return	
  1739  0076DA                     __end_of_hasTimer0Overflowed:
  1740                           	opt stack 0
  1741                           tblptru	equ	0xFF8
  1742                           tblptrh	equ	0xFF7
  1743                           tblptrl	equ	0xFF6
  1744                           tablat	equ	0xFF5
  1745                           prodh	equ	0xFF4
  1746                           prodl	equ	0xFF3
  1747                           intcon	equ	0xFF2
  1748                           postinc0	equ	0xFEE
  1749                           postdec1	equ	0xFE5
  1750                           fsr1l	equ	0xFE1
  1751                           indf2	equ	0xFDF
  1752                           postinc2	equ	0xFDE
  1753                           postdec2	equ	0xFDD
  1754                           fsr2h	equ	0xFDA
  1755                           fsr2l	equ	0xFD9
  1756                           status	equ	0xFD8
  1757                           
  1758 ;; *************** function _clearTimer0Overflowed *****************
  1759 ;; Defined at:
  1760 ;;		line 38 in file "../src/PIC18/Clock.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;		None
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;		None
  1765 ;; Return value:  Size  Location     Type
  1766 ;;		None               void
  1767 ;; Registers used:
  1768 ;;		None
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/0
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1774 ;;      Params:         0       0       0       0       0       0       0
  1775 ;;      Locals:         0       0       0       0       0       0       0
  1776 ;;      Temps:          0       0       0       0       0       0       0
  1777 ;;      Totals:         0       0       0       0       0       0       0
  1778 ;;Total ram usage:        0 bytes
  1779 ;; Hardware stack levels used:    1
  1780 ;; This function calls:
  1781 ;;		Nothing
  1782 ;; This function is called by:
  1783 ;;		_getClock
  1784 ;; This function uses a non-reentrant model
  1785 ;;
  1786                           
  1787                           	psect	text14
  1788  0076C2                     __ptext14:
  1789                           	opt stack 0
  1790  0076C2                     _clearTimer0Overflowed:
  1791                           	opt stack 27
  1792                           
  1793                           ;Clock.c: 39: INTCONbits.TMR0IF = 0;
  1794                           
  1795                           ;incstack = 0
  1796  0076C2  94F2               	bcf	intcon,2,c	;volatile
  1797  0076C4  0012               	return	
  1798  0076C6                     __end_of_clearTimer0Overflowed:
  1799                           	opt stack 0
  1800                           tblptru	equ	0xFF8
  1801                           tblptrh	equ	0xFF7
  1802                           tblptrl	equ	0xFF6
  1803                           tablat	equ	0xFF5
  1804                           prodh	equ	0xFF4
  1805                           prodl	equ	0xFF3
  1806                           intcon	equ	0xFF2
  1807                           postinc0	equ	0xFEE
  1808                           postdec1	equ	0xFE5
  1809                           fsr1l	equ	0xFE1
  1810                           indf2	equ	0xFDF
  1811                           postinc2	equ	0xFDE
  1812                           postdec2	equ	0xFDD
  1813                           fsr2h	equ	0xFDA
  1814                           fsr2l	equ	0xFD9
  1815                           status	equ	0xFD8
  1816                           
  1817 ;; *************** function _configureLED *****************
  1818 ;; Defined at:
  1819 ;;		line 22 in file "../src/PIC18/Blinky.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;		None
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;		None
  1824 ;; Return value:  Size  Location     Type
  1825 ;;		None               void
  1826 ;; Registers used:
  1827 ;;		None
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1833 ;;      Params:         0       0       0       0       0       0       0
  1834 ;;      Locals:         0       0       0       0       0       0       0
  1835 ;;      Temps:          0       0       0       0       0       0       0
  1836 ;;      Totals:         0       0       0       0       0       0       0
  1837 ;;Total ram usage:        0 bytes
  1838 ;; Hardware stack levels used:    1
  1839 ;; This function calls:
  1840 ;;		Nothing
  1841 ;; This function is called by:
  1842 ;;		_ledSM
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           	psect	text15
  1847  0076BE                     __ptext15:
  1848                           	opt stack 0
  1849  0076BE                     _configureLED:
  1850                           	opt stack 28
  1851                           
  1852                           ;Blinky.c: 23: TRISCbits.TRISC0 = 0;
  1853                           
  1854                           ;incstack = 0
  1855  0076BE  9094               	bcf	3988,0,c	;volatile
  1856  0076C0  0012               	return	
  1857  0076C2                     __end_of_configureLED:
  1858                           	opt stack 0
  1859                           tblptru	equ	0xFF8
  1860                           tblptrh	equ	0xFF7
  1861                           tblptrl	equ	0xFF6
  1862                           tablat	equ	0xFF5
  1863                           prodh	equ	0xFF4
  1864                           prodl	equ	0xFF3
  1865                           intcon	equ	0xFF2
  1866                           postinc0	equ	0xFEE
  1867                           postdec1	equ	0xFE5
  1868                           fsr1l	equ	0xFE1
  1869                           indf2	equ	0xFDF
  1870                           postinc2	equ	0xFDE
  1871                           postdec2	equ	0xFDD
  1872                           fsr2h	equ	0xFDA
  1873                           fsr2l	equ	0xFD9
  1874                           status	equ	0xFD8
  1875                           
  1876 ;; *************** function _initUsartLoopback *****************
  1877 ;; Defined at:
  1878 ;;		line 7 in file "../src/PIC18/UsartLoopback.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;  loopbackData    2    0[COMRAM] PTR struct LoopbackData
  1881 ;;		 -> main@loopbackData(2), 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;		None
  1884 ;; Return value:  Size  Location     Type
  1885 ;;		None               void
  1886 ;; Registers used:
  1887 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1893 ;;      Params:         2       0       0       0       0       0       0
  1894 ;;      Locals:         0       0       0       0       0       0       0
  1895 ;;      Temps:          0       0       0       0       0       0       0
  1896 ;;      Totals:         2       0       0       0       0       0       0
  1897 ;;Total ram usage:        2 bytes
  1898 ;; Hardware stack levels used:    1
  1899 ;; This function calls:
  1900 ;;		Nothing
  1901 ;; This function is called by:
  1902 ;;		_main
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           	psect	text16
  1907  007776                     __ptext16:
  1908                           	opt stack 0
  1909  007776                     _initUsartLoopback:
  1910                           	opt stack 29
  1911                           
  1912                           ;UsartLoopback.c: 8: loopbackData->state = WAIT_DATA;
  1913                           
  1914                           ;incstack = 0
  1915  007776  C001  FFD9         	movff	initUsartLoopback@loopbackData,fsr2l
  1916  00777A  C002  FFDA         	movff	initUsartLoopback@loopbackData+1,fsr2h
  1917  00777E  0E00               	movlw	0
  1918  007780  6EDF               	movwf	indf2,c
  1919                           
  1920                           ;UsartLoopback.c: 9: loopbackData->dataByte = 0;
  1921  007782  EE20 F001          	lfsr	2,1
  1922  007786  5001               	movf	initUsartLoopback@loopbackData,w,c
  1923  007788  26D9               	addwf	fsr2l,f,c
  1924  00778A  5002               	movf	initUsartLoopback@loopbackData+1,w,c
  1925  00778C  22DA               	addwfc	fsr2h,f,c
  1926  00778E  0E00               	movlw	0
  1927  007790  6EDF               	movwf	indf2,c
  1928  007792  0012               	return	
  1929  007794                     __end_of_initUsartLoopback:
  1930                           	opt stack 0
  1931                           tblptru	equ	0xFF8
  1932                           tblptrh	equ	0xFF7
  1933                           tblptrl	equ	0xFF6
  1934                           tablat	equ	0xFF5
  1935                           prodh	equ	0xFF4
  1936                           prodl	equ	0xFF3
  1937                           intcon	equ	0xFF2
  1938                           postinc0	equ	0xFEE
  1939                           postdec1	equ	0xFE5
  1940                           fsr1l	equ	0xFE1
  1941                           indf2	equ	0xFDF
  1942                           postinc2	equ	0xFDE
  1943                           postdec2	equ	0xFDD
  1944                           fsr2h	equ	0xFDA
  1945                           fsr2l	equ	0xFD9
  1946                           status	equ	0xFD8
  1947                           
  1948 ;; *************** function _initLed *****************
  1949 ;; Defined at:
  1950 ;;		line 9 in file "../src/PIC18/LEDSM.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  ledData         2    0[COMRAM] PTR struct LEDData
  1953 ;;		 -> main@ledData(5), 
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;		None
  1956 ;; Return value:  Size  Location     Type
  1957 ;;		None               void
  1958 ;; Registers used:
  1959 ;;		wreg, fsr2l, fsr2h
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1965 ;;      Params:         2       0       0       0       0       0       0
  1966 ;;      Locals:         0       0       0       0       0       0       0
  1967 ;;      Temps:          0       0       0       0       0       0       0
  1968 ;;      Totals:         2       0       0       0       0       0       0
  1969 ;;Total ram usage:        2 bytes
  1970 ;; Hardware stack levels used:    1
  1971 ;; This function calls:
  1972 ;;		Nothing
  1973 ;; This function is called by:
  1974 ;;		_main
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           	psect	text17
  1979  0076E8                     __ptext17:
  1980                           	opt stack 0
  1981  0076E8                     _initLed:
  1982                           	opt stack 29
  1983                           
  1984                           ;LEDSM.c: 10: ledData->state = LED_START;
  1985                           
  1986                           ;incstack = 0
  1987  0076E8  C001  FFD9         	movff	initLed@ledData,fsr2l
  1988  0076EC  C002  FFDA         	movff	initLed@ledData+1,fsr2h
  1989  0076F0  0E00               	movlw	0
  1990  0076F2  6EDF               	movwf	indf2,c
  1991  0076F4  0012               	return	
  1992  0076F6                     __end_of_initLed:
  1993                           	opt stack 0
  1994                           tblptru	equ	0xFF8
  1995                           tblptrh	equ	0xFF7
  1996                           tblptrl	equ	0xFF6
  1997                           tablat	equ	0xFF5
  1998                           prodh	equ	0xFF4
  1999                           prodl	equ	0xFF3
  2000                           intcon	equ	0xFF2
  2001                           postinc0	equ	0xFEE
  2002                           postdec1	equ	0xFE5
  2003                           fsr1l	equ	0xFE1
  2004                           indf2	equ	0xFDF
  2005                           postinc2	equ	0xFDE
  2006                           postdec2	equ	0xFDD
  2007                           fsr2h	equ	0xFDA
  2008                           fsr2l	equ	0xFD9
  2009                           status	equ	0xFD8
  2010                           
  2011 ;; *************** function _initClock *****************
  2012 ;; Defined at:
  2013 ;;		line 11 in file "../src/PIC18/Clock.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;		None
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;		None
  2018 ;; Return value:  Size  Location     Type
  2019 ;;		None               void
  2020 ;; Registers used:
  2021 ;;		wreg, status,2, status,0, cstack
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2027 ;;      Params:         0       0       0       0       0       0       0
  2028 ;;      Locals:         0       0       0       0       0       0       0
  2029 ;;      Temps:          0       0       0       0       0       0       0
  2030 ;;      Totals:         0       0       0       0       0       0       0
  2031 ;;Total ram usage:        0 bytes
  2032 ;; Hardware stack levels used:    1
  2033 ;; Hardware stack levels required when called:    1
  2034 ;; This function calls:
  2035 ;;		_OpenTimer0
  2036 ;; This function is called by:
  2037 ;;		_main
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           	psect	text18
  2042  00772C                     __ptext18:
  2043                           	opt stack 0
  2044  00772C                     _initClock:
  2045                           	opt stack 28
  2046                           
  2047                           ;Clock.c: 12: clock = 0;
  2048                           
  2049                           ;incstack = 0
  2050  00772C  0E00               	movlw	0
  2051  00772E  6E37               	movwf	_clock,c
  2052  007730  0E00               	movlw	0
  2053  007732  6E38               	movwf	_clock+1,c
  2054  007734  0E00               	movlw	0
  2055  007736  6E39               	movwf	_clock+2,c
  2056  007738  0E00               	movlw	0
  2057  00773A  6E3A               	movwf	_clock+3,c
  2058                           
  2059                           ;Clock.c: 13: OpenTimer0( 0b01111111 &
  2060                           ;Clock.c: 14: 0b11111111 &
  2061                           ;Clock.c: 15: 0b11011111 &
  2062                           ;Clock.c: 16: 0b11110010);
  2063  00773C  0E52               	movlw	82
  2064  00773E  ECD9  F03B         	call	_OpenTimer0
  2065  007742  0012               	return	
  2066  007744                     __end_of_initClock:
  2067                           	opt stack 0
  2068                           tblptru	equ	0xFF8
  2069                           tblptrh	equ	0xFF7
  2070                           tblptrl	equ	0xFF6
  2071                           tablat	equ	0xFF5
  2072                           prodh	equ	0xFF4
  2073                           prodl	equ	0xFF3
  2074                           intcon	equ	0xFF2
  2075                           postinc0	equ	0xFEE
  2076                           postdec1	equ	0xFE5
  2077                           fsr1l	equ	0xFE1
  2078                           indf2	equ	0xFDF
  2079                           postinc2	equ	0xFDE
  2080                           postdec2	equ	0xFDD
  2081                           fsr2h	equ	0xFDA
  2082                           fsr2l	equ	0xFD9
  2083                           status	equ	0xFD8
  2084                           
  2085 ;; *************** function _OpenTimer0 *****************
  2086 ;; Defined at:
  2087 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t0open.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;  config          1    wreg     unsigned char 
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;  config          1    0[COMRAM] unsigned char 
  2092 ;; Return value:  Size  Location     Type
  2093 ;;		None               void
  2094 ;; Registers used:
  2095 ;;		wreg, status,2, status,0
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2101 ;;      Params:         0       0       0       0       0       0       0
  2102 ;;      Locals:         1       0       0       0       0       0       0
  2103 ;;      Temps:          0       0       0       0       0       0       0
  2104 ;;      Totals:         1       0       0       0       0       0       0
  2105 ;;Total ram usage:        1 bytes
  2106 ;; Hardware stack levels used:    1
  2107 ;; This function calls:
  2108 ;;		Nothing
  2109 ;; This function is called by:
  2110 ;;		_initClock
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           	psect	text19
  2115  0077B2                     __ptext19:
  2116                           	opt stack 0
  2117  0077B2                     _OpenTimer0:
  2118                           	opt stack 28
  2119                           
  2120                           ;incstack = 0
  2121                           ;OpenTimer0@config stored from wreg
  2122  0077B2  6E01               	movwf	OpenTimer0@config,c
  2123  0077B4  5001               	movf	OpenTimer0@config,w,c
  2124  0077B6  0B7F               	andlw	127
  2125  0077B8  6ED5               	movwf	4053,c	;volatile
  2126  0077BA  0E00               	movlw	0
  2127  0077BC  6ED7               	movwf	4055,c	;volatile
  2128  0077BE  0E00               	movlw	0
  2129  0077C0  6ED6               	movwf	4054,c	;volatile
  2130  0077C2  94F2               	bcf	intcon,2,c	;volatile
  2131  0077C4  AE01               	btfss	OpenTimer0@config,7,c
  2132  0077C6  D002               	goto	l227
  2133  0077C8  8AF2               	bsf	intcon,5,c	;volatile
  2134  0077CA  D001               	goto	l228
  2135  0077CC                     l227:
  2136  0077CC  9AF2               	bcf	intcon,5,c	;volatile
  2137  0077CE                     l228:
  2138  0077CE  8ED5               	bsf	4053,7,c	;volatile
  2139  0077D0  0012               	return	
  2140  0077D2                     __end_of_OpenTimer0:
  2141                           	opt stack 0
  2142                           tblptru	equ	0xFF8
  2143                           tblptrh	equ	0xFF7
  2144                           tblptrl	equ	0xFF6
  2145                           tablat	equ	0xFF5
  2146                           prodh	equ	0xFF4
  2147                           prodl	equ	0xFF3
  2148                           intcon	equ	0xFF2
  2149                           postinc0	equ	0xFEE
  2150                           postdec1	equ	0xFE5
  2151                           fsr1l	equ	0xFE1
  2152                           indf2	equ	0xFDF
  2153                           postinc2	equ	0xFDE
  2154                           postdec2	equ	0xFDD
  2155                           fsr2h	equ	0xFDA
  2156                           fsr2l	equ	0xFD9
  2157                           status	equ	0xFD8
  2158                           
  2159 ;; *************** function _init7Segment *****************
  2160 ;; Defined at:
  2161 ;;		line 30 in file "../src/PIC18/SevenSeg.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  data            2    0[COMRAM] PTR struct SevenSegmentD
  2164 ;;		 -> main@sevenSegData(6), 
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;		None
  2167 ;; Return value:  Size  Location     Type
  2168 ;;		None               void
  2169 ;; Registers used:
  2170 ;;		wreg, fsr2l, fsr2h
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2176 ;;      Params:         2       0       0       0       0       0       0
  2177 ;;      Locals:         0       0       0       0       0       0       0
  2178 ;;      Temps:          0       0       0       0       0       0       0
  2179 ;;      Totals:         2       0       0       0       0       0       0
  2180 ;;Total ram usage:        2 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; This function calls:
  2183 ;;		Nothing
  2184 ;; This function is called by:
  2185 ;;		_main
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           	psect	text20
  2190  0076DA                     __ptext20:
  2191                           	opt stack 0
  2192  0076DA                     _init7Segment:
  2193                           	opt stack 29
  2194                           
  2195                           ;SevenSeg.c: 31: data->state = _7SEG_INIT;
  2196                           
  2197                           ;incstack = 0
  2198  0076DA  C001  FFD9         	movff	init7Segment@data,fsr2l
  2199  0076DE  C002  FFDA         	movff	init7Segment@data+1,fsr2h
  2200  0076E2  0E00               	movlw	0
  2201  0076E4  6EDF               	movwf	indf2,c
  2202  0076E6  0012               	return	
  2203  0076E8                     __end_of_init7Segment:
  2204                           	opt stack 0
  2205                           tblptru	equ	0xFF8
  2206                           tblptrh	equ	0xFF7
  2207                           tblptrl	equ	0xFF6
  2208                           tablat	equ	0xFF5
  2209                           prodh	equ	0xFF4
  2210                           prodl	equ	0xFF3
  2211                           intcon	equ	0xFF2
  2212                           postinc0	equ	0xFEE
  2213                           postdec1	equ	0xFE5
  2214                           fsr1l	equ	0xFE1
  2215                           indf2	equ	0xFDF
  2216                           postinc2	equ	0xFDE
  2217                           postdec2	equ	0xFDD
  2218                           fsr2h	equ	0xFDA
  2219                           fsr2l	equ	0xFD9
  2220                           status	equ	0xFD8
  2221                           
  2222 ;; *************** function _OpenUSART *****************
  2223 ;; Defined at:
  2224 ;;		line 73 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uopen.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;  config          1    wreg     unsigned char 
  2227 ;;  spbrg           2    0[COMRAM] unsigned int 
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  config          1    5[COMRAM] unsigned char 
  2230 ;; Return value:  Size  Location     Type
  2231 ;;		None               void
  2232 ;; Registers used:
  2233 ;;		wreg, status,2
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2239 ;;      Params:         2       0       0       0       0       0       0
  2240 ;;      Locals:         1       0       0       0       0       0       0
  2241 ;;      Temps:          3       0       0       0       0       0       0
  2242 ;;      Totals:         6       0       0       0       0       0       0
  2243 ;;Total ram usage:        6 bytes
  2244 ;; Hardware stack levels used:    1
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		_main
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           	psect	text21
  2253  00794E                     __ptext21:
  2254                           	opt stack 0
  2255  00794E                     _OpenUSART:
  2256                           	opt stack 29
  2257                           
  2258                           ;incstack = 0
  2259                           ;OpenUSART@config stored from wreg
  2260  00794E  6E06               	movwf	OpenUSART@config,c
  2261  007950  0E00               	movlw	0
  2262  007952  6EAC               	movwf	4012,c	;volatile
  2263  007954  0E00               	movlw	0
  2264  007956  6EAB               	movwf	4011,c	;volatile
  2265  007958  B006               	btfsc	OpenUSART@config,0,c
  2266  00795A  88AC               	bsf	4012,4,c	;volatile
  2267  00795C  A206               	btfss	OpenUSART@config,1,c
  2268  00795E  D002               	goto	l976
  2269  007960  8CAC               	bsf	4012,6,c	;volatile
  2270  007962  8CAB               	bsf	4011,6,c	;volatile
  2271  007964                     l976:
  2272  007964  B406               	btfsc	OpenUSART@config,2,c
  2273  007966  8EAC               	bsf	4012,7,c	;volatile
  2274  007968  A606               	btfss	OpenUSART@config,3,c
  2275  00796A  D002               	goto	l253
  2276  00796C  88AB               	bsf	4011,4,c	;volatile
  2277  00796E  D001               	goto	l984
  2278  007970                     l253:
  2279  007970  8AAB               	bsf	4011,5,c	;volatile
  2280  007972                     l984:
  2281  007972  B806               	btfsc	OpenUSART@config,4,c
  2282  007974  84AC               	bsf	4012,2,c	;volatile
  2283  007976  989E               	bcf	3998,4,c	;volatile
  2284  007978  BA06               	btfsc	OpenUSART@config,5,c
  2285  00797A  86AB               	bsf	4011,3,c	;volatile
  2286  00797C  AC06               	btfss	OpenUSART@config,6,c
  2287  00797E  D002               	goto	l257
  2288  007980  8A9D               	bsf	3997,5,c	;volatile
  2289  007982  D001               	goto	l258
  2290  007984                     l257:
  2291  007984  9A9D               	bcf	3997,5,c	;volatile
  2292  007986                     l258:
  2293  007986  9A9E               	bcf	3998,5,c	;volatile
  2294  007988  AE06               	btfss	OpenUSART@config,7,c
  2295  00798A  D002               	goto	l259
  2296  00798C  889D               	bsf	3997,4,c	;volatile
  2297  00798E  D001               	goto	l260
  2298  007990                     l259:
  2299  007990  989D               	bcf	3997,4,c	;volatile
  2300  007992                     l260:
  2301  007992  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2302  007996  C002  F003         	movff	OpenUSART@spbrg+1,??_OpenUSART
  2303  00799A  C003  F004         	movff	??_OpenUSART,??_OpenUSART+1
  2304  00799E  6A05               	clrf	(??_OpenUSART+2)& (0+255),c
  2305  0079A0  5004               	movf	??_OpenUSART+1,w,c
  2306  0079A2  6EB0               	movwf	4016,c	;volatile
  2307  0079A4  8AAC               	bsf	4012,5,c	;volatile
  2308  0079A6  8EAB               	bsf	4011,7,c	;volatile
  2309  0079A8  9C94               	bcf	3988,6,c	;volatile
  2310  0079AA  8E94               	bsf	3988,7,c	;volatile
  2311  0079AC  B8AC               	btfsc	4012,4,c	;volatile
  2312  0079AE  BEAC               	btfsc	4012,7,c	;volatile
  2313  0079B0  D001               	goto	l262
  2314  0079B2  8C94               	bsf	3988,6,c	;volatile
  2315  0079B4                     l262:
  2316  0079B4  0012               	return	
  2317  0079B6                     __end_of_OpenUSART:
  2318                           	opt stack 0
  2319  0000                     tblptru	equ	0xFF8
  2320                           tblptrh	equ	0xFF7
  2321                           tblptrl	equ	0xFF6
  2322                           tablat	equ	0xFF5
  2323                           prodh	equ	0xFF4
  2324                           prodl	equ	0xFF3
  2325                           intcon	equ	0xFF2
  2326                           postinc0	equ	0xFEE
  2327                           postdec1	equ	0xFE5
  2328                           fsr1l	equ	0xFE1
  2329                           indf2	equ	0xFDF
  2330                           postinc2	equ	0xFDE
  2331                           postdec2	equ	0xFDD
  2332                           fsr2h	equ	0xFDA
  2333                           fsr2l	equ	0xFD9
  2334                           status	equ	0xFD8
  2335                           tblptru	equ	0xFF8
  2336                           tblptrh	equ	0xFF7
  2337                           tblptrl	equ	0xFF6
  2338                           tablat	equ	0xFF5
  2339                           prodh	equ	0xFF4
  2340                           prodl	equ	0xFF3
  2341                           intcon	equ	0xFF2
  2342                           postinc0	equ	0xFEE
  2343                           postdec1	equ	0xFE5
  2344                           fsr1l	equ	0xFE1
  2345                           indf2	equ	0xFDF
  2346                           postinc2	equ	0xFDE
  2347                           postdec2	equ	0xFDD
  2348                           fsr2h	equ	0xFDA
  2349                           fsr2l	equ	0xFD9
  2350                           status	equ	0xFD8
  2351                           
  2352                           	psect	rparam
  2353  0000                     tblptru	equ	0xFF8
  2354                           tblptrh	equ	0xFF7
  2355                           tblptrl	equ	0xFF6
  2356                           tablat	equ	0xFF5
  2357                           prodh	equ	0xFF4
  2358                           prodl	equ	0xFF3
  2359                           intcon	equ	0xFF2
  2360                           postinc0	equ	0xFEE
  2361                           postdec1	equ	0xFE5
  2362                           fsr1l	equ	0xFE1
  2363                           indf2	equ	0xFDF
  2364                           postinc2	equ	0xFDE
  2365                           postdec2	equ	0xFDD
  2366                           fsr2h	equ	0xFDA
  2367                           fsr2l	equ	0xFD9
  2368                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     38      59
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    sevenSegmentSM@data	PTR struct SevenSegmentData size(2) Largest target is 6
		 -> main@sevenSegData(COMRAM[6]), 

    init7Segment@data	PTR struct SevenSegmentData size(2) Largest target is 6
		 -> main@sevenSegData(COMRAM[6]), 

    usartLoopbackSM@loopbackData	PTR struct LoopbackData size(2) Largest target is 2
		 -> main@loopbackData(COMRAM[2]), 

    initUsartLoopback@loopbackData	PTR struct LoopbackData size(2) Largest target is 2
		 -> main@loopbackData(COMRAM[2]), 

    ledSM@ledData	PTR struct LEDData size(2) Largest target is 5
		 -> main@ledData(COMRAM[5]), 

    initLed@ledData	PTR struct LEDData size(2) Largest target is 5
		 -> main@ledData(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_ledSM
    _usartLoopbackSM->_ReadUSART
    _usartLoopbackSM->_WriteUSART
    _sevenSegmentSM->_getClock
    _write7Segment->_WriteSPI
    _init7SegmentHardware->_OpenSPI
    _ledSM->_getClock
    _initClock->_OpenTimer0

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    13      5    1332
                                             20 COMRAM    18    13      5
                          _OpenUSART
                       _init7Segment
                          _initClock
                            _initLed
                  _initUsartLoopback
                              _ledSM
                     _sevenSegmentSM
                    _usartLoopbackSM
 ---------------------------------------------------------------------------------
 (1) _usartLoopbackSM                                      2     0      2     178
                                              1 COMRAM     2     0      2
                          _ReadUSART
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ReadUSART                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sevenSegmentSM                                      14    12      2     414
                                              4 COMRAM    14    12      2
                           _getClock
               _init7SegmentHardware
                      _write7Segment
 ---------------------------------------------------------------------------------
 (2) _write7Segment                                        1     1      0      30
                                              2 COMRAM     1     1      0
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _WriteSPI                                             2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _init7SegmentHardware                                 0     0      0     146
                            _OpenSPI
 ---------------------------------------------------------------------------------
 (3) _OpenSPI                                              3     1      2     146
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ledSM                                               16    14      2     238
                                              4 COMRAM    16    14      2
                       _configureLED
                           _getClock
                             _offLED
                              _onLED
 ---------------------------------------------------------------------------------
 (2) _onLED                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _offLED                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getClock                                             4     0      4       0
                                              0 COMRAM     4     0      4
              _clearTimer0Overflowed
                _hasTimer0Overflowed
 ---------------------------------------------------------------------------------
 (3) _hasTimer0Overflowed                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clearTimer0Overflowed                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configureLED                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUsartLoopback                                    2     0      2      73
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initLed                                              2     0      2      58
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0      30
                         _OpenTimer0
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init7Segment                                         2     0      2      58
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     193
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenUSART
   _init7Segment
   _initClock
     _OpenTimer0
   _initLed
   _initUsartLoopback
   _ledSM
     _configureLED
     _getClock
       _clearTimer0Overflowed
       _hasTimer0Overflowed
     _offLED
     _onLED
   _sevenSegmentSM
     _getClock
       _clearTimer0Overflowed
       _hasTimer0Overflowed
     _init7SegmentHardware
       _OpenSPI
     _write7Segment
       _WriteSPI
   _usartLoopbackSM
     _ReadUSART
     _WriteUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     26      3B       1       46.5%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3B      14        0.0%
DATA                 0      0      3B      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Oct 27 17:51:09 2014

                 ?_configureLED 0001                     _SSPSTATbits 000FC7                              l87 76D8  
                            u10 76D6                             l210 775A                             l131 788E  
                           l116 7CFE                             l212 7756                             l135 78B2  
                           l227 77CC                             l139 78EA                             l260 7992  
                           l228 77CE                             l253 7970                             l262 79B4  
                           l190 784A                             l191 784C                             l271 77A2  
                           l257 7984                             l169 7B2A                             l258 7986  
                           l194 7866                             l259 7990                             l195 7884  
                           l196 786C                             l188 7846                             l197 7870  
                           l934 7712                             l954 77EC                             l892 7874  
                           l984 7972                             l976 7964                             l888 7850  
                           fsr2 000FD9                             prod 000FF3     __end_of_hasTimer0Overflowed 76DA  
                   main@ledData 0022                    __CFG_LVP$OFF 000000                    __CFG_WDT$OFF 000000  
                          l1110 7B12                            l1106 7B04                            l1044 78D4  
                          l1048 7B36                            l1080 7CE0                            l1074 7CC6  
                          l1066 7C12                            l1058 7BBA                            l1090 7A56  
                          l1138 7928                            l1076 7CD2                            l1092 7A68  
                          l1084 79B8                            l1096 7A9E                   __CFG_DEBUG$ON 000000  
                          _PIE1 000F9D                    __CFG_PWRT$ON 000000                            _main 78EC  
                          fsr2h 000FDA                            fsr1l 000FE1                            indf2 000FDF  
                          fsr2l 000FD9                            prodl 000FF3                            start 0002  
                ??_configureLED 0001         ??_clearTimer0Overflowed 0001                   ?_init7Segment 0001  
               __end_of_OpenSPI 788C                           ?_main 0015                           _T0CON 000FD5  
                         _RCREG 000FAE                           _RCSTA 000FAB                           _TMR0H 000FD7  
                         _TMR0L 000FD6                           _SPBRG 000FAF                           _TXREG 000FAD  
                         _TXSTA 000FAC                 _sevenSegPattern 0027                           _onLED 76CA  
                         _ledSM 7B2C                           _clock 0037                 __end_of_initLed 76F6  
                         tablat 000FF5                           status 000FD8                  WriteUSART@data 0001  
               __initialization 77FE                  ??_init7Segment 0003                    __end_of_main 794E  
                        ??_main 001A                   __activetblptr 000002                          ?_onLED 0001  
                        ?_ledSM 0005                __end_of_WriteSPI 775C                      _OpenTimer0 77B2  
            __size_of_ReadUSART 001E          __size_of_write7Segment 001A                          _SPBRGH 000FB0  
                        _SSPBUF 000FC9                __end_of_getClock 77FE                       ??_OpenSPI 0003  
            __size_of_OpenUSART 0068                OpenTimer0@config 0001                          _offLED 76C6  
               WriteSPI@TempVar 0001                       ??_initLed 0003                    __pdataCOMRAM 0027  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
          __end_of_configureLED 76C2   __size_of_init7SegmentHardware 0014                      __accesstop 0080  
       __end_of__initialization 7828                      _WriteUSART 7706                  __pcstackCOMRAM 0001  
                 __end_of_onLED 76CE                   __end_of_ledSM 7D00                   _write7Segment 775C  
             __end_of_ReadUSART 77B2        __size_of_usartLoopbackSM 0060                  initLed@ledData 0001  
                 ReadUSART@data 0001                         ??_onLED 0001                         ??_ledSM 0007  
             __end_of_OpenUSART 79B6            __end_of_init7Segment 76E8                     ?_OpenTimer0 0001  
            __size_of_initClock 0018               write7Segment@data 0003                         ?_offLED 0001  
__size_of_clearTimer0Overflowed 0004                  ?_write7Segment 0001   __end_of_clearTimer0Overflowed 76C6  
                     ?_WriteSPI 0001         __size_of_sevenSegmentSM 0176                       ?_getClock 0001  
                       _SSPCON1 000FC6                         _SSPSTAT 000FC7    __size_of_hasTimer0Overflowed 000C  
                       _OpenSPI 7832                         __Hparam 0000                         __Lparam 0000  
                   ?_WriteUSART 0001                 __size_of_offLED 0004                         __pcinit 77FE  
                       __ramtop 0600                      ??_WriteSPI 0001             __size_of_OpenTimer0 0020  
                       __ptext0 78EC                         __ptext1 788C                         __ptext2 7706  
                       __ptext3 7794                         __ptext4 79B6                         __ptext5 775C  
                       __ptext6 7744                         __ptext7 7718                         __ptext8 7832  
                       __ptext9 7B2C               __end_of_initClock 7744                       _T0CONbits 000FD5  
         __size_of_configureLED 0004                         _initLed 76E8                      ??_getClock 0005  
             ??_usartLoopbackSM 0004            end_of_initialization 7828                   __Lmediumconst 0000  
             _initUsartLoopback 7776                       _RCSTAbits 000FAB                 ??_write7Segment 0003  
                       postdec1 000FE5                         postdec2 000FDD                WriteSPI@data_out 0002  
            ?_initUsartLoopback 0001                    _configureLED 76BE                         postinc0 000FEE  
                       postinc2 000FDE                       _PORTCbits 000F82                       _PORTDbits 000F83  
           ??_initUsartLoopback 0003           __size_of_init7Segment 000E                init7Segment@data 0001  
                     _TRISAbits 000F92                       _TRISCbits 000F94                       _TRISDbits 000F95  
           __size_of_WriteUSART 0012                       _TXSTAbits 000FAC       __end_of_initUsartLoopback 7794  
                  _init7Segment 76DA    __end_of_init7SegmentHardware 772C                   __pidataCOMRAM 76F6  
                __end_of_offLED 76CA                OpenSPI@smp_phase 0002             start_initialization 77FE  
                     _ReadUSART 7794                  _sevenSegmentSM 79B6                OpenSPI@sync_mode 0003  
                  ??_OpenTimer0 0001                       _OpenUSART 794E                __CFG_OSC$INTIO67 000000  
                      ??_offLED 0001              __end_of_OpenTimer0 77D2             _hasTimer0Overflowed 76CE  
        __end_of_sevenSegmentSM 7B2C               __size_of_WriteSPI 0018                     __pbssCOMRAM 0037  
                    ?_ReadUSART 0001   initUsartLoopback@loopbackData 0001               __size_of_getClock 002C  
                    ?_OpenUSART 0001            ?_hasTimer0Overflowed 0001      __size_of_initUsartLoopback 001E  
              main@loopbackData 001A                        ?_OpenSPI 0001                    ??_WriteUSART 0001  
            sevenSegmentSM@data 0005                 _usartLoopbackSM 788C           _clearTimer0Overflowed 76C2  
               ?_sevenSegmentSM 0005                        ?_initLed 0001                       _initClock 772C  
                __size_of_onLED 0004                  __size_of_ledSM 01D4              __end_of_WriteUSART 7718  
          _init7SegmentHardware 7718           ??_hasTimer0Overflowed 0001                        _PIE1bits 000F9D  
                      _PIR1bits 000F9E                main@sevenSegData 001C                 OpenSPI@bus_mode 0001  
                   ??_ReadUSART 0001                      ?_initClock 0001                       copy_data0 781C  
   usartLoopbackSM@loopbackData 0002           ?_init7SegmentHardware 0001                     ??_OpenUSART 0003  
               OpenUSART@config 0006                        __Hrparam 0000         __end_of_usartLoopbackSM 78EC  
                      __Lrparam 0000                __size_of_OpenSPI 005A                    ledSM@ledData 0005  
         __end_of_write7Segment 7776          ?_clearTimer0Overflowed 0001                        _WriteSPI 7744  
              __size_of_initLed 000E                        _getClock 77D2                        __ptext10 76CA  
                      __ptext11 76C6                        __ptext20 76DA                        __ptext12 77D2  
                      __ptext21 794E                        __ptext13 76CE                        __ptext14 76C2  
                      __ptext15 76BE                        __ptext16 7776                        __ptext17 76E8  
                      __ptext18 772C                        __ptext19 77B2                   __size_of_main 0062  
                      ledSM@now 0013                        main@argc 0015                        main@argv 0017  
                    _INTCONbits 000FF2                  OpenUSART@spbrg 0001                     ??_initClock 0002  
        ??_init7SegmentHardware 0004                      _OSCCONbits 000FD3                ?_usartLoopbackSM 0002  
              ??_sevenSegmentSM 0007                     _SSPCON1bits 000FC6                    _USART_Status 003B  
